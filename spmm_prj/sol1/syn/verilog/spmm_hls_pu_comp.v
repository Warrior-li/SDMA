// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module spmm_hls_pu_comp (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        res_address0,
        res_ce0,
        res_we0,
        res_d0,
        a_value,
        a_y,
        Dbuf_address0,
        Dbuf_ce0,
        Dbuf_q0,
        K
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] res_address0;
output   res_ce0;
output   res_we0;
output  [31:0] res_d0;
input  [31:0] a_value;
input  [15:0] a_y;
output  [15:0] Dbuf_address0;
output   Dbuf_ce0;
input  [31:0] Dbuf_q0;
input  [29:0] K;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state4;
wire  signed [15:0] grp_fu_60_p2;
reg   [15:0] mul_reg_87;
wire    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start;
wire    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_done;
wire    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_idle;
wire    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_ready;
wire   [15:0] grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_Dbuf_address0;
wire    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_Dbuf_ce0;
wire   [15:0] grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_address0;
wire    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_ce0;
wire    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_we0;
wire   [31:0] grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_d0;
reg    grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start_reg;
wire    ap_CS_fsm_state5;
wire  signed [15:0] grp_fu_60_p0;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start_reg = 1'b0;
end

spmm_hls_pu_comp_Pipeline_VITIS_LOOP_129_1 grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start),
    .ap_done(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_done),
    .ap_idle(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_idle),
    .ap_ready(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_ready),
    .K(K),
    .mul(mul_reg_87),
    .Dbuf_address0(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_Dbuf_address0),
    .Dbuf_ce0(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_Dbuf_ce0),
    .Dbuf_q0(Dbuf_q0),
    .a_value(a_value),
    .res_address0(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_address0),
    .res_ce0(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_ce0),
    .res_we0(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_we0),
    .res_d0(grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_d0)
);

spmm_hls_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_60_p0),
    .din1(a_y),
    .ce(1'b1),
    .dout(grp_fu_60_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start_reg <= 1'b1;
        end else if ((grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_ready == 1'b1)) begin
            grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_reg_87 <= grp_fu_60_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Dbuf_address0 = grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_Dbuf_address0;

assign Dbuf_ce0 = grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_Dbuf_ce0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign grp_fu_60_p0 = K[15:0];

assign grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start = grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_ap_start_reg;

assign res_address0 = grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_address0;

assign res_ce0 = grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_ce0;

assign res_d0 = grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_d0;

assign res_we0 = grp_pu_comp_Pipeline_VITIS_LOOP_129_1_fu_44_res_we0;

endmodule //spmm_hls_pu_comp
