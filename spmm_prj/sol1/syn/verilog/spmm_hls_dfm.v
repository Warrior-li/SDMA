// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module spmm_hls_dfm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tile_y_address0,
        tile_y_ce0,
        tile_y_q0,
        tile_ref_address0,
        tile_ref_ce0,
        tile_ref_q0,
        Dbuf_address1,
        Dbuf_ce1,
        Dbuf_we1,
        Dbuf_d1,
        m_axi_gmem6_AWVALID,
        m_axi_gmem6_AWREADY,
        m_axi_gmem6_AWADDR,
        m_axi_gmem6_AWID,
        m_axi_gmem6_AWLEN,
        m_axi_gmem6_AWSIZE,
        m_axi_gmem6_AWBURST,
        m_axi_gmem6_AWLOCK,
        m_axi_gmem6_AWCACHE,
        m_axi_gmem6_AWPROT,
        m_axi_gmem6_AWQOS,
        m_axi_gmem6_AWREGION,
        m_axi_gmem6_AWUSER,
        m_axi_gmem6_WVALID,
        m_axi_gmem6_WREADY,
        m_axi_gmem6_WDATA,
        m_axi_gmem6_WSTRB,
        m_axi_gmem6_WLAST,
        m_axi_gmem6_WID,
        m_axi_gmem6_WUSER,
        m_axi_gmem6_ARVALID,
        m_axi_gmem6_ARREADY,
        m_axi_gmem6_ARADDR,
        m_axi_gmem6_ARID,
        m_axi_gmem6_ARLEN,
        m_axi_gmem6_ARSIZE,
        m_axi_gmem6_ARBURST,
        m_axi_gmem6_ARLOCK,
        m_axi_gmem6_ARCACHE,
        m_axi_gmem6_ARPROT,
        m_axi_gmem6_ARQOS,
        m_axi_gmem6_ARREGION,
        m_axi_gmem6_ARUSER,
        m_axi_gmem6_RVALID,
        m_axi_gmem6_RREADY,
        m_axi_gmem6_RDATA,
        m_axi_gmem6_RLAST,
        m_axi_gmem6_RID,
        m_axi_gmem6_RFIFONUM,
        m_axi_gmem6_RUSER,
        m_axi_gmem6_RRESP,
        m_axi_gmem6_BVALID,
        m_axi_gmem6_BREADY,
        m_axi_gmem6_BRESP,
        m_axi_gmem6_BID,
        m_axi_gmem6_BUSER,
        B,
        K
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] tile_y_address0;
output   tile_y_ce0;
input  [31:0] tile_y_q0;
output  [1:0] tile_ref_address0;
output   tile_ref_ce0;
input  [0:0] tile_ref_q0;
output  [15:0] Dbuf_address1;
output   Dbuf_ce1;
output   Dbuf_we1;
output  [31:0] Dbuf_d1;
output   m_axi_gmem6_AWVALID;
input   m_axi_gmem6_AWREADY;
output  [63:0] m_axi_gmem6_AWADDR;
output  [0:0] m_axi_gmem6_AWID;
output  [31:0] m_axi_gmem6_AWLEN;
output  [2:0] m_axi_gmem6_AWSIZE;
output  [1:0] m_axi_gmem6_AWBURST;
output  [1:0] m_axi_gmem6_AWLOCK;
output  [3:0] m_axi_gmem6_AWCACHE;
output  [2:0] m_axi_gmem6_AWPROT;
output  [3:0] m_axi_gmem6_AWQOS;
output  [3:0] m_axi_gmem6_AWREGION;
output  [0:0] m_axi_gmem6_AWUSER;
output   m_axi_gmem6_WVALID;
input   m_axi_gmem6_WREADY;
output  [31:0] m_axi_gmem6_WDATA;
output  [3:0] m_axi_gmem6_WSTRB;
output   m_axi_gmem6_WLAST;
output  [0:0] m_axi_gmem6_WID;
output  [0:0] m_axi_gmem6_WUSER;
output   m_axi_gmem6_ARVALID;
input   m_axi_gmem6_ARREADY;
output  [63:0] m_axi_gmem6_ARADDR;
output  [0:0] m_axi_gmem6_ARID;
output  [31:0] m_axi_gmem6_ARLEN;
output  [2:0] m_axi_gmem6_ARSIZE;
output  [1:0] m_axi_gmem6_ARBURST;
output  [1:0] m_axi_gmem6_ARLOCK;
output  [3:0] m_axi_gmem6_ARCACHE;
output  [2:0] m_axi_gmem6_ARPROT;
output  [3:0] m_axi_gmem6_ARQOS;
output  [3:0] m_axi_gmem6_ARREGION;
output  [0:0] m_axi_gmem6_ARUSER;
input   m_axi_gmem6_RVALID;
output   m_axi_gmem6_RREADY;
input  [31:0] m_axi_gmem6_RDATA;
input   m_axi_gmem6_RLAST;
input  [0:0] m_axi_gmem6_RID;
input  [8:0] m_axi_gmem6_RFIFONUM;
input  [0:0] m_axi_gmem6_RUSER;
input  [1:0] m_axi_gmem6_RRESP;
input   m_axi_gmem6_BVALID;
output   m_axi_gmem6_BREADY;
input  [1:0] m_axi_gmem6_BRESP;
input  [0:0] m_axi_gmem6_BID;
input  [0:0] m_axi_gmem6_BUSER;
input  [63:0] B;
input  [29:0] K;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tile_y_ce0;
reg tile_ref_ce0;
reg m_axi_gmem6_ARVALID;
reg[63:0] m_axi_gmem6_ARADDR;
reg[0:0] m_axi_gmem6_ARID;
reg[31:0] m_axi_gmem6_ARLEN;
reg[2:0] m_axi_gmem6_ARSIZE;
reg[1:0] m_axi_gmem6_ARBURST;
reg[1:0] m_axi_gmem6_ARLOCK;
reg[3:0] m_axi_gmem6_ARCACHE;
reg[2:0] m_axi_gmem6_ARPROT;
reg[3:0] m_axi_gmem6_ARQOS;
reg[3:0] m_axi_gmem6_ARREGION;
reg[0:0] m_axi_gmem6_ARUSER;
reg m_axi_gmem6_RREADY;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem6_blk_n_AR;
wire    ap_CS_fsm_state8;
wire   [31:0] K_cast1_fu_137_p1;
reg   [31:0] K_cast1_reg_256;
wire   [2:0] add_ln110_fu_160_p2;
reg   [2:0] add_ln110_reg_266;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln110_fu_166_p1;
reg   [63:0] zext_ln110_reg_271;
wire   [0:0] icmp_ln110_fu_154_p2;
wire   [15:0] trunc_ln110_fu_174_p1;
reg   [15:0] trunc_ln110_reg_281;
wire    ap_CS_fsm_state3;
reg   [0:0] tile_ref_load_reg_286;
reg  signed [31:0] tile_y_load_reg_295;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_188_p2;
reg   [31:0] mul_reg_300;
wire    ap_CS_fsm_state6;
reg   [61:0] trunc_ln5_reg_305;
wire    ap_CS_fsm_state7;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_done;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_idle;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_ready;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWVALID;
wire   [63:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWADDR;
wire   [0:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWID;
wire   [31:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWLEN;
wire   [2:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWSIZE;
wire   [1:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWBURST;
wire   [1:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWLOCK;
wire   [3:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWCACHE;
wire   [2:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWPROT;
wire   [3:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWQOS;
wire   [3:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWREGION;
wire   [0:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWUSER;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WVALID;
wire   [31:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WDATA;
wire   [3:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WSTRB;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WLAST;
wire   [0:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WID;
wire   [0:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WUSER;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARVALID;
wire   [63:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARADDR;
wire   [0:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARID;
wire   [31:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARLEN;
wire   [2:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARSIZE;
wire   [1:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARBURST;
wire   [1:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARLOCK;
wire   [3:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARCACHE;
wire   [2:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARPROT;
wire   [3:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARQOS;
wire   [3:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARREGION;
wire   [0:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARUSER;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_RREADY;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_BREADY;
wire   [15:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_address1;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_ce1;
wire    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_we1;
wire   [31:0] grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_d1;
reg    grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire  signed [63:0] sext_ln113_fu_218_p1;
reg   [2:0] i_fu_74;
reg    ap_block_state16_on_subcall_done;
reg   [31:0] Dlen_0_fu_78;
wire   [31:0] add_ln117_fu_178_p2;
wire   [29:0] grp_fu_188_p1;
wire    ap_CS_fsm_state5;
wire   [33:0] shl_ln_fu_192_p3;
wire   [63:0] zext_ln113_fu_199_p1;
wire   [63:0] add_ln113_fu_203_p2;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start_reg = 1'b0;
end

spmm_hls_dfm_Pipeline_VITIS_LOOP_113_2 grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start),
    .ap_done(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_done),
    .ap_idle(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_idle),
    .ap_ready(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_ready),
    .m_axi_gmem6_AWVALID(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWVALID),
    .m_axi_gmem6_AWREADY(1'b0),
    .m_axi_gmem6_AWADDR(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWADDR),
    .m_axi_gmem6_AWID(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWID),
    .m_axi_gmem6_AWLEN(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWLEN),
    .m_axi_gmem6_AWSIZE(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWSIZE),
    .m_axi_gmem6_AWBURST(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWBURST),
    .m_axi_gmem6_AWLOCK(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWLOCK),
    .m_axi_gmem6_AWCACHE(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWCACHE),
    .m_axi_gmem6_AWPROT(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWPROT),
    .m_axi_gmem6_AWQOS(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWQOS),
    .m_axi_gmem6_AWREGION(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWREGION),
    .m_axi_gmem6_AWUSER(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_AWUSER),
    .m_axi_gmem6_WVALID(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WVALID),
    .m_axi_gmem6_WREADY(1'b0),
    .m_axi_gmem6_WDATA(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WDATA),
    .m_axi_gmem6_WSTRB(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WSTRB),
    .m_axi_gmem6_WLAST(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WLAST),
    .m_axi_gmem6_WID(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WID),
    .m_axi_gmem6_WUSER(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_WUSER),
    .m_axi_gmem6_ARVALID(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARVALID),
    .m_axi_gmem6_ARREADY(m_axi_gmem6_ARREADY),
    .m_axi_gmem6_ARADDR(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARADDR),
    .m_axi_gmem6_ARID(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARID),
    .m_axi_gmem6_ARLEN(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARLEN),
    .m_axi_gmem6_ARSIZE(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARSIZE),
    .m_axi_gmem6_ARBURST(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARBURST),
    .m_axi_gmem6_ARLOCK(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARLOCK),
    .m_axi_gmem6_ARCACHE(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARCACHE),
    .m_axi_gmem6_ARPROT(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARPROT),
    .m_axi_gmem6_ARQOS(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARQOS),
    .m_axi_gmem6_ARREGION(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARREGION),
    .m_axi_gmem6_ARUSER(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARUSER),
    .m_axi_gmem6_RVALID(m_axi_gmem6_RVALID),
    .m_axi_gmem6_RREADY(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_RREADY),
    .m_axi_gmem6_RDATA(m_axi_gmem6_RDATA),
    .m_axi_gmem6_RLAST(m_axi_gmem6_RLAST),
    .m_axi_gmem6_RID(m_axi_gmem6_RID),
    .m_axi_gmem6_RFIFONUM(m_axi_gmem6_RFIFONUM),
    .m_axi_gmem6_RUSER(m_axi_gmem6_RUSER),
    .m_axi_gmem6_RRESP(m_axi_gmem6_RRESP),
    .m_axi_gmem6_BVALID(1'b0),
    .m_axi_gmem6_BREADY(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_BREADY),
    .m_axi_gmem6_BRESP(2'd0),
    .m_axi_gmem6_BID(1'd0),
    .m_axi_gmem6_BUSER(1'd0),
    .sext_ln113(trunc_ln5_reg_305),
    .K(K),
    .trunc_ln(trunc_ln110_reg_281),
    .Dbuf_address1(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_address1),
    .Dbuf_ce1(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_ce1),
    .Dbuf_we1(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_we1),
    .Dbuf_d1(grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_d1)
);

spmm_hls_mul_32s_30ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 32 ))
mul_32s_30ns_32_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tile_y_load_reg_295),
    .din1(grp_fu_188_p1),
    .ce(1'b1),
    .dout(grp_fu_188_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start_reg <= 1'b1;
        end else if ((grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_ready == 1'b1)) begin
            grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Dlen_0_fu_78 <= 32'd0;
    end else if (((tile_ref_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        Dlen_0_fu_78 <= add_ln117_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_74 <= 3'd0;
    end else if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        i_fu_74 <= add_ln110_reg_266;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        K_cast1_reg_256[29 : 0] <= K_cast1_fu_137_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln110_reg_266 <= add_ln110_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_reg_300 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tile_ref_load_reg_286 <= tile_ref_q0;
        trunc_ln110_reg_281 <= trunc_ln110_fu_174_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_y_load_reg_295 <= tile_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln5_reg_305 <= {{add_ln113_fu_203_p2[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln110_fu_154_p2 == 1'd0))) begin
        zext_ln110_reg_271[2 : 0] <= zext_ln110_fu_166_p1[2 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state16_on_subcall_done)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem6_ARREADY == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln110_fu_154_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln110_fu_154_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        gmem6_blk_n_AR = m_axi_gmem6_ARREADY;
    end else begin
        gmem6_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((m_axi_gmem6_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        m_axi_gmem6_ARADDR = sext_ln113_fu_218_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARADDR = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARADDR;
    end else begin
        m_axi_gmem6_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARBURST = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARBURST;
    end else begin
        m_axi_gmem6_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARCACHE = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARCACHE;
    end else begin
        m_axi_gmem6_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARID = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARID;
    end else begin
        m_axi_gmem6_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_gmem6_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        m_axi_gmem6_ARLEN = K_cast1_reg_256;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARLEN = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARLEN;
    end else begin
        m_axi_gmem6_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARLOCK = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARLOCK;
    end else begin
        m_axi_gmem6_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARPROT = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARPROT;
    end else begin
        m_axi_gmem6_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARQOS = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARQOS;
    end else begin
        m_axi_gmem6_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARREGION = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARREGION;
    end else begin
        m_axi_gmem6_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARSIZE = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARSIZE;
    end else begin
        m_axi_gmem6_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARUSER = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARUSER;
    end else begin
        m_axi_gmem6_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_gmem6_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        m_axi_gmem6_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_ARVALID = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_ARVALID;
    end else begin
        m_axi_gmem6_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (tile_ref_load_reg_286 == 1'd0)))) begin
        m_axi_gmem6_RREADY = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_m_axi_gmem6_RREADY;
    end else begin
        m_axi_gmem6_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tile_ref_ce0 = 1'b1;
    end else begin
        tile_ref_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tile_y_ce0 = 1'b1;
    end else begin
        tile_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln110_fu_154_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tile_ref_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((m_axi_gmem6_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Dbuf_address1 = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_address1;

assign Dbuf_ce1 = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_ce1;

assign Dbuf_d1 = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_d1;

assign Dbuf_we1 = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_Dbuf_we1;

assign K_cast1_fu_137_p1 = K;

assign add_ln110_fu_160_p2 = (i_fu_74 + 3'd1);

assign add_ln113_fu_203_p2 = (zext_ln113_fu_199_p1 + B);

assign add_ln117_fu_178_p2 = (Dlen_0_fu_78 + K_cast1_reg_256);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state16_on_subcall_done = ((grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_done == 1'b0) & (tile_ref_load_reg_286 == 1'd0));
end

assign grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start = grp_dfm_Pipeline_VITIS_LOOP_113_2_fu_126_ap_start_reg;

assign grp_fu_188_p1 = K_cast1_reg_256;

assign icmp_ln110_fu_154_p2 = ((i_fu_74 == 3'd4) ? 1'b1 : 1'b0);

assign m_axi_gmem6_AWADDR = 64'd0;

assign m_axi_gmem6_AWBURST = 2'd0;

assign m_axi_gmem6_AWCACHE = 4'd0;

assign m_axi_gmem6_AWID = 1'd0;

assign m_axi_gmem6_AWLEN = 32'd0;

assign m_axi_gmem6_AWLOCK = 2'd0;

assign m_axi_gmem6_AWPROT = 3'd0;

assign m_axi_gmem6_AWQOS = 4'd0;

assign m_axi_gmem6_AWREGION = 4'd0;

assign m_axi_gmem6_AWSIZE = 3'd0;

assign m_axi_gmem6_AWUSER = 1'd0;

assign m_axi_gmem6_AWVALID = 1'b0;

assign m_axi_gmem6_BREADY = 1'b0;

assign m_axi_gmem6_WDATA = 32'd0;

assign m_axi_gmem6_WID = 1'd0;

assign m_axi_gmem6_WLAST = 1'b0;

assign m_axi_gmem6_WSTRB = 4'd0;

assign m_axi_gmem6_WUSER = 1'd0;

assign m_axi_gmem6_WVALID = 1'b0;

assign sext_ln113_fu_218_p1 = $signed(trunc_ln5_reg_305);

assign shl_ln_fu_192_p3 = {{mul_reg_300}, {2'd0}};

assign tile_ref_address0 = zext_ln110_fu_166_p1;

assign tile_y_address0 = zext_ln110_reg_271;

assign trunc_ln110_fu_174_p1 = Dlen_0_fu_78[15:0];

assign zext_ln110_fu_166_p1 = i_fu_74;

assign zext_ln113_fu_199_p1 = shl_ln_fu_192_p3;

always @ (posedge ap_clk) begin
    K_cast1_reg_256[31:30] <= 2'b00;
    zext_ln110_reg_271[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //spmm_hls_dfm
