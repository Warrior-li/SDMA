// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module spmm_hls_pu_kernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_0_dout,
        s_0_empty_n,
        s_0_read,
        m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST,
        m_axi_gmem3_WID,
        m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST,
        m_axi_gmem3_RID,
        m_axi_gmem3_RFIFONUM,
        m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP,
        m_axi_gmem3_BID,
        m_axi_gmem3_BUSER,
        B,
        K
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [387:0] s_0_dout;
input   s_0_empty_n;
output   s_0_read;
output   m_axi_gmem3_AWVALID;
input   m_axi_gmem3_AWREADY;
output  [63:0] m_axi_gmem3_AWADDR;
output  [0:0] m_axi_gmem3_AWID;
output  [31:0] m_axi_gmem3_AWLEN;
output  [2:0] m_axi_gmem3_AWSIZE;
output  [1:0] m_axi_gmem3_AWBURST;
output  [1:0] m_axi_gmem3_AWLOCK;
output  [3:0] m_axi_gmem3_AWCACHE;
output  [2:0] m_axi_gmem3_AWPROT;
output  [3:0] m_axi_gmem3_AWQOS;
output  [3:0] m_axi_gmem3_AWREGION;
output  [0:0] m_axi_gmem3_AWUSER;
output   m_axi_gmem3_WVALID;
input   m_axi_gmem3_WREADY;
output  [31:0] m_axi_gmem3_WDATA;
output  [3:0] m_axi_gmem3_WSTRB;
output   m_axi_gmem3_WLAST;
output  [0:0] m_axi_gmem3_WID;
output  [0:0] m_axi_gmem3_WUSER;
output   m_axi_gmem3_ARVALID;
input   m_axi_gmem3_ARREADY;
output  [63:0] m_axi_gmem3_ARADDR;
output  [0:0] m_axi_gmem3_ARID;
output  [31:0] m_axi_gmem3_ARLEN;
output  [2:0] m_axi_gmem3_ARSIZE;
output  [1:0] m_axi_gmem3_ARBURST;
output  [1:0] m_axi_gmem3_ARLOCK;
output  [3:0] m_axi_gmem3_ARCACHE;
output  [2:0] m_axi_gmem3_ARPROT;
output  [3:0] m_axi_gmem3_ARQOS;
output  [3:0] m_axi_gmem3_ARREGION;
output  [0:0] m_axi_gmem3_ARUSER;
input   m_axi_gmem3_RVALID;
output   m_axi_gmem3_RREADY;
input  [31:0] m_axi_gmem3_RDATA;
input   m_axi_gmem3_RLAST;
input  [0:0] m_axi_gmem3_RID;
input  [8:0] m_axi_gmem3_RFIFONUM;
input  [0:0] m_axi_gmem3_RUSER;
input  [1:0] m_axi_gmem3_RRESP;
input   m_axi_gmem3_BVALID;
output   m_axi_gmem3_BREADY;
input  [1:0] m_axi_gmem3_BRESP;
input  [0:0] m_axi_gmem3_BID;
input  [0:0] m_axi_gmem3_BUSER;
input  [63:0] B;
input  [29:0] K;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg s_0_read;
reg m_axi_gmem3_ARVALID;
reg m_axi_gmem3_RREADY;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    s_0_blk_n;
reg   [31:0] p_v_y_0_reg_738;
reg   [31:0] p_v_y_1_reg_743;
reg   [31:0] p_v_y_2_reg_748;
reg   [31:0] p_v_y_3_reg_753;
reg   [0:0] p_ref_0_reg_758;
reg   [0:0] p_ref_1_reg_763;
reg   [0:0] p_ref_2_reg_768;
reg   [0:0] p_ref_3_reg_773;
wire   [31:0] p_v_value_0_fu_408_p1;
reg   [31:0] p_v_value_0_reg_778;
wire   [31:0] p_v_value_1_fu_413_p1;
reg   [31:0] p_v_value_1_reg_783;
wire   [31:0] p_v_value_2_fu_418_p1;
reg   [31:0] p_v_value_2_reg_788;
wire   [31:0] p_v_value_3_fu_423_p1;
reg   [31:0] p_v_value_3_reg_793;
wire    ap_CS_fsm_state3;
reg   [31:0] tile_to_dbuf_begin_0_reg_839;
wire    ap_CS_fsm_state4;
reg   [31:0] tile_to_dbuf_begin_1_reg_844;
reg   [31:0] tile_to_dbuf_begin_2_reg_849;
reg   [31:0] tile_to_dbuf_begin_3_reg_854;
wire   [31:0] select_ln266_fu_528_p3;
reg   [31:0] select_ln266_reg_862;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln263_fu_506_p2;
wire   [31:0] select_ln266_1_fu_535_p3;
reg   [31:0] select_ln266_1_reg_867;
wire   [15:0] select_ln266_2_fu_547_p3;
reg   [15:0] select_ln266_2_reg_872;
wire   [31:0] select_ln267_fu_568_p3;
reg   [31:0] select_ln267_reg_877;
wire   [31:0] select_ln267_1_fu_574_p3;
reg   [31:0] select_ln267_1_reg_882;
wire   [15:0] select_ln267_2_fu_586_p3;
reg   [15:0] select_ln267_2_reg_887;
reg    Dbuf_ce0;
wire   [31:0] Dbuf_q0;
reg    Dbuf_ce1;
reg    Dbuf_we1;
reg   [15:0] AU0_address0;
reg    AU0_ce0;
reg    AU0_we0;
reg   [31:0] AU0_d0;
reg    AU0_ce1;
wire   [31:0] AU0_q1;
reg   [15:0] AU1_address0;
reg    AU1_ce0;
reg    AU1_we0;
reg   [31:0] AU1_d0;
reg    AU1_ce1;
wire   [31:0] AU1_q1;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_done;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_idle;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_ready;
wire   [0:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_3_020_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_3_020_out_ap_vld;
wire   [0:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_2_019_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_2_019_out_ap_vld;
wire   [0:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_1_018_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_1_018_out_ap_vld;
wire   [0:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_0_017_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_0_017_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_3_016_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_3_016_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_2_015_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_2_015_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_1_014_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_1_014_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_0_013_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_0_013_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_3_0165_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_3_0165_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_2_0164_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_2_0164_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_1_0163_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_1_0163_out_ap_vld;
wire   [31:0] grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_0_0162_out;
wire    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_0_0162_out_ap_vld;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_ap_start;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_ap_done;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_ap_idle;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_ap_ready;
wire   [15:0] grp_pu_kernel_Pipeline_init_au_fu_244_AU0_address0;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_AU0_ce0;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_AU0_we0;
wire   [31:0] grp_pu_kernel_Pipeline_init_au_fu_244_AU0_d0;
wire   [15:0] grp_pu_kernel_Pipeline_init_au_fu_244_AU1_address0;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_AU1_ce0;
wire    grp_pu_kernel_Pipeline_init_au_fu_244_AU1_we0;
wire   [31:0] grp_pu_kernel_Pipeline_init_au_fu_244_AU1_d0;
wire    grp_dfm_fu_254_ap_start;
wire    grp_dfm_fu_254_ap_done;
wire    grp_dfm_fu_254_ap_idle;
wire    grp_dfm_fu_254_ap_ready;
wire   [15:0] grp_dfm_fu_254_Dbuf_address1;
wire    grp_dfm_fu_254_Dbuf_ce1;
wire    grp_dfm_fu_254_Dbuf_we1;
wire   [31:0] grp_dfm_fu_254_Dbuf_d1;
wire    grp_dfm_fu_254_m_axi_gmem3_AWVALID;
wire   [63:0] grp_dfm_fu_254_m_axi_gmem3_AWADDR;
wire   [0:0] grp_dfm_fu_254_m_axi_gmem3_AWID;
wire   [31:0] grp_dfm_fu_254_m_axi_gmem3_AWLEN;
wire   [2:0] grp_dfm_fu_254_m_axi_gmem3_AWSIZE;
wire   [1:0] grp_dfm_fu_254_m_axi_gmem3_AWBURST;
wire   [1:0] grp_dfm_fu_254_m_axi_gmem3_AWLOCK;
wire   [3:0] grp_dfm_fu_254_m_axi_gmem3_AWCACHE;
wire   [2:0] grp_dfm_fu_254_m_axi_gmem3_AWPROT;
wire   [3:0] grp_dfm_fu_254_m_axi_gmem3_AWQOS;
wire   [3:0] grp_dfm_fu_254_m_axi_gmem3_AWREGION;
wire   [0:0] grp_dfm_fu_254_m_axi_gmem3_AWUSER;
wire    grp_dfm_fu_254_m_axi_gmem3_WVALID;
wire   [31:0] grp_dfm_fu_254_m_axi_gmem3_WDATA;
wire   [3:0] grp_dfm_fu_254_m_axi_gmem3_WSTRB;
wire    grp_dfm_fu_254_m_axi_gmem3_WLAST;
wire   [0:0] grp_dfm_fu_254_m_axi_gmem3_WID;
wire   [0:0] grp_dfm_fu_254_m_axi_gmem3_WUSER;
wire    grp_dfm_fu_254_m_axi_gmem3_ARVALID;
wire   [63:0] grp_dfm_fu_254_m_axi_gmem3_ARADDR;
wire   [0:0] grp_dfm_fu_254_m_axi_gmem3_ARID;
wire   [31:0] grp_dfm_fu_254_m_axi_gmem3_ARLEN;
wire   [2:0] grp_dfm_fu_254_m_axi_gmem3_ARSIZE;
wire   [1:0] grp_dfm_fu_254_m_axi_gmem3_ARBURST;
wire   [1:0] grp_dfm_fu_254_m_axi_gmem3_ARLOCK;
wire   [3:0] grp_dfm_fu_254_m_axi_gmem3_ARCACHE;
wire   [2:0] grp_dfm_fu_254_m_axi_gmem3_ARPROT;
wire   [3:0] grp_dfm_fu_254_m_axi_gmem3_ARQOS;
wire   [3:0] grp_dfm_fu_254_m_axi_gmem3_ARREGION;
wire   [0:0] grp_dfm_fu_254_m_axi_gmem3_ARUSER;
wire    grp_dfm_fu_254_m_axi_gmem3_RREADY;
wire    grp_dfm_fu_254_m_axi_gmem3_BREADY;
wire   [31:0] grp_dfm_fu_254_ap_return_0;
wire   [31:0] grp_dfm_fu_254_ap_return_1;
wire   [31:0] grp_dfm_fu_254_ap_return_2;
wire   [31:0] grp_dfm_fu_254_ap_return_3;
wire    grp_pu_comp_fu_272_ap_start;
wire    grp_pu_comp_fu_272_ap_done;
wire    grp_pu_comp_fu_272_ap_idle;
wire    grp_pu_comp_fu_272_ap_ready;
wire   [31:0] grp_pu_comp_fu_272_streamA38_din;
reg    grp_pu_comp_fu_272_streamA38_full_n;
wire    grp_pu_comp_fu_272_streamA38_write;
reg   [31:0] grp_pu_comp_fu_272_a_value;
wire   [15:0] grp_pu_comp_fu_272_Dbuf_address0;
wire    grp_pu_comp_fu_272_Dbuf_ce0;
reg   [15:0] grp_pu_comp_fu_272_begin_r;
wire    grp_au_merge_fu_281_ap_start;
wire    grp_au_merge_fu_281_ap_done;
wire    grp_au_merge_fu_281_ap_idle;
wire    grp_au_merge_fu_281_ap_ready;
wire    grp_au_merge_fu_281_streamA38_read;
wire    grp_au_merge_fu_281_streamB39_read;
wire   [15:0] grp_au_merge_fu_281_AU0_address0;
wire    grp_au_merge_fu_281_AU0_ce0;
wire    grp_au_merge_fu_281_AU0_we0;
wire   [31:0] grp_au_merge_fu_281_AU0_d0;
wire   [15:0] grp_au_merge_fu_281_AU0_address1;
wire    grp_au_merge_fu_281_AU0_ce1;
wire   [15:0] grp_au_merge_fu_281_AU1_address0;
wire    grp_au_merge_fu_281_AU1_ce0;
wire    grp_au_merge_fu_281_AU1_we0;
wire   [31:0] grp_au_merge_fu_281_AU1_d0;
wire   [15:0] grp_au_merge_fu_281_AU1_address1;
wire    grp_au_merge_fu_281_AU1_ce1;
wire   [31:0] grp_au_merge_fu_281_ap_return_0;
wire   [31:0] grp_au_merge_fu_281_ap_return_1;
reg    grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start_reg;
reg    ap_block_state1_ignore_call46;
wire    ap_CS_fsm_state2;
reg    grp_pu_kernel_Pipeline_init_au_fu_244_ap_start_reg;
reg    ap_block_state1_ignore_call64;
reg    grp_dfm_fu_254_ap_start_reg;
reg    grp_pu_comp_fu_272_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    streamA_full_n;
reg    streamA_write;
wire    ap_CS_fsm_state6;
wire    streamB_full_n;
reg    streamB_write;
wire    ap_CS_fsm_state8;
reg    grp_au_merge_fu_281_ap_start_reg;
wire    ap_CS_fsm_state9;
wire   [31:0] streamA_dout;
wire    streamA_empty_n;
reg    streamA_read;
wire    ap_CS_fsm_state10;
wire   [31:0] streamB_dout;
wire    streamB_empty_n;
reg    streamB_read;
reg   [1:0] i_2_fu_118;
wire   [1:0] add_ln263_fu_512_p2;
reg    ap_block_state1;
reg   [31:0] au0_r_1_fu_122;
reg   [31:0] au1_r_1_fu_126;
wire   [31:0] trunc_ln238_fu_294_p1;
wire   [31:0] trunc_ln238_5_fu_309_p4;
wire   [31:0] trunc_ln238_8_fu_330_p4;
wire   [31:0] trunc_ln238_s_fu_351_p4;
wire   [0:0] trunc_ln266_fu_518_p1;
wire   [15:0] trunc_ln266_1_fu_541_p1;
wire   [15:0] trunc_ln266_2_fu_544_p1;
wire   [1:0] shl_ln266_fu_522_p2;
wire   [1:0] or_ln267_fu_556_p2;
wire   [0:0] icmp_ln267_fu_562_p2;
wire   [15:0] trunc_ln267_fu_580_p1;
wire   [15:0] trunc_ln267_1_fu_583_p1;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start_reg = 1'b0;
#0 grp_pu_kernel_Pipeline_init_au_fu_244_ap_start_reg = 1'b0;
#0 grp_dfm_fu_254_ap_start_reg = 1'b0;
#0 grp_pu_comp_fu_272_ap_start_reg = 1'b0;
#0 grp_au_merge_fu_281_ap_start_reg = 1'b0;
end

spmm_hls_pu_kernel_Dbuf_RAM_2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 61278 ),
    .AddressWidth( 16 ))
Dbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_pu_comp_fu_272_Dbuf_address0),
    .ce0(Dbuf_ce0),
    .q0(Dbuf_q0),
    .address1(grp_dfm_fu_254_Dbuf_address1),
    .ce1(Dbuf_ce1),
    .we1(Dbuf_we1),
    .d1(grp_dfm_fu_254_Dbuf_d1)
);

spmm_hls_pu_kernel_AU0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 61278 ),
    .AddressWidth( 16 ))
AU0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AU0_address0),
    .ce0(AU0_ce0),
    .we0(AU0_we0),
    .d0(AU0_d0),
    .address1(grp_au_merge_fu_281_AU0_address1),
    .ce1(AU0_ce1),
    .q1(AU0_q1)
);

spmm_hls_pu_kernel_AU0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 61278 ),
    .AddressWidth( 16 ))
AU1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AU1_address0),
    .ce0(AU1_ce0),
    .we0(AU1_we0),
    .d0(AU1_d0),
    .address1(grp_au_merge_fu_281_AU1_address1),
    .ce1(AU1_ce1),
    .q1(AU1_q1)
);

spmm_hls_pu_kernel_Pipeline_pu_save_stream_into_pu grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start),
    .ap_done(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_done),
    .ap_idle(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_idle),
    .ap_ready(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_ready),
    .p_ref_0(p_ref_0_reg_758),
    .p_ref_1(p_ref_1_reg_763),
    .p_ref_2(p_ref_2_reg_768),
    .p_ref_3(p_ref_3_reg_773),
    .p_v_value_0(p_v_value_0_reg_778),
    .p_v_value_1(p_v_value_1_reg_783),
    .p_v_value_2(p_v_value_2_reg_788),
    .p_v_value_3(p_v_value_3_reg_793),
    .p_v_y_0(p_v_y_0_reg_738),
    .p_v_y_1(p_v_y_1_reg_743),
    .p_v_y_2(p_v_y_2_reg_748),
    .p_v_y_3(p_v_y_3_reg_753),
    .tile_ref_3_020_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_3_020_out),
    .tile_ref_3_020_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_3_020_out_ap_vld),
    .tile_ref_2_019_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_2_019_out),
    .tile_ref_2_019_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_2_019_out_ap_vld),
    .tile_ref_1_018_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_1_018_out),
    .tile_ref_1_018_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_1_018_out_ap_vld),
    .tile_ref_0_017_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_0_017_out),
    .tile_ref_0_017_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_0_017_out_ap_vld),
    .tile_y_3_016_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_3_016_out),
    .tile_y_3_016_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_3_016_out_ap_vld),
    .tile_y_2_015_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_2_015_out),
    .tile_y_2_015_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_2_015_out_ap_vld),
    .tile_y_1_014_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_1_014_out),
    .tile_y_1_014_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_1_014_out_ap_vld),
    .tile_y_0_013_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_0_013_out),
    .tile_y_0_013_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_0_013_out_ap_vld),
    .tile_value_3_0165_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_3_0165_out),
    .tile_value_3_0165_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_3_0165_out_ap_vld),
    .tile_value_2_0164_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_2_0164_out),
    .tile_value_2_0164_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_2_0164_out_ap_vld),
    .tile_value_1_0163_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_1_0163_out),
    .tile_value_1_0163_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_1_0163_out_ap_vld),
    .tile_value_0_0162_out(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_0_0162_out),
    .tile_value_0_0162_out_ap_vld(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_0_0162_out_ap_vld)
);

spmm_hls_pu_kernel_Pipeline_init_au grp_pu_kernel_Pipeline_init_au_fu_244(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pu_kernel_Pipeline_init_au_fu_244_ap_start),
    .ap_done(grp_pu_kernel_Pipeline_init_au_fu_244_ap_done),
    .ap_idle(grp_pu_kernel_Pipeline_init_au_fu_244_ap_idle),
    .ap_ready(grp_pu_kernel_Pipeline_init_au_fu_244_ap_ready),
    .K(K),
    .AU0_address0(grp_pu_kernel_Pipeline_init_au_fu_244_AU0_address0),
    .AU0_ce0(grp_pu_kernel_Pipeline_init_au_fu_244_AU0_ce0),
    .AU0_we0(grp_pu_kernel_Pipeline_init_au_fu_244_AU0_we0),
    .AU0_d0(grp_pu_kernel_Pipeline_init_au_fu_244_AU0_d0),
    .AU1_address0(grp_pu_kernel_Pipeline_init_au_fu_244_AU1_address0),
    .AU1_ce0(grp_pu_kernel_Pipeline_init_au_fu_244_AU1_ce0),
    .AU1_we0(grp_pu_kernel_Pipeline_init_au_fu_244_AU1_we0),
    .AU1_d0(grp_pu_kernel_Pipeline_init_au_fu_244_AU1_d0)
);

spmm_hls_dfm grp_dfm_fu_254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dfm_fu_254_ap_start),
    .ap_done(grp_dfm_fu_254_ap_done),
    .ap_idle(grp_dfm_fu_254_ap_idle),
    .ap_ready(grp_dfm_fu_254_ap_ready),
    .p_read(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_0_013_out),
    .p_read1(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_1_014_out),
    .p_read2(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_2_015_out),
    .p_read3(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_3_016_out),
    .p_read4(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_0_017_out),
    .p_read5(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_1_018_out),
    .p_read6(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_2_019_out),
    .p_read7(grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_ref_3_020_out),
    .Dbuf_address1(grp_dfm_fu_254_Dbuf_address1),
    .Dbuf_ce1(grp_dfm_fu_254_Dbuf_ce1),
    .Dbuf_we1(grp_dfm_fu_254_Dbuf_we1),
    .Dbuf_d1(grp_dfm_fu_254_Dbuf_d1),
    .m_axi_gmem3_AWVALID(grp_dfm_fu_254_m_axi_gmem3_AWVALID),
    .m_axi_gmem3_AWREADY(1'b0),
    .m_axi_gmem3_AWADDR(grp_dfm_fu_254_m_axi_gmem3_AWADDR),
    .m_axi_gmem3_AWID(grp_dfm_fu_254_m_axi_gmem3_AWID),
    .m_axi_gmem3_AWLEN(grp_dfm_fu_254_m_axi_gmem3_AWLEN),
    .m_axi_gmem3_AWSIZE(grp_dfm_fu_254_m_axi_gmem3_AWSIZE),
    .m_axi_gmem3_AWBURST(grp_dfm_fu_254_m_axi_gmem3_AWBURST),
    .m_axi_gmem3_AWLOCK(grp_dfm_fu_254_m_axi_gmem3_AWLOCK),
    .m_axi_gmem3_AWCACHE(grp_dfm_fu_254_m_axi_gmem3_AWCACHE),
    .m_axi_gmem3_AWPROT(grp_dfm_fu_254_m_axi_gmem3_AWPROT),
    .m_axi_gmem3_AWQOS(grp_dfm_fu_254_m_axi_gmem3_AWQOS),
    .m_axi_gmem3_AWREGION(grp_dfm_fu_254_m_axi_gmem3_AWREGION),
    .m_axi_gmem3_AWUSER(grp_dfm_fu_254_m_axi_gmem3_AWUSER),
    .m_axi_gmem3_WVALID(grp_dfm_fu_254_m_axi_gmem3_WVALID),
    .m_axi_gmem3_WREADY(1'b0),
    .m_axi_gmem3_WDATA(grp_dfm_fu_254_m_axi_gmem3_WDATA),
    .m_axi_gmem3_WSTRB(grp_dfm_fu_254_m_axi_gmem3_WSTRB),
    .m_axi_gmem3_WLAST(grp_dfm_fu_254_m_axi_gmem3_WLAST),
    .m_axi_gmem3_WID(grp_dfm_fu_254_m_axi_gmem3_WID),
    .m_axi_gmem3_WUSER(grp_dfm_fu_254_m_axi_gmem3_WUSER),
    .m_axi_gmem3_ARVALID(grp_dfm_fu_254_m_axi_gmem3_ARVALID),
    .m_axi_gmem3_ARREADY(m_axi_gmem3_ARREADY),
    .m_axi_gmem3_ARADDR(grp_dfm_fu_254_m_axi_gmem3_ARADDR),
    .m_axi_gmem3_ARID(grp_dfm_fu_254_m_axi_gmem3_ARID),
    .m_axi_gmem3_ARLEN(grp_dfm_fu_254_m_axi_gmem3_ARLEN),
    .m_axi_gmem3_ARSIZE(grp_dfm_fu_254_m_axi_gmem3_ARSIZE),
    .m_axi_gmem3_ARBURST(grp_dfm_fu_254_m_axi_gmem3_ARBURST),
    .m_axi_gmem3_ARLOCK(grp_dfm_fu_254_m_axi_gmem3_ARLOCK),
    .m_axi_gmem3_ARCACHE(grp_dfm_fu_254_m_axi_gmem3_ARCACHE),
    .m_axi_gmem3_ARPROT(grp_dfm_fu_254_m_axi_gmem3_ARPROT),
    .m_axi_gmem3_ARQOS(grp_dfm_fu_254_m_axi_gmem3_ARQOS),
    .m_axi_gmem3_ARREGION(grp_dfm_fu_254_m_axi_gmem3_ARREGION),
    .m_axi_gmem3_ARUSER(grp_dfm_fu_254_m_axi_gmem3_ARUSER),
    .m_axi_gmem3_RVALID(m_axi_gmem3_RVALID),
    .m_axi_gmem3_RREADY(grp_dfm_fu_254_m_axi_gmem3_RREADY),
    .m_axi_gmem3_RDATA(m_axi_gmem3_RDATA),
    .m_axi_gmem3_RLAST(m_axi_gmem3_RLAST),
    .m_axi_gmem3_RID(m_axi_gmem3_RID),
    .m_axi_gmem3_RFIFONUM(m_axi_gmem3_RFIFONUM),
    .m_axi_gmem3_RUSER(m_axi_gmem3_RUSER),
    .m_axi_gmem3_RRESP(m_axi_gmem3_RRESP),
    .m_axi_gmem3_BVALID(1'b0),
    .m_axi_gmem3_BREADY(grp_dfm_fu_254_m_axi_gmem3_BREADY),
    .m_axi_gmem3_BRESP(2'd0),
    .m_axi_gmem3_BID(1'd0),
    .m_axi_gmem3_BUSER(1'd0),
    .B(B),
    .K(K),
    .ap_return_0(grp_dfm_fu_254_ap_return_0),
    .ap_return_1(grp_dfm_fu_254_ap_return_1),
    .ap_return_2(grp_dfm_fu_254_ap_return_2),
    .ap_return_3(grp_dfm_fu_254_ap_return_3)
);

spmm_hls_pu_comp grp_pu_comp_fu_272(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pu_comp_fu_272_ap_start),
    .ap_done(grp_pu_comp_fu_272_ap_done),
    .ap_idle(grp_pu_comp_fu_272_ap_idle),
    .ap_ready(grp_pu_comp_fu_272_ap_ready),
    .streamA38_din(grp_pu_comp_fu_272_streamA38_din),
    .streamA38_full_n(grp_pu_comp_fu_272_streamA38_full_n),
    .streamA38_write(grp_pu_comp_fu_272_streamA38_write),
    .a_value(grp_pu_comp_fu_272_a_value),
    .Dbuf_address0(grp_pu_comp_fu_272_Dbuf_address0),
    .Dbuf_ce0(grp_pu_comp_fu_272_Dbuf_ce0),
    .Dbuf_q0(Dbuf_q0),
    .K(K),
    .begin_r(grp_pu_comp_fu_272_begin_r)
);

spmm_hls_au_merge grp_au_merge_fu_281(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_au_merge_fu_281_ap_start),
    .ap_done(grp_au_merge_fu_281_ap_done),
    .ap_idle(grp_au_merge_fu_281_ap_idle),
    .ap_ready(grp_au_merge_fu_281_ap_ready),
    .streamA38_dout(streamA_dout),
    .streamA38_empty_n(streamA_empty_n),
    .streamA38_read(grp_au_merge_fu_281_streamA38_read),
    .streamB39_dout(streamB_dout),
    .streamB39_empty_n(streamB_empty_n),
    .streamB39_read(grp_au_merge_fu_281_streamB39_read),
    .rowA(select_ln266_1_reg_867),
    .rowB(select_ln267_1_reg_882),
    .AU0_address0(grp_au_merge_fu_281_AU0_address0),
    .AU0_ce0(grp_au_merge_fu_281_AU0_ce0),
    .AU0_we0(grp_au_merge_fu_281_AU0_we0),
    .AU0_d0(grp_au_merge_fu_281_AU0_d0),
    .AU0_address1(grp_au_merge_fu_281_AU0_address1),
    .AU0_ce1(grp_au_merge_fu_281_AU0_ce1),
    .AU0_q1(AU0_q1),
    .AU1_address0(grp_au_merge_fu_281_AU1_address0),
    .AU1_ce0(grp_au_merge_fu_281_AU1_ce0),
    .AU1_we0(grp_au_merge_fu_281_AU1_we0),
    .AU1_d0(grp_au_merge_fu_281_AU1_d0),
    .AU1_address1(grp_au_merge_fu_281_AU1_address1),
    .AU1_ce1(grp_au_merge_fu_281_AU1_ce1),
    .AU1_q1(AU1_q1),
    .p_read(au0_r_1_fu_122),
    .p_read1(au1_r_1_fu_126),
    .K(K),
    .ap_return_0(grp_au_merge_fu_281_ap_return_0),
    .ap_return_1(grp_au_merge_fu_281_ap_return_1)
);

spmm_hls_fifo_w32_d61278_A streamA_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_pu_comp_fu_272_streamA38_din),
    .if_full_n(streamA_full_n),
    .if_write(streamA_write),
    .if_dout(streamA_dout),
    .if_empty_n(streamA_empty_n),
    .if_read(streamA_read)
);

spmm_hls_fifo_w32_d61278_A streamB_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_pu_comp_fu_272_streamA38_din),
    .if_full_n(streamB_full_n),
    .if_write(streamB_write),
    .if_dout(streamB_dout),
    .if_empty_n(streamB_empty_n),
    .if_read(streamB_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_au_merge_fu_281_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_au_merge_fu_281_ap_start_reg <= 1'b1;
        end else if ((grp_au_merge_fu_281_ap_ready == 1'b1)) begin
            grp_au_merge_fu_281_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dfm_fu_254_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_dfm_fu_254_ap_start_reg <= 1'b1;
        end else if ((grp_dfm_fu_254_ap_ready == 1'b1)) begin
            grp_dfm_fu_254_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pu_comp_fu_272_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln263_fu_506_p2 == 1'd0)))) begin
            grp_pu_comp_fu_272_ap_start_reg <= 1'b1;
        end else if ((grp_pu_comp_fu_272_ap_ready == 1'b1)) begin
            grp_pu_comp_fu_272_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pu_kernel_Pipeline_init_au_fu_244_ap_start_reg <= 1'b0;
    end else begin
        if ((~((s_0_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_pu_kernel_Pipeline_init_au_fu_244_ap_start_reg <= 1'b1;
        end else if ((grp_pu_kernel_Pipeline_init_au_fu_244_ap_ready == 1'b1)) begin
            grp_pu_kernel_Pipeline_init_au_fu_244_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start_reg <= 1'b0;
    end else begin
        if ((~((s_0_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start_reg <= 1'b1;
        end else if ((grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_ready == 1'b1)) begin
            grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_0_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        au0_r_1_fu_122 <= 32'd4294967295;
    end else if (((grp_au_merge_fu_281_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        au0_r_1_fu_122 <= grp_au_merge_fu_281_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_0_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        au1_r_1_fu_126 <= 32'd4294967295;
    end else if (((grp_au_merge_fu_281_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        au1_r_1_fu_126 <= grp_au_merge_fu_281_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_0_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_2_fu_118 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln263_fu_506_p2 == 1'd0))) begin
        i_2_fu_118 <= add_ln263_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_ref_0_reg_758 <= s_0_dout[32'd384];
        p_ref_1_reg_763 <= s_0_dout[32'd385];
        p_ref_2_reg_768 <= s_0_dout[32'd386];
        p_ref_3_reg_773 <= s_0_dout[32'd387];
        p_v_value_0_reg_778 <= p_v_value_0_fu_408_p1;
        p_v_value_1_reg_783 <= p_v_value_1_fu_413_p1;
        p_v_value_2_reg_788 <= p_v_value_2_fu_418_p1;
        p_v_value_3_reg_793 <= p_v_value_3_fu_423_p1;
        p_v_y_0_reg_738 <= {{s_0_dout[95:64]}};
        p_v_y_1_reg_743 <= {{s_0_dout[191:160]}};
        p_v_y_2_reg_748 <= {{s_0_dout[287:256]}};
        p_v_y_3_reg_753 <= {{s_0_dout[383:352]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln263_fu_506_p2 == 1'd0))) begin
        select_ln266_1_reg_867 <= select_ln266_1_fu_535_p3;
        select_ln266_2_reg_872 <= select_ln266_2_fu_547_p3;
        select_ln266_reg_862 <= select_ln266_fu_528_p3;
        select_ln267_1_reg_882 <= select_ln267_1_fu_574_p3;
        select_ln267_2_reg_887 <= select_ln267_2_fu_586_p3;
        select_ln267_reg_877 <= select_ln267_fu_568_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_to_dbuf_begin_0_reg_839 <= grp_dfm_fu_254_ap_return_0;
        tile_to_dbuf_begin_1_reg_844 <= grp_dfm_fu_254_ap_return_1;
        tile_to_dbuf_begin_2_reg_849 <= grp_dfm_fu_254_ap_return_2;
        tile_to_dbuf_begin_3_reg_854 <= grp_dfm_fu_254_ap_return_3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU0_address0 = grp_au_merge_fu_281_AU0_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU0_address0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU0_address0;
    end else begin
        AU0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU0_ce0 = grp_au_merge_fu_281_AU0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU0_ce0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU0_ce0;
    end else begin
        AU0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU0_ce1 = grp_au_merge_fu_281_AU0_ce1;
    end else begin
        AU0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU0_d0 = grp_au_merge_fu_281_AU0_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU0_d0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU0_d0;
    end else begin
        AU0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU0_we0 = grp_au_merge_fu_281_AU0_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU0_we0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU0_we0;
    end else begin
        AU0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU1_address0 = grp_au_merge_fu_281_AU1_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU1_address0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU1_address0;
    end else begin
        AU1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU1_ce0 = grp_au_merge_fu_281_AU1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU1_ce0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU1_ce0;
    end else begin
        AU1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU1_ce1 = grp_au_merge_fu_281_AU1_ce1;
    end else begin
        AU1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU1_d0 = grp_au_merge_fu_281_AU1_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU1_d0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU1_d0;
    end else begin
        AU1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        AU1_we0 = grp_au_merge_fu_281_AU1_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AU1_we0 = grp_pu_kernel_Pipeline_init_au_fu_244_AU1_we0;
    end else begin
        AU1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        Dbuf_ce0 = grp_pu_comp_fu_272_Dbuf_ce0;
    end else begin
        Dbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Dbuf_ce1 = grp_dfm_fu_254_Dbuf_ce1;
    end else begin
        Dbuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Dbuf_we1 = grp_dfm_fu_254_Dbuf_we1;
    end else begin
        Dbuf_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_au_merge_fu_281_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if (((s_0_empty_n == 1'b0) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_dfm_fu_254_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_pu_comp_fu_272_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_pu_comp_fu_272_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln263_fu_506_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln263_fu_506_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_pu_comp_fu_272_a_value = select_ln267_reg_877;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_pu_comp_fu_272_a_value = select_ln266_reg_862;
    end else begin
        grp_pu_comp_fu_272_a_value = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_pu_comp_fu_272_begin_r = select_ln267_2_reg_887;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_pu_comp_fu_272_begin_r = select_ln266_2_reg_872;
    end else begin
        grp_pu_comp_fu_272_begin_r = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_pu_comp_fu_272_streamA38_full_n = streamB_full_n;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_pu_comp_fu_272_streamA38_full_n = streamA_full_n;
    end else begin
        grp_pu_comp_fu_272_streamA38_full_n = streamB_full_n;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem3_ARVALID = grp_dfm_fu_254_m_axi_gmem3_ARVALID;
    end else begin
        m_axi_gmem3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem3_RREADY = grp_dfm_fu_254_m_axi_gmem3_RREADY;
    end else begin
        m_axi_gmem3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        s_0_blk_n = s_0_empty_n;
    end else begin
        s_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_0_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_0_read = 1'b1;
    end else begin
        s_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        streamA_read = grp_au_merge_fu_281_streamA38_read;
    end else begin
        streamA_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        streamA_write = grp_pu_comp_fu_272_streamA38_write;
    end else begin
        streamA_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        streamB_read = grp_au_merge_fu_281_streamB39_read;
    end else begin
        streamB_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        streamB_write = grp_pu_comp_fu_272_streamA38_write;
    end else begin
        streamB_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((s_0_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_dfm_fu_254_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln263_fu_506_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_pu_comp_fu_272_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_pu_comp_fu_272_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_au_merge_fu_281_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln263_fu_512_p2 = (i_2_fu_118 + 2'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((s_0_empty_n == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call46 = ((s_0_empty_n == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call64 = ((s_0_empty_n == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_pu_kernel_Pipeline_init_au_fu_244_ap_done == 1'b0) | (grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_done == 1'b0));
end

assign grp_au_merge_fu_281_ap_start = grp_au_merge_fu_281_ap_start_reg;

assign grp_dfm_fu_254_ap_start = grp_dfm_fu_254_ap_start_reg;

assign grp_pu_comp_fu_272_ap_start = grp_pu_comp_fu_272_ap_start_reg;

assign grp_pu_kernel_Pipeline_init_au_fu_244_ap_start = grp_pu_kernel_Pipeline_init_au_fu_244_ap_start_reg;

assign grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start = grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_ap_start_reg;

assign icmp_ln263_fu_506_p2 = ((i_2_fu_118 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_562_p2 = ((or_ln267_fu_556_p2 == 2'd1) ? 1'b1 : 1'b0);

assign m_axi_gmem3_ARADDR = grp_dfm_fu_254_m_axi_gmem3_ARADDR;

assign m_axi_gmem3_ARBURST = grp_dfm_fu_254_m_axi_gmem3_ARBURST;

assign m_axi_gmem3_ARCACHE = grp_dfm_fu_254_m_axi_gmem3_ARCACHE;

assign m_axi_gmem3_ARID = grp_dfm_fu_254_m_axi_gmem3_ARID;

assign m_axi_gmem3_ARLEN = grp_dfm_fu_254_m_axi_gmem3_ARLEN;

assign m_axi_gmem3_ARLOCK = grp_dfm_fu_254_m_axi_gmem3_ARLOCK;

assign m_axi_gmem3_ARPROT = grp_dfm_fu_254_m_axi_gmem3_ARPROT;

assign m_axi_gmem3_ARQOS = grp_dfm_fu_254_m_axi_gmem3_ARQOS;

assign m_axi_gmem3_ARREGION = grp_dfm_fu_254_m_axi_gmem3_ARREGION;

assign m_axi_gmem3_ARSIZE = grp_dfm_fu_254_m_axi_gmem3_ARSIZE;

assign m_axi_gmem3_ARUSER = grp_dfm_fu_254_m_axi_gmem3_ARUSER;

assign m_axi_gmem3_AWADDR = 64'd0;

assign m_axi_gmem3_AWBURST = 2'd0;

assign m_axi_gmem3_AWCACHE = 4'd0;

assign m_axi_gmem3_AWID = 1'd0;

assign m_axi_gmem3_AWLEN = 32'd0;

assign m_axi_gmem3_AWLOCK = 2'd0;

assign m_axi_gmem3_AWPROT = 3'd0;

assign m_axi_gmem3_AWQOS = 4'd0;

assign m_axi_gmem3_AWREGION = 4'd0;

assign m_axi_gmem3_AWSIZE = 3'd0;

assign m_axi_gmem3_AWUSER = 1'd0;

assign m_axi_gmem3_AWVALID = 1'b0;

assign m_axi_gmem3_BREADY = 1'b0;

assign m_axi_gmem3_WDATA = 32'd0;

assign m_axi_gmem3_WID = 1'd0;

assign m_axi_gmem3_WLAST = 1'b0;

assign m_axi_gmem3_WSTRB = 4'd0;

assign m_axi_gmem3_WUSER = 1'd0;

assign m_axi_gmem3_WVALID = 1'b0;

assign or_ln267_fu_556_p2 = (shl_ln266_fu_522_p2 | 2'd1);

assign p_v_value_0_fu_408_p1 = trunc_ln238_fu_294_p1;

assign p_v_value_1_fu_413_p1 = trunc_ln238_5_fu_309_p4;

assign p_v_value_2_fu_418_p1 = trunc_ln238_8_fu_330_p4;

assign p_v_value_3_fu_423_p1 = trunc_ln238_s_fu_351_p4;

assign select_ln266_1_fu_535_p3 = ((trunc_ln266_fu_518_p1[0:0] == 1'b1) ? grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_2_015_out : grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_0_013_out);

assign select_ln266_2_fu_547_p3 = ((trunc_ln266_fu_518_p1[0:0] == 1'b1) ? trunc_ln266_1_fu_541_p1 : trunc_ln266_2_fu_544_p1);

assign select_ln266_fu_528_p3 = ((trunc_ln266_fu_518_p1[0:0] == 1'b1) ? grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_2_0164_out : grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_0_0162_out);

assign select_ln267_1_fu_574_p3 = ((icmp_ln267_fu_562_p2[0:0] == 1'b1) ? grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_1_014_out : grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_y_3_016_out);

assign select_ln267_2_fu_586_p3 = ((icmp_ln267_fu_562_p2[0:0] == 1'b1) ? trunc_ln267_fu_580_p1 : trunc_ln267_1_fu_583_p1);

assign select_ln267_fu_568_p3 = ((icmp_ln267_fu_562_p2[0:0] == 1'b1) ? grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_1_0163_out : grp_pu_kernel_Pipeline_pu_save_stream_into_pu_fu_216_tile_value_3_0165_out);

assign shl_ln266_fu_522_p2 = i_2_fu_118 << 2'd1;

assign trunc_ln238_5_fu_309_p4 = {{s_0_dout[127:96]}};

assign trunc_ln238_8_fu_330_p4 = {{s_0_dout[223:192]}};

assign trunc_ln238_fu_294_p1 = s_0_dout[31:0];

assign trunc_ln238_s_fu_351_p4 = {{s_0_dout[319:288]}};

assign trunc_ln266_1_fu_541_p1 = tile_to_dbuf_begin_2_reg_849[15:0];

assign trunc_ln266_2_fu_544_p1 = tile_to_dbuf_begin_0_reg_839[15:0];

assign trunc_ln266_fu_518_p1 = i_2_fu_118[0:0];

assign trunc_ln267_1_fu_583_p1 = tile_to_dbuf_begin_3_reg_854[15:0];

assign trunc_ln267_fu_580_p1 = tile_to_dbuf_begin_1_reg_844[15:0];

endmodule //spmm_hls_pu_kernel
