-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spmm_hls_dataflow_in_loop_row_loop is
port (
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    col_idx : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    a_val : IN STD_LOGIC_VECTOR (63 downto 0);
    i : IN STD_LOGIC_VECTOR (31 downto 0);
    nnz : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    B1 : IN STD_LOGIC_VECTOR (63 downto 0);
    K : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem4_AWVALID : OUT STD_LOGIC;
    m_axi_gmem4_AWREADY : IN STD_LOGIC;
    m_axi_gmem4_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem4_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_WVALID : OUT STD_LOGIC;
    m_axi_gmem4_WREADY : IN STD_LOGIC;
    m_axi_gmem4_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem4_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_WLAST : OUT STD_LOGIC;
    m_axi_gmem4_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_ARVALID : OUT STD_LOGIC;
    m_axi_gmem4_ARREADY : IN STD_LOGIC;
    m_axi_gmem4_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem4_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_RVALID : IN STD_LOGIC;
    m_axi_gmem4_RREADY : OUT STD_LOGIC;
    m_axi_gmem4_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem4_RLAST : IN STD_LOGIC;
    m_axi_gmem4_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem4_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BVALID : IN STD_LOGIC;
    m_axi_gmem4_BREADY : OUT STD_LOGIC;
    m_axi_gmem4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem4_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    B2 : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem5_AWVALID : OUT STD_LOGIC;
    m_axi_gmem5_AWREADY : IN STD_LOGIC;
    m_axi_gmem5_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem5_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_WVALID : OUT STD_LOGIC;
    m_axi_gmem5_WREADY : IN STD_LOGIC;
    m_axi_gmem5_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem5_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_WLAST : OUT STD_LOGIC;
    m_axi_gmem5_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_ARVALID : OUT STD_LOGIC;
    m_axi_gmem5_ARREADY : IN STD_LOGIC;
    m_axi_gmem5_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem5_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_RVALID : IN STD_LOGIC;
    m_axi_gmem5_RREADY : OUT STD_LOGIC;
    m_axi_gmem5_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem5_RLAST : IN STD_LOGIC;
    m_axi_gmem5_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem5_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_BVALID : IN STD_LOGIC;
    m_axi_gmem5_BREADY : OUT STD_LOGIC;
    m_axi_gmem5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem5_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    B3 : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem6_AWVALID : OUT STD_LOGIC;
    m_axi_gmem6_AWREADY : IN STD_LOGIC;
    m_axi_gmem6_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem6_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem6_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem6_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem6_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem6_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem6_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem6_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem6_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem6_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_WVALID : OUT STD_LOGIC;
    m_axi_gmem6_WREADY : IN STD_LOGIC;
    m_axi_gmem6_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem6_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem6_WLAST : OUT STD_LOGIC;
    m_axi_gmem6_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_ARVALID : OUT STD_LOGIC;
    m_axi_gmem6_ARREADY : IN STD_LOGIC;
    m_axi_gmem6_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem6_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem6_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem6_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem6_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem6_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem6_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem6_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem6_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem6_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_RVALID : IN STD_LOGIC;
    m_axi_gmem6_RREADY : OUT STD_LOGIC;
    m_axi_gmem6_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem6_RLAST : IN STD_LOGIC;
    m_axi_gmem6_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem6_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem6_BVALID : IN STD_LOGIC;
    m_axi_gmem6_BREADY : OUT STD_LOGIC;
    m_axi_gmem6_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem6_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem6_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    B4 : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    col_idx_ap_vld : IN STD_LOGIC;
    a_val_ap_vld : IN STD_LOGIC;
    i_ap_vld : IN STD_LOGIC;
    nnz_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    B1_ap_vld : IN STD_LOGIC;
    K_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    B2_ap_vld : IN STD_LOGIC;
    B3_ap_vld : IN STD_LOGIC;
    B4_ap_vld : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of spmm_hls_dataflow_in_loop_row_loop is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal set_tile_broadcast_U0_ap_start : STD_LOGIC;
    signal set_tile_broadcast_U0_ap_done : STD_LOGIC;
    signal set_tile_broadcast_U0_ap_continue : STD_LOGIC;
    signal set_tile_broadcast_U0_ap_idle : STD_LOGIC;
    signal set_tile_broadcast_U0_ap_ready : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_WVALID : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_WLAST : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem1_RREADY : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem1_BREADY : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_WVALID : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_WLAST : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tile_broadcast_U0_m_axi_gmem2_RREADY : STD_LOGIC;
    signal set_tile_broadcast_U0_m_axi_gmem2_BREADY : STD_LOGIC;
    signal set_tile_broadcast_U0_s_0_din : STD_LOGIC_VECTOR (387 downto 0);
    signal set_tile_broadcast_U0_s_0_write : STD_LOGIC;
    signal set_tile_broadcast_U0_s_1_din : STD_LOGIC_VECTOR (387 downto 0);
    signal set_tile_broadcast_U0_s_1_write : STD_LOGIC;
    signal set_tile_broadcast_U0_s_2_din : STD_LOGIC_VECTOR (387 downto 0);
    signal set_tile_broadcast_U0_s_2_write : STD_LOGIC;
    signal set_tile_broadcast_U0_s_3_din : STD_LOGIC_VECTOR (387 downto 0);
    signal set_tile_broadcast_U0_s_3_write : STD_LOGIC;
    signal pu_kernel_U0_ap_start : STD_LOGIC;
    signal pu_kernel_U0_ap_done : STD_LOGIC;
    signal pu_kernel_U0_ap_continue : STD_LOGIC;
    signal pu_kernel_U0_ap_idle : STD_LOGIC;
    signal pu_kernel_U0_ap_ready : STD_LOGIC;
    signal pu_kernel_U0_s_01_read : STD_LOGIC;
    signal pu_kernel_U0_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal pu_kernel_U0_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_WVALID : STD_LOGIC;
    signal pu_kernel_U0_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_WLAST : STD_LOGIC;
    signal pu_kernel_U0_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal pu_kernel_U0_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_U0_m_axi_gmem3_RREADY : STD_LOGIC;
    signal pu_kernel_U0_m_axi_gmem3_BREADY : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal pu_kernel_8_U0_ap_start : STD_LOGIC;
    signal pu_kernel_8_U0_ap_done : STD_LOGIC;
    signal pu_kernel_8_U0_ap_continue : STD_LOGIC;
    signal pu_kernel_8_U0_ap_idle : STD_LOGIC;
    signal pu_kernel_8_U0_ap_ready : STD_LOGIC;
    signal pu_kernel_8_U0_s_12_read : STD_LOGIC;
    signal pu_kernel_8_U0_m_axi_gmem4_AWVALID : STD_LOGIC;
    signal pu_kernel_8_U0_m_axi_gmem4_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_WVALID : STD_LOGIC;
    signal pu_kernel_8_U0_m_axi_gmem4_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_WLAST : STD_LOGIC;
    signal pu_kernel_8_U0_m_axi_gmem4_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARVALID : STD_LOGIC;
    signal pu_kernel_8_U0_m_axi_gmem4_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_8_U0_m_axi_gmem4_RREADY : STD_LOGIC;
    signal pu_kernel_8_U0_m_axi_gmem4_BREADY : STD_LOGIC;
    signal pu_kernel_9_U0_ap_start : STD_LOGIC;
    signal pu_kernel_9_U0_ap_done : STD_LOGIC;
    signal pu_kernel_9_U0_ap_continue : STD_LOGIC;
    signal pu_kernel_9_U0_ap_idle : STD_LOGIC;
    signal pu_kernel_9_U0_ap_ready : STD_LOGIC;
    signal pu_kernel_9_U0_s_23_read : STD_LOGIC;
    signal pu_kernel_9_U0_m_axi_gmem5_AWVALID : STD_LOGIC;
    signal pu_kernel_9_U0_m_axi_gmem5_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_WVALID : STD_LOGIC;
    signal pu_kernel_9_U0_m_axi_gmem5_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_WLAST : STD_LOGIC;
    signal pu_kernel_9_U0_m_axi_gmem5_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARVALID : STD_LOGIC;
    signal pu_kernel_9_U0_m_axi_gmem5_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_9_U0_m_axi_gmem5_RREADY : STD_LOGIC;
    signal pu_kernel_9_U0_m_axi_gmem5_BREADY : STD_LOGIC;
    signal pu_kernel_10_U0_ap_start : STD_LOGIC;
    signal pu_kernel_10_U0_ap_done : STD_LOGIC;
    signal pu_kernel_10_U0_ap_continue : STD_LOGIC;
    signal pu_kernel_10_U0_ap_idle : STD_LOGIC;
    signal pu_kernel_10_U0_ap_ready : STD_LOGIC;
    signal pu_kernel_10_U0_s_34_read : STD_LOGIC;
    signal pu_kernel_10_U0_m_axi_gmem6_AWVALID : STD_LOGIC;
    signal pu_kernel_10_U0_m_axi_gmem6_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_WVALID : STD_LOGIC;
    signal pu_kernel_10_U0_m_axi_gmem6_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_WLAST : STD_LOGIC;
    signal pu_kernel_10_U0_m_axi_gmem6_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARVALID : STD_LOGIC;
    signal pu_kernel_10_U0_m_axi_gmem6_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pu_kernel_10_U0_m_axi_gmem6_RREADY : STD_LOGIC;
    signal pu_kernel_10_U0_m_axi_gmem6_BREADY : STD_LOGIC;
    signal s_01_full_n : STD_LOGIC;
    signal s_01_dout : STD_LOGIC_VECTOR (387 downto 0);
    signal s_01_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal s_01_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal s_01_empty_n : STD_LOGIC;
    signal s_12_full_n : STD_LOGIC;
    signal s_12_dout : STD_LOGIC_VECTOR (387 downto 0);
    signal s_12_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal s_12_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal s_12_empty_n : STD_LOGIC;
    signal s_23_full_n : STD_LOGIC;
    signal s_23_dout : STD_LOGIC_VECTOR (387 downto 0);
    signal s_23_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal s_23_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal s_23_empty_n : STD_LOGIC;
    signal s_34_full_n : STD_LOGIC;
    signal s_34_dout : STD_LOGIC_VECTOR (387 downto 0);
    signal s_34_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal s_34_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal s_34_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_set_tile_broadcast_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_set_tile_broadcast_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_pu_kernel_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_pu_kernel_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_pu_kernel_8_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_pu_kernel_8_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_pu_kernel_9_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_pu_kernel_9_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_pu_kernel_10_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_pu_kernel_10_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component spmm_hls_set_tile_broadcast IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        col_idx : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        a_val : IN STD_LOGIC_VECTOR (63 downto 0);
        s_0_din : OUT STD_LOGIC_VECTOR (387 downto 0);
        s_0_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_0_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_0_full_n : IN STD_LOGIC;
        s_0_write : OUT STD_LOGIC;
        s_1_din : OUT STD_LOGIC_VECTOR (387 downto 0);
        s_1_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_1_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_1_full_n : IN STD_LOGIC;
        s_1_write : OUT STD_LOGIC;
        s_2_din : OUT STD_LOGIC_VECTOR (387 downto 0);
        s_2_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_2_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_2_full_n : IN STD_LOGIC;
        s_2_write : OUT STD_LOGIC;
        s_3_din : OUT STD_LOGIC_VECTOR (387 downto 0);
        s_3_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_3_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_3_full_n : IN STD_LOGIC;
        s_3_write : OUT STD_LOGIC;
        pointer : IN STD_LOGIC_VECTOR (31 downto 0);
        nnz : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spmm_hls_pu_kernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_01_dout : IN STD_LOGIC_VECTOR (387 downto 0);
        s_01_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_01_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_01_empty_n : IN STD_LOGIC;
        s_01_read : OUT STD_LOGIC;
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        B1 : IN STD_LOGIC_VECTOR (63 downto 0);
        K : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spmm_hls_pu_kernel_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_12_dout : IN STD_LOGIC_VECTOR (387 downto 0);
        s_12_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_12_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_12_empty_n : IN STD_LOGIC;
        s_12_read : OUT STD_LOGIC;
        m_axi_gmem4_AWVALID : OUT STD_LOGIC;
        m_axi_gmem4_AWREADY : IN STD_LOGIC;
        m_axi_gmem4_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem4_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_WVALID : OUT STD_LOGIC;
        m_axi_gmem4_WREADY : IN STD_LOGIC;
        m_axi_gmem4_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_WLAST : OUT STD_LOGIC;
        m_axi_gmem4_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_ARVALID : OUT STD_LOGIC;
        m_axi_gmem4_ARREADY : IN STD_LOGIC;
        m_axi_gmem4_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem4_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RVALID : IN STD_LOGIC;
        m_axi_gmem4_RREADY : OUT STD_LOGIC;
        m_axi_gmem4_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_RLAST : IN STD_LOGIC;
        m_axi_gmem4_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem4_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_BVALID : IN STD_LOGIC;
        m_axi_gmem4_BREADY : OUT STD_LOGIC;
        m_axi_gmem4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        B2 : IN STD_LOGIC_VECTOR (63 downto 0);
        K : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spmm_hls_pu_kernel_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_23_dout : IN STD_LOGIC_VECTOR (387 downto 0);
        s_23_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_23_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_23_empty_n : IN STD_LOGIC;
        s_23_read : OUT STD_LOGIC;
        m_axi_gmem5_AWVALID : OUT STD_LOGIC;
        m_axi_gmem5_AWREADY : IN STD_LOGIC;
        m_axi_gmem5_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem5_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_WVALID : OUT STD_LOGIC;
        m_axi_gmem5_WREADY : IN STD_LOGIC;
        m_axi_gmem5_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_WLAST : OUT STD_LOGIC;
        m_axi_gmem5_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_ARVALID : OUT STD_LOGIC;
        m_axi_gmem5_ARREADY : IN STD_LOGIC;
        m_axi_gmem5_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem5_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RVALID : IN STD_LOGIC;
        m_axi_gmem5_RREADY : OUT STD_LOGIC;
        m_axi_gmem5_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_RLAST : IN STD_LOGIC;
        m_axi_gmem5_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem5_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_BVALID : IN STD_LOGIC;
        m_axi_gmem5_BREADY : OUT STD_LOGIC;
        m_axi_gmem5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        B3 : IN STD_LOGIC_VECTOR (63 downto 0);
        K : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spmm_hls_pu_kernel_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_34_dout : IN STD_LOGIC_VECTOR (387 downto 0);
        s_34_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        s_34_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        s_34_empty_n : IN STD_LOGIC;
        s_34_read : OUT STD_LOGIC;
        m_axi_gmem6_AWVALID : OUT STD_LOGIC;
        m_axi_gmem6_AWREADY : IN STD_LOGIC;
        m_axi_gmem6_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem6_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem6_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem6_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem6_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem6_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem6_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem6_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem6_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem6_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_WVALID : OUT STD_LOGIC;
        m_axi_gmem6_WREADY : IN STD_LOGIC;
        m_axi_gmem6_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem6_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem6_WLAST : OUT STD_LOGIC;
        m_axi_gmem6_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_ARVALID : OUT STD_LOGIC;
        m_axi_gmem6_ARREADY : IN STD_LOGIC;
        m_axi_gmem6_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem6_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem6_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem6_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem6_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem6_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem6_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem6_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem6_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem6_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_RVALID : IN STD_LOGIC;
        m_axi_gmem6_RREADY : OUT STD_LOGIC;
        m_axi_gmem6_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem6_RLAST : IN STD_LOGIC;
        m_axi_gmem6_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem6_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem6_BVALID : IN STD_LOGIC;
        m_axi_gmem6_BREADY : OUT STD_LOGIC;
        m_axi_gmem6_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem6_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem6_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        B4 : IN STD_LOGIC_VECTOR (63 downto 0);
        K : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spmm_hls_fifo_w388_d16_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (387 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (387 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    set_tile_broadcast_U0 : component spmm_hls_set_tile_broadcast
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => set_tile_broadcast_U0_ap_start,
        ap_done => set_tile_broadcast_U0_ap_done,
        ap_continue => set_tile_broadcast_U0_ap_continue,
        ap_idle => set_tile_broadcast_U0_ap_idle,
        ap_ready => set_tile_broadcast_U0_ap_ready,
        m_axi_gmem1_AWVALID => set_tile_broadcast_U0_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => set_tile_broadcast_U0_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => set_tile_broadcast_U0_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => set_tile_broadcast_U0_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => set_tile_broadcast_U0_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => set_tile_broadcast_U0_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => set_tile_broadcast_U0_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => set_tile_broadcast_U0_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => set_tile_broadcast_U0_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => set_tile_broadcast_U0_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => set_tile_broadcast_U0_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => set_tile_broadcast_U0_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => set_tile_broadcast_U0_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => set_tile_broadcast_U0_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => set_tile_broadcast_U0_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => set_tile_broadcast_U0_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => set_tile_broadcast_U0_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => set_tile_broadcast_U0_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => set_tile_broadcast_U0_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => set_tile_broadcast_U0_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => set_tile_broadcast_U0_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => set_tile_broadcast_U0_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => set_tile_broadcast_U0_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => set_tile_broadcast_U0_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => set_tile_broadcast_U0_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => set_tile_broadcast_U0_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => set_tile_broadcast_U0_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => set_tile_broadcast_U0_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => set_tile_broadcast_U0_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => set_tile_broadcast_U0_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => set_tile_broadcast_U0_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM => m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => set_tile_broadcast_U0_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        col_idx => col_idx,
        m_axi_gmem2_AWVALID => set_tile_broadcast_U0_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => ap_const_logic_0,
        m_axi_gmem2_AWADDR => set_tile_broadcast_U0_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => set_tile_broadcast_U0_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => set_tile_broadcast_U0_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => set_tile_broadcast_U0_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => set_tile_broadcast_U0_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => set_tile_broadcast_U0_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => set_tile_broadcast_U0_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => set_tile_broadcast_U0_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => set_tile_broadcast_U0_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => set_tile_broadcast_U0_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => set_tile_broadcast_U0_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => set_tile_broadcast_U0_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => ap_const_logic_0,
        m_axi_gmem2_WDATA => set_tile_broadcast_U0_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => set_tile_broadcast_U0_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => set_tile_broadcast_U0_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => set_tile_broadcast_U0_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => set_tile_broadcast_U0_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => set_tile_broadcast_U0_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR => set_tile_broadcast_U0_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => set_tile_broadcast_U0_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => set_tile_broadcast_U0_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => set_tile_broadcast_U0_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => set_tile_broadcast_U0_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => set_tile_broadcast_U0_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => set_tile_broadcast_U0_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => set_tile_broadcast_U0_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => set_tile_broadcast_U0_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => set_tile_broadcast_U0_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => set_tile_broadcast_U0_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY => set_tile_broadcast_U0_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST => m_axi_gmem2_RLAST,
        m_axi_gmem2_RID => m_axi_gmem2_RID,
        m_axi_gmem2_RFIFONUM => m_axi_gmem2_RFIFONUM,
        m_axi_gmem2_RUSER => m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP => m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID => ap_const_logic_0,
        m_axi_gmem2_BREADY => set_tile_broadcast_U0_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => ap_const_lv2_0,
        m_axi_gmem2_BID => ap_const_lv1_0,
        m_axi_gmem2_BUSER => ap_const_lv1_0,
        a_val => a_val,
        s_0_din => set_tile_broadcast_U0_s_0_din,
        s_0_num_data_valid => s_01_num_data_valid,
        s_0_fifo_cap => s_01_fifo_cap,
        s_0_full_n => s_01_full_n,
        s_0_write => set_tile_broadcast_U0_s_0_write,
        s_1_din => set_tile_broadcast_U0_s_1_din,
        s_1_num_data_valid => s_12_num_data_valid,
        s_1_fifo_cap => s_12_fifo_cap,
        s_1_full_n => s_12_full_n,
        s_1_write => set_tile_broadcast_U0_s_1_write,
        s_2_din => set_tile_broadcast_U0_s_2_din,
        s_2_num_data_valid => s_23_num_data_valid,
        s_2_fifo_cap => s_23_fifo_cap,
        s_2_full_n => s_23_full_n,
        s_2_write => set_tile_broadcast_U0_s_2_write,
        s_3_din => set_tile_broadcast_U0_s_3_din,
        s_3_num_data_valid => s_34_num_data_valid,
        s_3_fifo_cap => s_34_fifo_cap,
        s_3_full_n => s_34_full_n,
        s_3_write => set_tile_broadcast_U0_s_3_write,
        pointer => i,
        nnz => nnz);

    pu_kernel_U0 : component spmm_hls_pu_kernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => pu_kernel_U0_ap_start,
        ap_done => pu_kernel_U0_ap_done,
        ap_continue => pu_kernel_U0_ap_continue,
        ap_idle => pu_kernel_U0_ap_idle,
        ap_ready => pu_kernel_U0_ap_ready,
        s_01_dout => s_01_dout,
        s_01_num_data_valid => s_01_num_data_valid,
        s_01_fifo_cap => s_01_fifo_cap,
        s_01_empty_n => s_01_empty_n,
        s_01_read => pu_kernel_U0_s_01_read,
        m_axi_gmem3_AWVALID => pu_kernel_U0_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => ap_const_logic_0,
        m_axi_gmem3_AWADDR => pu_kernel_U0_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => pu_kernel_U0_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => pu_kernel_U0_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => pu_kernel_U0_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => pu_kernel_U0_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => pu_kernel_U0_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => pu_kernel_U0_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => pu_kernel_U0_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => pu_kernel_U0_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => pu_kernel_U0_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => pu_kernel_U0_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => pu_kernel_U0_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => ap_const_logic_0,
        m_axi_gmem3_WDATA => pu_kernel_U0_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => pu_kernel_U0_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => pu_kernel_U0_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => pu_kernel_U0_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => pu_kernel_U0_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => pu_kernel_U0_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR => pu_kernel_U0_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => pu_kernel_U0_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => pu_kernel_U0_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => pu_kernel_U0_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => pu_kernel_U0_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => pu_kernel_U0_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => pu_kernel_U0_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => pu_kernel_U0_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => pu_kernel_U0_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => pu_kernel_U0_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => pu_kernel_U0_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY => pu_kernel_U0_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST => m_axi_gmem3_RLAST,
        m_axi_gmem3_RID => m_axi_gmem3_RID,
        m_axi_gmem3_RFIFONUM => m_axi_gmem3_RFIFONUM,
        m_axi_gmem3_RUSER => m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP => m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID => ap_const_logic_0,
        m_axi_gmem3_BREADY => pu_kernel_U0_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => ap_const_lv2_0,
        m_axi_gmem3_BID => ap_const_lv1_0,
        m_axi_gmem3_BUSER => ap_const_lv1_0,
        B1 => B1,
        K => K);

    pu_kernel_8_U0 : component spmm_hls_pu_kernel_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => pu_kernel_8_U0_ap_start,
        ap_done => pu_kernel_8_U0_ap_done,
        ap_continue => pu_kernel_8_U0_ap_continue,
        ap_idle => pu_kernel_8_U0_ap_idle,
        ap_ready => pu_kernel_8_U0_ap_ready,
        s_12_dout => s_12_dout,
        s_12_num_data_valid => s_12_num_data_valid,
        s_12_fifo_cap => s_12_fifo_cap,
        s_12_empty_n => s_12_empty_n,
        s_12_read => pu_kernel_8_U0_s_12_read,
        m_axi_gmem4_AWVALID => pu_kernel_8_U0_m_axi_gmem4_AWVALID,
        m_axi_gmem4_AWREADY => ap_const_logic_0,
        m_axi_gmem4_AWADDR => pu_kernel_8_U0_m_axi_gmem4_AWADDR,
        m_axi_gmem4_AWID => pu_kernel_8_U0_m_axi_gmem4_AWID,
        m_axi_gmem4_AWLEN => pu_kernel_8_U0_m_axi_gmem4_AWLEN,
        m_axi_gmem4_AWSIZE => pu_kernel_8_U0_m_axi_gmem4_AWSIZE,
        m_axi_gmem4_AWBURST => pu_kernel_8_U0_m_axi_gmem4_AWBURST,
        m_axi_gmem4_AWLOCK => pu_kernel_8_U0_m_axi_gmem4_AWLOCK,
        m_axi_gmem4_AWCACHE => pu_kernel_8_U0_m_axi_gmem4_AWCACHE,
        m_axi_gmem4_AWPROT => pu_kernel_8_U0_m_axi_gmem4_AWPROT,
        m_axi_gmem4_AWQOS => pu_kernel_8_U0_m_axi_gmem4_AWQOS,
        m_axi_gmem4_AWREGION => pu_kernel_8_U0_m_axi_gmem4_AWREGION,
        m_axi_gmem4_AWUSER => pu_kernel_8_U0_m_axi_gmem4_AWUSER,
        m_axi_gmem4_WVALID => pu_kernel_8_U0_m_axi_gmem4_WVALID,
        m_axi_gmem4_WREADY => ap_const_logic_0,
        m_axi_gmem4_WDATA => pu_kernel_8_U0_m_axi_gmem4_WDATA,
        m_axi_gmem4_WSTRB => pu_kernel_8_U0_m_axi_gmem4_WSTRB,
        m_axi_gmem4_WLAST => pu_kernel_8_U0_m_axi_gmem4_WLAST,
        m_axi_gmem4_WID => pu_kernel_8_U0_m_axi_gmem4_WID,
        m_axi_gmem4_WUSER => pu_kernel_8_U0_m_axi_gmem4_WUSER,
        m_axi_gmem4_ARVALID => pu_kernel_8_U0_m_axi_gmem4_ARVALID,
        m_axi_gmem4_ARREADY => m_axi_gmem4_ARREADY,
        m_axi_gmem4_ARADDR => pu_kernel_8_U0_m_axi_gmem4_ARADDR,
        m_axi_gmem4_ARID => pu_kernel_8_U0_m_axi_gmem4_ARID,
        m_axi_gmem4_ARLEN => pu_kernel_8_U0_m_axi_gmem4_ARLEN,
        m_axi_gmem4_ARSIZE => pu_kernel_8_U0_m_axi_gmem4_ARSIZE,
        m_axi_gmem4_ARBURST => pu_kernel_8_U0_m_axi_gmem4_ARBURST,
        m_axi_gmem4_ARLOCK => pu_kernel_8_U0_m_axi_gmem4_ARLOCK,
        m_axi_gmem4_ARCACHE => pu_kernel_8_U0_m_axi_gmem4_ARCACHE,
        m_axi_gmem4_ARPROT => pu_kernel_8_U0_m_axi_gmem4_ARPROT,
        m_axi_gmem4_ARQOS => pu_kernel_8_U0_m_axi_gmem4_ARQOS,
        m_axi_gmem4_ARREGION => pu_kernel_8_U0_m_axi_gmem4_ARREGION,
        m_axi_gmem4_ARUSER => pu_kernel_8_U0_m_axi_gmem4_ARUSER,
        m_axi_gmem4_RVALID => m_axi_gmem4_RVALID,
        m_axi_gmem4_RREADY => pu_kernel_8_U0_m_axi_gmem4_RREADY,
        m_axi_gmem4_RDATA => m_axi_gmem4_RDATA,
        m_axi_gmem4_RLAST => m_axi_gmem4_RLAST,
        m_axi_gmem4_RID => m_axi_gmem4_RID,
        m_axi_gmem4_RFIFONUM => m_axi_gmem4_RFIFONUM,
        m_axi_gmem4_RUSER => m_axi_gmem4_RUSER,
        m_axi_gmem4_RRESP => m_axi_gmem4_RRESP,
        m_axi_gmem4_BVALID => ap_const_logic_0,
        m_axi_gmem4_BREADY => pu_kernel_8_U0_m_axi_gmem4_BREADY,
        m_axi_gmem4_BRESP => ap_const_lv2_0,
        m_axi_gmem4_BID => ap_const_lv1_0,
        m_axi_gmem4_BUSER => ap_const_lv1_0,
        B2 => B2,
        K => K);

    pu_kernel_9_U0 : component spmm_hls_pu_kernel_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => pu_kernel_9_U0_ap_start,
        ap_done => pu_kernel_9_U0_ap_done,
        ap_continue => pu_kernel_9_U0_ap_continue,
        ap_idle => pu_kernel_9_U0_ap_idle,
        ap_ready => pu_kernel_9_U0_ap_ready,
        s_23_dout => s_23_dout,
        s_23_num_data_valid => s_23_num_data_valid,
        s_23_fifo_cap => s_23_fifo_cap,
        s_23_empty_n => s_23_empty_n,
        s_23_read => pu_kernel_9_U0_s_23_read,
        m_axi_gmem5_AWVALID => pu_kernel_9_U0_m_axi_gmem5_AWVALID,
        m_axi_gmem5_AWREADY => ap_const_logic_0,
        m_axi_gmem5_AWADDR => pu_kernel_9_U0_m_axi_gmem5_AWADDR,
        m_axi_gmem5_AWID => pu_kernel_9_U0_m_axi_gmem5_AWID,
        m_axi_gmem5_AWLEN => pu_kernel_9_U0_m_axi_gmem5_AWLEN,
        m_axi_gmem5_AWSIZE => pu_kernel_9_U0_m_axi_gmem5_AWSIZE,
        m_axi_gmem5_AWBURST => pu_kernel_9_U0_m_axi_gmem5_AWBURST,
        m_axi_gmem5_AWLOCK => pu_kernel_9_U0_m_axi_gmem5_AWLOCK,
        m_axi_gmem5_AWCACHE => pu_kernel_9_U0_m_axi_gmem5_AWCACHE,
        m_axi_gmem5_AWPROT => pu_kernel_9_U0_m_axi_gmem5_AWPROT,
        m_axi_gmem5_AWQOS => pu_kernel_9_U0_m_axi_gmem5_AWQOS,
        m_axi_gmem5_AWREGION => pu_kernel_9_U0_m_axi_gmem5_AWREGION,
        m_axi_gmem5_AWUSER => pu_kernel_9_U0_m_axi_gmem5_AWUSER,
        m_axi_gmem5_WVALID => pu_kernel_9_U0_m_axi_gmem5_WVALID,
        m_axi_gmem5_WREADY => ap_const_logic_0,
        m_axi_gmem5_WDATA => pu_kernel_9_U0_m_axi_gmem5_WDATA,
        m_axi_gmem5_WSTRB => pu_kernel_9_U0_m_axi_gmem5_WSTRB,
        m_axi_gmem5_WLAST => pu_kernel_9_U0_m_axi_gmem5_WLAST,
        m_axi_gmem5_WID => pu_kernel_9_U0_m_axi_gmem5_WID,
        m_axi_gmem5_WUSER => pu_kernel_9_U0_m_axi_gmem5_WUSER,
        m_axi_gmem5_ARVALID => pu_kernel_9_U0_m_axi_gmem5_ARVALID,
        m_axi_gmem5_ARREADY => m_axi_gmem5_ARREADY,
        m_axi_gmem5_ARADDR => pu_kernel_9_U0_m_axi_gmem5_ARADDR,
        m_axi_gmem5_ARID => pu_kernel_9_U0_m_axi_gmem5_ARID,
        m_axi_gmem5_ARLEN => pu_kernel_9_U0_m_axi_gmem5_ARLEN,
        m_axi_gmem5_ARSIZE => pu_kernel_9_U0_m_axi_gmem5_ARSIZE,
        m_axi_gmem5_ARBURST => pu_kernel_9_U0_m_axi_gmem5_ARBURST,
        m_axi_gmem5_ARLOCK => pu_kernel_9_U0_m_axi_gmem5_ARLOCK,
        m_axi_gmem5_ARCACHE => pu_kernel_9_U0_m_axi_gmem5_ARCACHE,
        m_axi_gmem5_ARPROT => pu_kernel_9_U0_m_axi_gmem5_ARPROT,
        m_axi_gmem5_ARQOS => pu_kernel_9_U0_m_axi_gmem5_ARQOS,
        m_axi_gmem5_ARREGION => pu_kernel_9_U0_m_axi_gmem5_ARREGION,
        m_axi_gmem5_ARUSER => pu_kernel_9_U0_m_axi_gmem5_ARUSER,
        m_axi_gmem5_RVALID => m_axi_gmem5_RVALID,
        m_axi_gmem5_RREADY => pu_kernel_9_U0_m_axi_gmem5_RREADY,
        m_axi_gmem5_RDATA => m_axi_gmem5_RDATA,
        m_axi_gmem5_RLAST => m_axi_gmem5_RLAST,
        m_axi_gmem5_RID => m_axi_gmem5_RID,
        m_axi_gmem5_RFIFONUM => m_axi_gmem5_RFIFONUM,
        m_axi_gmem5_RUSER => m_axi_gmem5_RUSER,
        m_axi_gmem5_RRESP => m_axi_gmem5_RRESP,
        m_axi_gmem5_BVALID => ap_const_logic_0,
        m_axi_gmem5_BREADY => pu_kernel_9_U0_m_axi_gmem5_BREADY,
        m_axi_gmem5_BRESP => ap_const_lv2_0,
        m_axi_gmem5_BID => ap_const_lv1_0,
        m_axi_gmem5_BUSER => ap_const_lv1_0,
        B3 => B3,
        K => K);

    pu_kernel_10_U0 : component spmm_hls_pu_kernel_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => pu_kernel_10_U0_ap_start,
        ap_done => pu_kernel_10_U0_ap_done,
        ap_continue => pu_kernel_10_U0_ap_continue,
        ap_idle => pu_kernel_10_U0_ap_idle,
        ap_ready => pu_kernel_10_U0_ap_ready,
        s_34_dout => s_34_dout,
        s_34_num_data_valid => s_34_num_data_valid,
        s_34_fifo_cap => s_34_fifo_cap,
        s_34_empty_n => s_34_empty_n,
        s_34_read => pu_kernel_10_U0_s_34_read,
        m_axi_gmem6_AWVALID => pu_kernel_10_U0_m_axi_gmem6_AWVALID,
        m_axi_gmem6_AWREADY => ap_const_logic_0,
        m_axi_gmem6_AWADDR => pu_kernel_10_U0_m_axi_gmem6_AWADDR,
        m_axi_gmem6_AWID => pu_kernel_10_U0_m_axi_gmem6_AWID,
        m_axi_gmem6_AWLEN => pu_kernel_10_U0_m_axi_gmem6_AWLEN,
        m_axi_gmem6_AWSIZE => pu_kernel_10_U0_m_axi_gmem6_AWSIZE,
        m_axi_gmem6_AWBURST => pu_kernel_10_U0_m_axi_gmem6_AWBURST,
        m_axi_gmem6_AWLOCK => pu_kernel_10_U0_m_axi_gmem6_AWLOCK,
        m_axi_gmem6_AWCACHE => pu_kernel_10_U0_m_axi_gmem6_AWCACHE,
        m_axi_gmem6_AWPROT => pu_kernel_10_U0_m_axi_gmem6_AWPROT,
        m_axi_gmem6_AWQOS => pu_kernel_10_U0_m_axi_gmem6_AWQOS,
        m_axi_gmem6_AWREGION => pu_kernel_10_U0_m_axi_gmem6_AWREGION,
        m_axi_gmem6_AWUSER => pu_kernel_10_U0_m_axi_gmem6_AWUSER,
        m_axi_gmem6_WVALID => pu_kernel_10_U0_m_axi_gmem6_WVALID,
        m_axi_gmem6_WREADY => ap_const_logic_0,
        m_axi_gmem6_WDATA => pu_kernel_10_U0_m_axi_gmem6_WDATA,
        m_axi_gmem6_WSTRB => pu_kernel_10_U0_m_axi_gmem6_WSTRB,
        m_axi_gmem6_WLAST => pu_kernel_10_U0_m_axi_gmem6_WLAST,
        m_axi_gmem6_WID => pu_kernel_10_U0_m_axi_gmem6_WID,
        m_axi_gmem6_WUSER => pu_kernel_10_U0_m_axi_gmem6_WUSER,
        m_axi_gmem6_ARVALID => pu_kernel_10_U0_m_axi_gmem6_ARVALID,
        m_axi_gmem6_ARREADY => m_axi_gmem6_ARREADY,
        m_axi_gmem6_ARADDR => pu_kernel_10_U0_m_axi_gmem6_ARADDR,
        m_axi_gmem6_ARID => pu_kernel_10_U0_m_axi_gmem6_ARID,
        m_axi_gmem6_ARLEN => pu_kernel_10_U0_m_axi_gmem6_ARLEN,
        m_axi_gmem6_ARSIZE => pu_kernel_10_U0_m_axi_gmem6_ARSIZE,
        m_axi_gmem6_ARBURST => pu_kernel_10_U0_m_axi_gmem6_ARBURST,
        m_axi_gmem6_ARLOCK => pu_kernel_10_U0_m_axi_gmem6_ARLOCK,
        m_axi_gmem6_ARCACHE => pu_kernel_10_U0_m_axi_gmem6_ARCACHE,
        m_axi_gmem6_ARPROT => pu_kernel_10_U0_m_axi_gmem6_ARPROT,
        m_axi_gmem6_ARQOS => pu_kernel_10_U0_m_axi_gmem6_ARQOS,
        m_axi_gmem6_ARREGION => pu_kernel_10_U0_m_axi_gmem6_ARREGION,
        m_axi_gmem6_ARUSER => pu_kernel_10_U0_m_axi_gmem6_ARUSER,
        m_axi_gmem6_RVALID => m_axi_gmem6_RVALID,
        m_axi_gmem6_RREADY => pu_kernel_10_U0_m_axi_gmem6_RREADY,
        m_axi_gmem6_RDATA => m_axi_gmem6_RDATA,
        m_axi_gmem6_RLAST => m_axi_gmem6_RLAST,
        m_axi_gmem6_RID => m_axi_gmem6_RID,
        m_axi_gmem6_RFIFONUM => m_axi_gmem6_RFIFONUM,
        m_axi_gmem6_RUSER => m_axi_gmem6_RUSER,
        m_axi_gmem6_RRESP => m_axi_gmem6_RRESP,
        m_axi_gmem6_BVALID => ap_const_logic_0,
        m_axi_gmem6_BREADY => pu_kernel_10_U0_m_axi_gmem6_BREADY,
        m_axi_gmem6_BRESP => ap_const_lv2_0,
        m_axi_gmem6_BID => ap_const_lv1_0,
        m_axi_gmem6_BUSER => ap_const_lv1_0,
        B4 => B4,
        K => K);

    s_01_U : component spmm_hls_fifo_w388_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => set_tile_broadcast_U0_s_0_din,
        if_full_n => s_01_full_n,
        if_write => set_tile_broadcast_U0_s_0_write,
        if_dout => s_01_dout,
        if_num_data_valid => s_01_num_data_valid,
        if_fifo_cap => s_01_fifo_cap,
        if_empty_n => s_01_empty_n,
        if_read => pu_kernel_U0_s_01_read);

    s_12_U : component spmm_hls_fifo_w388_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => set_tile_broadcast_U0_s_1_din,
        if_full_n => s_12_full_n,
        if_write => set_tile_broadcast_U0_s_1_write,
        if_dout => s_12_dout,
        if_num_data_valid => s_12_num_data_valid,
        if_fifo_cap => s_12_fifo_cap,
        if_empty_n => s_12_empty_n,
        if_read => pu_kernel_8_U0_s_12_read);

    s_23_U : component spmm_hls_fifo_w388_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => set_tile_broadcast_U0_s_2_din,
        if_full_n => s_23_full_n,
        if_write => set_tile_broadcast_U0_s_2_write,
        if_dout => s_23_dout,
        if_num_data_valid => s_23_num_data_valid,
        if_fifo_cap => s_23_fifo_cap,
        if_empty_n => s_23_empty_n,
        if_read => pu_kernel_9_U0_s_23_read);

    s_34_U : component spmm_hls_fifo_w388_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => set_tile_broadcast_U0_s_3_din,
        if_full_n => s_34_full_n,
        if_write => set_tile_broadcast_U0_s_3_write,
        if_dout => s_34_dout,
        if_num_data_valid => s_34_num_data_valid,
        if_fifo_cap => s_34_fifo_cap,
        if_empty_n => s_34_empty_n,
        if_read => pu_kernel_10_U0_s_34_read);





    ap_sync_reg_pu_kernel_10_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_pu_kernel_10_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_pu_kernel_10_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_pu_kernel_10_U0_ap_ready <= ap_sync_pu_kernel_10_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_pu_kernel_8_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_pu_kernel_8_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_pu_kernel_8_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_pu_kernel_8_U0_ap_ready <= ap_sync_pu_kernel_8_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_pu_kernel_9_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_pu_kernel_9_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_pu_kernel_9_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_pu_kernel_9_U0_ap_ready <= ap_sync_pu_kernel_9_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_pu_kernel_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_pu_kernel_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_pu_kernel_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_pu_kernel_U0_ap_ready <= ap_sync_pu_kernel_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_set_tile_broadcast_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_set_tile_broadcast_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_set_tile_broadcast_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_set_tile_broadcast_U0_ap_ready <= ap_sync_set_tile_broadcast_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_done <= ap_sync_done;
    ap_idle <= (set_tile_broadcast_U0_ap_idle and pu_kernel_U0_ap_idle and pu_kernel_9_U0_ap_idle and pu_kernel_8_U0_ap_idle and pu_kernel_10_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (pu_kernel_U0_ap_done and pu_kernel_9_U0_ap_done and pu_kernel_8_U0_ap_done and pu_kernel_10_U0_ap_done);
    ap_sync_pu_kernel_10_U0_ap_ready <= (pu_kernel_10_U0_ap_ready or ap_sync_reg_pu_kernel_10_U0_ap_ready);
    ap_sync_pu_kernel_8_U0_ap_ready <= (pu_kernel_8_U0_ap_ready or ap_sync_reg_pu_kernel_8_U0_ap_ready);
    ap_sync_pu_kernel_9_U0_ap_ready <= (pu_kernel_9_U0_ap_ready or ap_sync_reg_pu_kernel_9_U0_ap_ready);
    ap_sync_pu_kernel_U0_ap_ready <= (pu_kernel_U0_ap_ready or ap_sync_reg_pu_kernel_U0_ap_ready);
    ap_sync_ready <= (ap_sync_set_tile_broadcast_U0_ap_ready and ap_sync_pu_kernel_U0_ap_ready and ap_sync_pu_kernel_9_U0_ap_ready and ap_sync_pu_kernel_8_U0_ap_ready and ap_sync_pu_kernel_10_U0_ap_ready);
    ap_sync_set_tile_broadcast_U0_ap_ready <= (set_tile_broadcast_U0_ap_ready or ap_sync_reg_set_tile_broadcast_U0_ap_ready);
    m_axi_gmem1_ARADDR <= set_tile_broadcast_U0_m_axi_gmem1_ARADDR;
    m_axi_gmem1_ARBURST <= set_tile_broadcast_U0_m_axi_gmem1_ARBURST;
    m_axi_gmem1_ARCACHE <= set_tile_broadcast_U0_m_axi_gmem1_ARCACHE;
    m_axi_gmem1_ARID <= set_tile_broadcast_U0_m_axi_gmem1_ARID;
    m_axi_gmem1_ARLEN <= set_tile_broadcast_U0_m_axi_gmem1_ARLEN;
    m_axi_gmem1_ARLOCK <= set_tile_broadcast_U0_m_axi_gmem1_ARLOCK;
    m_axi_gmem1_ARPROT <= set_tile_broadcast_U0_m_axi_gmem1_ARPROT;
    m_axi_gmem1_ARQOS <= set_tile_broadcast_U0_m_axi_gmem1_ARQOS;
    m_axi_gmem1_ARREGION <= set_tile_broadcast_U0_m_axi_gmem1_ARREGION;
    m_axi_gmem1_ARSIZE <= set_tile_broadcast_U0_m_axi_gmem1_ARSIZE;
    m_axi_gmem1_ARUSER <= set_tile_broadcast_U0_m_axi_gmem1_ARUSER;
    m_axi_gmem1_ARVALID <= set_tile_broadcast_U0_m_axi_gmem1_ARVALID;
    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;
    m_axi_gmem1_RREADY <= set_tile_broadcast_U0_m_axi_gmem1_RREADY;
    m_axi_gmem1_WDATA <= ap_const_lv32_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    m_axi_gmem2_ARADDR <= set_tile_broadcast_U0_m_axi_gmem2_ARADDR;
    m_axi_gmem2_ARBURST <= set_tile_broadcast_U0_m_axi_gmem2_ARBURST;
    m_axi_gmem2_ARCACHE <= set_tile_broadcast_U0_m_axi_gmem2_ARCACHE;
    m_axi_gmem2_ARID <= set_tile_broadcast_U0_m_axi_gmem2_ARID;
    m_axi_gmem2_ARLEN <= set_tile_broadcast_U0_m_axi_gmem2_ARLEN;
    m_axi_gmem2_ARLOCK <= set_tile_broadcast_U0_m_axi_gmem2_ARLOCK;
    m_axi_gmem2_ARPROT <= set_tile_broadcast_U0_m_axi_gmem2_ARPROT;
    m_axi_gmem2_ARQOS <= set_tile_broadcast_U0_m_axi_gmem2_ARQOS;
    m_axi_gmem2_ARREGION <= set_tile_broadcast_U0_m_axi_gmem2_ARREGION;
    m_axi_gmem2_ARSIZE <= set_tile_broadcast_U0_m_axi_gmem2_ARSIZE;
    m_axi_gmem2_ARUSER <= set_tile_broadcast_U0_m_axi_gmem2_ARUSER;
    m_axi_gmem2_ARVALID <= set_tile_broadcast_U0_m_axi_gmem2_ARVALID;
    m_axi_gmem2_AWADDR <= ap_const_lv64_0;
    m_axi_gmem2_AWBURST <= ap_const_lv2_0;
    m_axi_gmem2_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem2_AWID <= ap_const_lv1_0;
    m_axi_gmem2_AWLEN <= ap_const_lv32_0;
    m_axi_gmem2_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem2_AWPROT <= ap_const_lv3_0;
    m_axi_gmem2_AWQOS <= ap_const_lv4_0;
    m_axi_gmem2_AWREGION <= ap_const_lv4_0;
    m_axi_gmem2_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem2_AWUSER <= ap_const_lv1_0;
    m_axi_gmem2_AWVALID <= ap_const_logic_0;
    m_axi_gmem2_BREADY <= ap_const_logic_0;
    m_axi_gmem2_RREADY <= set_tile_broadcast_U0_m_axi_gmem2_RREADY;
    m_axi_gmem2_WDATA <= ap_const_lv32_0;
    m_axi_gmem2_WID <= ap_const_lv1_0;
    m_axi_gmem2_WLAST <= ap_const_logic_0;
    m_axi_gmem2_WSTRB <= ap_const_lv4_0;
    m_axi_gmem2_WUSER <= ap_const_lv1_0;
    m_axi_gmem2_WVALID <= ap_const_logic_0;
    m_axi_gmem3_ARADDR <= pu_kernel_U0_m_axi_gmem3_ARADDR;
    m_axi_gmem3_ARBURST <= pu_kernel_U0_m_axi_gmem3_ARBURST;
    m_axi_gmem3_ARCACHE <= pu_kernel_U0_m_axi_gmem3_ARCACHE;
    m_axi_gmem3_ARID <= pu_kernel_U0_m_axi_gmem3_ARID;
    m_axi_gmem3_ARLEN <= pu_kernel_U0_m_axi_gmem3_ARLEN;
    m_axi_gmem3_ARLOCK <= pu_kernel_U0_m_axi_gmem3_ARLOCK;
    m_axi_gmem3_ARPROT <= pu_kernel_U0_m_axi_gmem3_ARPROT;
    m_axi_gmem3_ARQOS <= pu_kernel_U0_m_axi_gmem3_ARQOS;
    m_axi_gmem3_ARREGION <= pu_kernel_U0_m_axi_gmem3_ARREGION;
    m_axi_gmem3_ARSIZE <= pu_kernel_U0_m_axi_gmem3_ARSIZE;
    m_axi_gmem3_ARUSER <= pu_kernel_U0_m_axi_gmem3_ARUSER;
    m_axi_gmem3_ARVALID <= pu_kernel_U0_m_axi_gmem3_ARVALID;
    m_axi_gmem3_AWADDR <= ap_const_lv64_0;
    m_axi_gmem3_AWBURST <= ap_const_lv2_0;
    m_axi_gmem3_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem3_AWID <= ap_const_lv1_0;
    m_axi_gmem3_AWLEN <= ap_const_lv32_0;
    m_axi_gmem3_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem3_AWPROT <= ap_const_lv3_0;
    m_axi_gmem3_AWQOS <= ap_const_lv4_0;
    m_axi_gmem3_AWREGION <= ap_const_lv4_0;
    m_axi_gmem3_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem3_AWUSER <= ap_const_lv1_0;
    m_axi_gmem3_AWVALID <= ap_const_logic_0;
    m_axi_gmem3_BREADY <= ap_const_logic_0;
    m_axi_gmem3_RREADY <= pu_kernel_U0_m_axi_gmem3_RREADY;
    m_axi_gmem3_WDATA <= ap_const_lv32_0;
    m_axi_gmem3_WID <= ap_const_lv1_0;
    m_axi_gmem3_WLAST <= ap_const_logic_0;
    m_axi_gmem3_WSTRB <= ap_const_lv4_0;
    m_axi_gmem3_WUSER <= ap_const_lv1_0;
    m_axi_gmem3_WVALID <= ap_const_logic_0;
    m_axi_gmem4_ARADDR <= pu_kernel_8_U0_m_axi_gmem4_ARADDR;
    m_axi_gmem4_ARBURST <= pu_kernel_8_U0_m_axi_gmem4_ARBURST;
    m_axi_gmem4_ARCACHE <= pu_kernel_8_U0_m_axi_gmem4_ARCACHE;
    m_axi_gmem4_ARID <= pu_kernel_8_U0_m_axi_gmem4_ARID;
    m_axi_gmem4_ARLEN <= pu_kernel_8_U0_m_axi_gmem4_ARLEN;
    m_axi_gmem4_ARLOCK <= pu_kernel_8_U0_m_axi_gmem4_ARLOCK;
    m_axi_gmem4_ARPROT <= pu_kernel_8_U0_m_axi_gmem4_ARPROT;
    m_axi_gmem4_ARQOS <= pu_kernel_8_U0_m_axi_gmem4_ARQOS;
    m_axi_gmem4_ARREGION <= pu_kernel_8_U0_m_axi_gmem4_ARREGION;
    m_axi_gmem4_ARSIZE <= pu_kernel_8_U0_m_axi_gmem4_ARSIZE;
    m_axi_gmem4_ARUSER <= pu_kernel_8_U0_m_axi_gmem4_ARUSER;
    m_axi_gmem4_ARVALID <= pu_kernel_8_U0_m_axi_gmem4_ARVALID;
    m_axi_gmem4_AWADDR <= ap_const_lv64_0;
    m_axi_gmem4_AWBURST <= ap_const_lv2_0;
    m_axi_gmem4_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem4_AWID <= ap_const_lv1_0;
    m_axi_gmem4_AWLEN <= ap_const_lv32_0;
    m_axi_gmem4_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem4_AWPROT <= ap_const_lv3_0;
    m_axi_gmem4_AWQOS <= ap_const_lv4_0;
    m_axi_gmem4_AWREGION <= ap_const_lv4_0;
    m_axi_gmem4_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem4_AWUSER <= ap_const_lv1_0;
    m_axi_gmem4_AWVALID <= ap_const_logic_0;
    m_axi_gmem4_BREADY <= ap_const_logic_0;
    m_axi_gmem4_RREADY <= pu_kernel_8_U0_m_axi_gmem4_RREADY;
    m_axi_gmem4_WDATA <= ap_const_lv32_0;
    m_axi_gmem4_WID <= ap_const_lv1_0;
    m_axi_gmem4_WLAST <= ap_const_logic_0;
    m_axi_gmem4_WSTRB <= ap_const_lv4_0;
    m_axi_gmem4_WUSER <= ap_const_lv1_0;
    m_axi_gmem4_WVALID <= ap_const_logic_0;
    m_axi_gmem5_ARADDR <= pu_kernel_9_U0_m_axi_gmem5_ARADDR;
    m_axi_gmem5_ARBURST <= pu_kernel_9_U0_m_axi_gmem5_ARBURST;
    m_axi_gmem5_ARCACHE <= pu_kernel_9_U0_m_axi_gmem5_ARCACHE;
    m_axi_gmem5_ARID <= pu_kernel_9_U0_m_axi_gmem5_ARID;
    m_axi_gmem5_ARLEN <= pu_kernel_9_U0_m_axi_gmem5_ARLEN;
    m_axi_gmem5_ARLOCK <= pu_kernel_9_U0_m_axi_gmem5_ARLOCK;
    m_axi_gmem5_ARPROT <= pu_kernel_9_U0_m_axi_gmem5_ARPROT;
    m_axi_gmem5_ARQOS <= pu_kernel_9_U0_m_axi_gmem5_ARQOS;
    m_axi_gmem5_ARREGION <= pu_kernel_9_U0_m_axi_gmem5_ARREGION;
    m_axi_gmem5_ARSIZE <= pu_kernel_9_U0_m_axi_gmem5_ARSIZE;
    m_axi_gmem5_ARUSER <= pu_kernel_9_U0_m_axi_gmem5_ARUSER;
    m_axi_gmem5_ARVALID <= pu_kernel_9_U0_m_axi_gmem5_ARVALID;
    m_axi_gmem5_AWADDR <= ap_const_lv64_0;
    m_axi_gmem5_AWBURST <= ap_const_lv2_0;
    m_axi_gmem5_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem5_AWID <= ap_const_lv1_0;
    m_axi_gmem5_AWLEN <= ap_const_lv32_0;
    m_axi_gmem5_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem5_AWPROT <= ap_const_lv3_0;
    m_axi_gmem5_AWQOS <= ap_const_lv4_0;
    m_axi_gmem5_AWREGION <= ap_const_lv4_0;
    m_axi_gmem5_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem5_AWUSER <= ap_const_lv1_0;
    m_axi_gmem5_AWVALID <= ap_const_logic_0;
    m_axi_gmem5_BREADY <= ap_const_logic_0;
    m_axi_gmem5_RREADY <= pu_kernel_9_U0_m_axi_gmem5_RREADY;
    m_axi_gmem5_WDATA <= ap_const_lv32_0;
    m_axi_gmem5_WID <= ap_const_lv1_0;
    m_axi_gmem5_WLAST <= ap_const_logic_0;
    m_axi_gmem5_WSTRB <= ap_const_lv4_0;
    m_axi_gmem5_WUSER <= ap_const_lv1_0;
    m_axi_gmem5_WVALID <= ap_const_logic_0;
    m_axi_gmem6_ARADDR <= pu_kernel_10_U0_m_axi_gmem6_ARADDR;
    m_axi_gmem6_ARBURST <= pu_kernel_10_U0_m_axi_gmem6_ARBURST;
    m_axi_gmem6_ARCACHE <= pu_kernel_10_U0_m_axi_gmem6_ARCACHE;
    m_axi_gmem6_ARID <= pu_kernel_10_U0_m_axi_gmem6_ARID;
    m_axi_gmem6_ARLEN <= pu_kernel_10_U0_m_axi_gmem6_ARLEN;
    m_axi_gmem6_ARLOCK <= pu_kernel_10_U0_m_axi_gmem6_ARLOCK;
    m_axi_gmem6_ARPROT <= pu_kernel_10_U0_m_axi_gmem6_ARPROT;
    m_axi_gmem6_ARQOS <= pu_kernel_10_U0_m_axi_gmem6_ARQOS;
    m_axi_gmem6_ARREGION <= pu_kernel_10_U0_m_axi_gmem6_ARREGION;
    m_axi_gmem6_ARSIZE <= pu_kernel_10_U0_m_axi_gmem6_ARSIZE;
    m_axi_gmem6_ARUSER <= pu_kernel_10_U0_m_axi_gmem6_ARUSER;
    m_axi_gmem6_ARVALID <= pu_kernel_10_U0_m_axi_gmem6_ARVALID;
    m_axi_gmem6_AWADDR <= ap_const_lv64_0;
    m_axi_gmem6_AWBURST <= ap_const_lv2_0;
    m_axi_gmem6_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem6_AWID <= ap_const_lv1_0;
    m_axi_gmem6_AWLEN <= ap_const_lv32_0;
    m_axi_gmem6_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem6_AWPROT <= ap_const_lv3_0;
    m_axi_gmem6_AWQOS <= ap_const_lv4_0;
    m_axi_gmem6_AWREGION <= ap_const_lv4_0;
    m_axi_gmem6_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem6_AWUSER <= ap_const_lv1_0;
    m_axi_gmem6_AWVALID <= ap_const_logic_0;
    m_axi_gmem6_BREADY <= ap_const_logic_0;
    m_axi_gmem6_RREADY <= pu_kernel_10_U0_m_axi_gmem6_RREADY;
    m_axi_gmem6_WDATA <= ap_const_lv32_0;
    m_axi_gmem6_WID <= ap_const_lv1_0;
    m_axi_gmem6_WLAST <= ap_const_logic_0;
    m_axi_gmem6_WSTRB <= ap_const_lv4_0;
    m_axi_gmem6_WUSER <= ap_const_lv1_0;
    m_axi_gmem6_WVALID <= ap_const_logic_0;
    pu_kernel_10_U0_ap_continue <= ap_sync_continue;
    pu_kernel_10_U0_ap_start <= ((ap_sync_reg_pu_kernel_10_U0_ap_ready xor ap_const_logic_1) and ap_start);
    pu_kernel_8_U0_ap_continue <= ap_sync_continue;
    pu_kernel_8_U0_ap_start <= ((ap_sync_reg_pu_kernel_8_U0_ap_ready xor ap_const_logic_1) and ap_start);
    pu_kernel_9_U0_ap_continue <= ap_sync_continue;
    pu_kernel_9_U0_ap_start <= ((ap_sync_reg_pu_kernel_9_U0_ap_ready xor ap_const_logic_1) and ap_start);
    pu_kernel_U0_ap_continue <= ap_sync_continue;
    pu_kernel_U0_ap_start <= ((ap_sync_reg_pu_kernel_U0_ap_ready xor ap_const_logic_1) and ap_start);
    set_tile_broadcast_U0_ap_continue <= ap_const_logic_1;
    set_tile_broadcast_U0_ap_start <= ((ap_sync_reg_set_tile_broadcast_U0_ap_ready xor ap_const_logic_1) and ap_start);
end behav;
