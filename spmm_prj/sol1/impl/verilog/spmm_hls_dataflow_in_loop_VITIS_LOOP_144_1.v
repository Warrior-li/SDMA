// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1 (
        ap_clk,
        ap_rst,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        batch,
        A,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        B,
        K,
        K_ap_vld,
        ap_start,
        batch_ap_vld,
        A_ap_vld,
        B_ap_vld,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [63:0] m_axi_gmem0_WDATA;
output  [7:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [63:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [27:0] batch;
input  [63:0] A;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [31:0] m_axi_gmem1_WDATA;
output  [3:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [31:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [63:0] B;
input  [31:0] K;
input   K_ap_vld;
input   ap_start;
input   batch_ap_vld;
input   A_ap_vld;
input   B_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [31:0] entry_proc_U0_K_c_din;
wire    entry_proc_U0_K_c_write;
wire    load_A_U0_ap_start;
wire    load_A_U0_ap_done;
wire    load_A_U0_ap_continue;
wire    load_A_U0_ap_idle;
wire    load_A_U0_ap_ready;
wire    load_A_U0_start_out;
wire    load_A_U0_start_write;
wire    load_A_U0_m_axi_gmem0_AWVALID;
wire   [63:0] load_A_U0_m_axi_gmem0_AWADDR;
wire   [0:0] load_A_U0_m_axi_gmem0_AWID;
wire   [31:0] load_A_U0_m_axi_gmem0_AWLEN;
wire   [2:0] load_A_U0_m_axi_gmem0_AWSIZE;
wire   [1:0] load_A_U0_m_axi_gmem0_AWBURST;
wire   [1:0] load_A_U0_m_axi_gmem0_AWLOCK;
wire   [3:0] load_A_U0_m_axi_gmem0_AWCACHE;
wire   [2:0] load_A_U0_m_axi_gmem0_AWPROT;
wire   [3:0] load_A_U0_m_axi_gmem0_AWQOS;
wire   [3:0] load_A_U0_m_axi_gmem0_AWREGION;
wire   [0:0] load_A_U0_m_axi_gmem0_AWUSER;
wire    load_A_U0_m_axi_gmem0_WVALID;
wire   [63:0] load_A_U0_m_axi_gmem0_WDATA;
wire   [7:0] load_A_U0_m_axi_gmem0_WSTRB;
wire    load_A_U0_m_axi_gmem0_WLAST;
wire   [0:0] load_A_U0_m_axi_gmem0_WID;
wire   [0:0] load_A_U0_m_axi_gmem0_WUSER;
wire    load_A_U0_m_axi_gmem0_ARVALID;
wire   [63:0] load_A_U0_m_axi_gmem0_ARADDR;
wire   [0:0] load_A_U0_m_axi_gmem0_ARID;
wire   [31:0] load_A_U0_m_axi_gmem0_ARLEN;
wire   [2:0] load_A_U0_m_axi_gmem0_ARSIZE;
wire   [1:0] load_A_U0_m_axi_gmem0_ARBURST;
wire   [1:0] load_A_U0_m_axi_gmem0_ARLOCK;
wire   [3:0] load_A_U0_m_axi_gmem0_ARCACHE;
wire   [2:0] load_A_U0_m_axi_gmem0_ARPROT;
wire   [3:0] load_A_U0_m_axi_gmem0_ARQOS;
wire   [3:0] load_A_U0_m_axi_gmem0_ARREGION;
wire   [0:0] load_A_U0_m_axi_gmem0_ARUSER;
wire    load_A_U0_m_axi_gmem0_RREADY;
wire    load_A_U0_m_axi_gmem0_BREADY;
wire   [63:0] load_A_U0_A_stream1_din;
wire    load_A_U0_A_stream1_write;
wire    load_stream_to_buffer_U0_ap_start;
wire    load_stream_to_buffer_U0_ap_done;
wire    load_stream_to_buffer_U0_ap_continue;
wire    load_stream_to_buffer_U0_ap_idle;
wire    load_stream_to_buffer_U0_ap_ready;
wire    load_stream_to_buffer_U0_A_stream2_read;
wire   [30:0] load_stream_to_buffer_U0_ap_return_0;
wire   [30:0] load_stream_to_buffer_U0_ap_return_1;
wire   [30:0] load_stream_to_buffer_U0_ap_return_2;
wire   [30:0] load_stream_to_buffer_U0_ap_return_3;
wire   [30:0] load_stream_to_buffer_U0_ap_return_4;
wire   [30:0] load_stream_to_buffer_U0_ap_return_5;
wire   [30:0] load_stream_to_buffer_U0_ap_return_6;
wire   [30:0] load_stream_to_buffer_U0_ap_return_7;
wire   [30:0] load_stream_to_buffer_U0_ap_return_8;
wire   [30:0] load_stream_to_buffer_U0_ap_return_9;
wire   [30:0] load_stream_to_buffer_U0_ap_return_10;
wire   [30:0] load_stream_to_buffer_U0_ap_return_11;
wire   [30:0] load_stream_to_buffer_U0_ap_return_12;
wire   [30:0] load_stream_to_buffer_U0_ap_return_13;
wire   [30:0] load_stream_to_buffer_U0_ap_return_14;
wire   [30:0] load_stream_to_buffer_U0_ap_return_15;
wire    ap_channel_done_buf0_col_V_15;
wire    buf0_col_V_15_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_15;
wire    ap_sync_channel_write_buf0_col_V_15;
wire    ap_channel_done_buf0_col_V_14;
wire    buf0_col_V_14_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_14;
wire    ap_sync_channel_write_buf0_col_V_14;
wire    ap_channel_done_buf0_col_V_13;
wire    buf0_col_V_13_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_13;
wire    ap_sync_channel_write_buf0_col_V_13;
wire    ap_channel_done_buf0_col_V_12;
wire    buf0_col_V_12_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_12;
wire    ap_sync_channel_write_buf0_col_V_12;
wire    ap_channel_done_buf0_col_V_11;
wire    buf0_col_V_11_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_11;
wire    ap_sync_channel_write_buf0_col_V_11;
wire    ap_channel_done_buf0_col_V_10;
wire    buf0_col_V_10_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_10;
wire    ap_sync_channel_write_buf0_col_V_10;
wire    ap_channel_done_buf0_col_V_9;
wire    buf0_col_V_9_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_9;
wire    ap_sync_channel_write_buf0_col_V_9;
wire    ap_channel_done_buf0_col_V_8;
wire    buf0_col_V_8_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_8;
wire    ap_sync_channel_write_buf0_col_V_8;
wire    ap_channel_done_buf0_col_V_7;
wire    buf0_col_V_7_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_7;
wire    ap_sync_channel_write_buf0_col_V_7;
wire    ap_channel_done_buf0_col_V_6;
wire    buf0_col_V_6_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_6;
wire    ap_sync_channel_write_buf0_col_V_6;
wire    ap_channel_done_buf0_col_V_5;
wire    buf0_col_V_5_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_5;
wire    ap_sync_channel_write_buf0_col_V_5;
wire    ap_channel_done_buf0_col_V_4;
wire    buf0_col_V_4_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_4;
wire    ap_sync_channel_write_buf0_col_V_4;
wire    ap_channel_done_buf0_col_V_3;
wire    buf0_col_V_3_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_3;
wire    ap_sync_channel_write_buf0_col_V_3;
wire    ap_channel_done_buf0_col_V_2;
wire    buf0_col_V_2_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_2;
wire    ap_sync_channel_write_buf0_col_V_2;
wire    ap_channel_done_buf0_col_V_1;
wire    buf0_col_V_1_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V_1;
wire    ap_sync_channel_write_buf0_col_V_1;
wire    ap_channel_done_buf0_col_V;
wire    buf0_col_V_full_n;
reg    ap_sync_reg_channel_write_buf0_col_V;
wire    ap_sync_channel_write_buf0_col_V;
wire    load_dense_accoding_A_U0_ap_start;
wire    load_dense_accoding_A_U0_ap_done;
wire    load_dense_accoding_A_U0_ap_continue;
wire    load_dense_accoding_A_U0_ap_idle;
wire    load_dense_accoding_A_U0_ap_ready;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_0_address0;
wire    load_dense_accoding_A_U0_dense_ptr_0_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_0_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_0_d0;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_1_address0;
wire    load_dense_accoding_A_U0_dense_ptr_1_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_1_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_1_d0;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_2_address0;
wire    load_dense_accoding_A_U0_dense_ptr_2_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_2_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_2_d0;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_3_address0;
wire    load_dense_accoding_A_U0_dense_ptr_3_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_3_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_3_d0;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_4_address0;
wire    load_dense_accoding_A_U0_dense_ptr_4_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_4_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_4_d0;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_5_address0;
wire    load_dense_accoding_A_U0_dense_ptr_5_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_5_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_5_d0;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_6_address0;
wire    load_dense_accoding_A_U0_dense_ptr_6_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_6_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_6_d0;
wire   [16:0] load_dense_accoding_A_U0_dense_ptr_7_address0;
wire    load_dense_accoding_A_U0_dense_ptr_7_ce0;
wire    load_dense_accoding_A_U0_dense_ptr_7_we0;
wire   [31:0] load_dense_accoding_A_U0_dense_ptr_7_d0;
wire    load_dense_accoding_A_U0_m_axi_gmem1_AWVALID;
wire   [63:0] load_dense_accoding_A_U0_m_axi_gmem1_AWADDR;
wire   [0:0] load_dense_accoding_A_U0_m_axi_gmem1_AWID;
wire   [31:0] load_dense_accoding_A_U0_m_axi_gmem1_AWLEN;
wire   [2:0] load_dense_accoding_A_U0_m_axi_gmem1_AWSIZE;
wire   [1:0] load_dense_accoding_A_U0_m_axi_gmem1_AWBURST;
wire   [1:0] load_dense_accoding_A_U0_m_axi_gmem1_AWLOCK;
wire   [3:0] load_dense_accoding_A_U0_m_axi_gmem1_AWCACHE;
wire   [2:0] load_dense_accoding_A_U0_m_axi_gmem1_AWPROT;
wire   [3:0] load_dense_accoding_A_U0_m_axi_gmem1_AWQOS;
wire   [3:0] load_dense_accoding_A_U0_m_axi_gmem1_AWREGION;
wire   [0:0] load_dense_accoding_A_U0_m_axi_gmem1_AWUSER;
wire    load_dense_accoding_A_U0_m_axi_gmem1_WVALID;
wire   [31:0] load_dense_accoding_A_U0_m_axi_gmem1_WDATA;
wire   [3:0] load_dense_accoding_A_U0_m_axi_gmem1_WSTRB;
wire    load_dense_accoding_A_U0_m_axi_gmem1_WLAST;
wire   [0:0] load_dense_accoding_A_U0_m_axi_gmem1_WID;
wire   [0:0] load_dense_accoding_A_U0_m_axi_gmem1_WUSER;
wire    load_dense_accoding_A_U0_m_axi_gmem1_ARVALID;
wire   [63:0] load_dense_accoding_A_U0_m_axi_gmem1_ARADDR;
wire   [0:0] load_dense_accoding_A_U0_m_axi_gmem1_ARID;
wire   [31:0] load_dense_accoding_A_U0_m_axi_gmem1_ARLEN;
wire   [2:0] load_dense_accoding_A_U0_m_axi_gmem1_ARSIZE;
wire   [1:0] load_dense_accoding_A_U0_m_axi_gmem1_ARBURST;
wire   [1:0] load_dense_accoding_A_U0_m_axi_gmem1_ARLOCK;
wire   [3:0] load_dense_accoding_A_U0_m_axi_gmem1_ARCACHE;
wire   [2:0] load_dense_accoding_A_U0_m_axi_gmem1_ARPROT;
wire   [3:0] load_dense_accoding_A_U0_m_axi_gmem1_ARQOS;
wire   [3:0] load_dense_accoding_A_U0_m_axi_gmem1_ARREGION;
wire   [0:0] load_dense_accoding_A_U0_m_axi_gmem1_ARUSER;
wire    load_dense_accoding_A_U0_m_axi_gmem1_RREADY;
wire    load_dense_accoding_A_U0_m_axi_gmem1_BREADY;
wire    A_stream_full_n;
wire   [63:0] A_stream_dout;
wire   [4:0] A_stream_num_data_valid;
wire   [4:0] A_stream_fifo_cap;
wire    A_stream_empty_n;
wire   [30:0] buf0_col_V_dout;
wire   [1:0] buf0_col_V_num_data_valid;
wire   [1:0] buf0_col_V_fifo_cap;
wire    buf0_col_V_empty_n;
wire   [30:0] buf0_col_V_1_dout;
wire   [1:0] buf0_col_V_1_num_data_valid;
wire   [1:0] buf0_col_V_1_fifo_cap;
wire    buf0_col_V_1_empty_n;
wire   [30:0] buf0_col_V_2_dout;
wire   [1:0] buf0_col_V_2_num_data_valid;
wire   [1:0] buf0_col_V_2_fifo_cap;
wire    buf0_col_V_2_empty_n;
wire   [30:0] buf0_col_V_3_dout;
wire   [1:0] buf0_col_V_3_num_data_valid;
wire   [1:0] buf0_col_V_3_fifo_cap;
wire    buf0_col_V_3_empty_n;
wire   [30:0] buf0_col_V_4_dout;
wire   [1:0] buf0_col_V_4_num_data_valid;
wire   [1:0] buf0_col_V_4_fifo_cap;
wire    buf0_col_V_4_empty_n;
wire   [30:0] buf0_col_V_5_dout;
wire   [1:0] buf0_col_V_5_num_data_valid;
wire   [1:0] buf0_col_V_5_fifo_cap;
wire    buf0_col_V_5_empty_n;
wire   [30:0] buf0_col_V_6_dout;
wire   [1:0] buf0_col_V_6_num_data_valid;
wire   [1:0] buf0_col_V_6_fifo_cap;
wire    buf0_col_V_6_empty_n;
wire   [30:0] buf0_col_V_7_dout;
wire   [1:0] buf0_col_V_7_num_data_valid;
wire   [1:0] buf0_col_V_7_fifo_cap;
wire    buf0_col_V_7_empty_n;
wire   [30:0] buf0_col_V_8_dout;
wire   [1:0] buf0_col_V_8_num_data_valid;
wire   [1:0] buf0_col_V_8_fifo_cap;
wire    buf0_col_V_8_empty_n;
wire   [30:0] buf0_col_V_9_dout;
wire   [1:0] buf0_col_V_9_num_data_valid;
wire   [1:0] buf0_col_V_9_fifo_cap;
wire    buf0_col_V_9_empty_n;
wire   [30:0] buf0_col_V_10_dout;
wire   [1:0] buf0_col_V_10_num_data_valid;
wire   [1:0] buf0_col_V_10_fifo_cap;
wire    buf0_col_V_10_empty_n;
wire   [30:0] buf0_col_V_11_dout;
wire   [1:0] buf0_col_V_11_num_data_valid;
wire   [1:0] buf0_col_V_11_fifo_cap;
wire    buf0_col_V_11_empty_n;
wire   [30:0] buf0_col_V_12_dout;
wire   [1:0] buf0_col_V_12_num_data_valid;
wire   [1:0] buf0_col_V_12_fifo_cap;
wire    buf0_col_V_12_empty_n;
wire   [30:0] buf0_col_V_13_dout;
wire   [1:0] buf0_col_V_13_num_data_valid;
wire   [1:0] buf0_col_V_13_fifo_cap;
wire    buf0_col_V_13_empty_n;
wire   [30:0] buf0_col_V_14_dout;
wire   [1:0] buf0_col_V_14_num_data_valid;
wire   [1:0] buf0_col_V_14_fifo_cap;
wire    buf0_col_V_14_empty_n;
wire   [30:0] buf0_col_V_15_dout;
wire   [1:0] buf0_col_V_15_num_data_valid;
wire   [1:0] buf0_col_V_15_fifo_cap;
wire    buf0_col_V_15_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_load_A_U0_ap_ready;
wire    ap_sync_load_A_U0_ap_ready;
reg    ap_sync_reg_load_dense_accoding_A_U0_ap_ready;
wire    ap_sync_load_dense_accoding_A_U0_ap_ready;
wire   [0:0] start_for_load_stream_to_buffer_U0_din;
wire    start_for_load_stream_to_buffer_U0_full_n;
wire   [0:0] start_for_load_stream_to_buffer_U0_dout;
wire    start_for_load_stream_to_buffer_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_buf0_col_V_15 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_14 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_13 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_12 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_11 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_10 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_9 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_8 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_7 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_6 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_5 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_4 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_3 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_2 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V_1 = 1'b0;
#0 ap_sync_reg_channel_write_buf0_col_V = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_load_A_U0_ap_ready = 1'b0;
#0 ap_sync_reg_load_dense_accoding_A_U0_ap_ready = 1'b0;
end

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_0_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_0_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_0_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_0_d0)
);

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_1_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_1_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_1_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_1_d0)
);

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_2_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_2_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_2_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_2_d0)
);

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_3_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_3_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_3_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_3_d0)
);

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_4_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_4_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_4_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_4_d0)
);

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_5_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_5_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_5_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_5_d0)
);

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_6_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_6_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_6_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_6_d0)
);

spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1_Dense_Buf0_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
Dense_Buf0_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(load_dense_accoding_A_U0_dense_ptr_7_address0),
    .ce0(load_dense_accoding_A_U0_dense_ptr_7_ce0),
    .we0(load_dense_accoding_A_U0_dense_ptr_7_we0),
    .d0(load_dense_accoding_A_U0_dense_ptr_7_d0)
);

spmm_hls_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .K(K),
    .K_c_din(entry_proc_U0_K_c_din),
    .K_c_full_n(1'b1),
    .K_c_write(entry_proc_U0_K_c_write)
);

spmm_hls_load_A load_A_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_A_U0_ap_start),
    .start_full_n(start_for_load_stream_to_buffer_U0_full_n),
    .ap_done(load_A_U0_ap_done),
    .ap_continue(load_A_U0_ap_continue),
    .ap_idle(load_A_U0_ap_idle),
    .ap_ready(load_A_U0_ap_ready),
    .start_out(load_A_U0_start_out),
    .start_write(load_A_U0_start_write),
    .m_axi_gmem0_AWVALID(load_A_U0_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(load_A_U0_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(load_A_U0_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(load_A_U0_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(load_A_U0_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(load_A_U0_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(load_A_U0_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(load_A_U0_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(load_A_U0_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(load_A_U0_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(load_A_U0_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(load_A_U0_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(load_A_U0_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(load_A_U0_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(load_A_U0_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(load_A_U0_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(load_A_U0_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(load_A_U0_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(load_A_U0_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(m_axi_gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(load_A_U0_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(load_A_U0_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(load_A_U0_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(load_A_U0_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(load_A_U0_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(load_A_U0_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(load_A_U0_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(load_A_U0_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(load_A_U0_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(load_A_U0_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(load_A_U0_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(m_axi_gmem0_RVALID),
    .m_axi_gmem0_RREADY(load_A_U0_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(m_axi_gmem0_RDATA),
    .m_axi_gmem0_RLAST(m_axi_gmem0_RLAST),
    .m_axi_gmem0_RID(m_axi_gmem0_RID),
    .m_axi_gmem0_RFIFONUM(m_axi_gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(m_axi_gmem0_RUSER),
    .m_axi_gmem0_RRESP(m_axi_gmem0_RRESP),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(load_A_U0_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .batch(batch),
    .A(A),
    .A_stream1_din(load_A_U0_A_stream1_din),
    .A_stream1_num_data_valid(A_stream_num_data_valid),
    .A_stream1_fifo_cap(A_stream_fifo_cap),
    .A_stream1_full_n(A_stream_full_n),
    .A_stream1_write(load_A_U0_A_stream1_write)
);

spmm_hls_load_stream_to_buffer load_stream_to_buffer_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_stream_to_buffer_U0_ap_start),
    .ap_done(load_stream_to_buffer_U0_ap_done),
    .ap_continue(load_stream_to_buffer_U0_ap_continue),
    .ap_idle(load_stream_to_buffer_U0_ap_idle),
    .ap_ready(load_stream_to_buffer_U0_ap_ready),
    .A_stream2_dout(A_stream_dout),
    .A_stream2_num_data_valid(A_stream_num_data_valid),
    .A_stream2_fifo_cap(A_stream_fifo_cap),
    .A_stream2_empty_n(A_stream_empty_n),
    .A_stream2_read(load_stream_to_buffer_U0_A_stream2_read),
    .ap_return_0(load_stream_to_buffer_U0_ap_return_0),
    .ap_return_1(load_stream_to_buffer_U0_ap_return_1),
    .ap_return_2(load_stream_to_buffer_U0_ap_return_2),
    .ap_return_3(load_stream_to_buffer_U0_ap_return_3),
    .ap_return_4(load_stream_to_buffer_U0_ap_return_4),
    .ap_return_5(load_stream_to_buffer_U0_ap_return_5),
    .ap_return_6(load_stream_to_buffer_U0_ap_return_6),
    .ap_return_7(load_stream_to_buffer_U0_ap_return_7),
    .ap_return_8(load_stream_to_buffer_U0_ap_return_8),
    .ap_return_9(load_stream_to_buffer_U0_ap_return_9),
    .ap_return_10(load_stream_to_buffer_U0_ap_return_10),
    .ap_return_11(load_stream_to_buffer_U0_ap_return_11),
    .ap_return_12(load_stream_to_buffer_U0_ap_return_12),
    .ap_return_13(load_stream_to_buffer_U0_ap_return_13),
    .ap_return_14(load_stream_to_buffer_U0_ap_return_14),
    .ap_return_15(load_stream_to_buffer_U0_ap_return_15)
);

spmm_hls_load_dense_accoding_A load_dense_accoding_A_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_dense_accoding_A_U0_ap_start),
    .ap_done(load_dense_accoding_A_U0_ap_done),
    .ap_continue(load_dense_accoding_A_U0_ap_continue),
    .ap_idle(load_dense_accoding_A_U0_ap_idle),
    .ap_ready(load_dense_accoding_A_U0_ap_ready),
    .p_read(buf0_col_V_dout),
    .p_read1(buf0_col_V_1_dout),
    .p_read2(buf0_col_V_2_dout),
    .p_read3(buf0_col_V_3_dout),
    .p_read4(buf0_col_V_4_dout),
    .p_read5(buf0_col_V_5_dout),
    .p_read6(buf0_col_V_6_dout),
    .p_read7(buf0_col_V_7_dout),
    .p_read8(buf0_col_V_8_dout),
    .p_read9(buf0_col_V_9_dout),
    .p_read10(buf0_col_V_10_dout),
    .p_read11(buf0_col_V_11_dout),
    .p_read12(buf0_col_V_12_dout),
    .p_read13(buf0_col_V_13_dout),
    .p_read14(buf0_col_V_14_dout),
    .p_read15(buf0_col_V_15_dout),
    .dense_ptr_0_address0(load_dense_accoding_A_U0_dense_ptr_0_address0),
    .dense_ptr_0_ce0(load_dense_accoding_A_U0_dense_ptr_0_ce0),
    .dense_ptr_0_we0(load_dense_accoding_A_U0_dense_ptr_0_we0),
    .dense_ptr_0_d0(load_dense_accoding_A_U0_dense_ptr_0_d0),
    .dense_ptr_1_address0(load_dense_accoding_A_U0_dense_ptr_1_address0),
    .dense_ptr_1_ce0(load_dense_accoding_A_U0_dense_ptr_1_ce0),
    .dense_ptr_1_we0(load_dense_accoding_A_U0_dense_ptr_1_we0),
    .dense_ptr_1_d0(load_dense_accoding_A_U0_dense_ptr_1_d0),
    .dense_ptr_2_address0(load_dense_accoding_A_U0_dense_ptr_2_address0),
    .dense_ptr_2_ce0(load_dense_accoding_A_U0_dense_ptr_2_ce0),
    .dense_ptr_2_we0(load_dense_accoding_A_U0_dense_ptr_2_we0),
    .dense_ptr_2_d0(load_dense_accoding_A_U0_dense_ptr_2_d0),
    .dense_ptr_3_address0(load_dense_accoding_A_U0_dense_ptr_3_address0),
    .dense_ptr_3_ce0(load_dense_accoding_A_U0_dense_ptr_3_ce0),
    .dense_ptr_3_we0(load_dense_accoding_A_U0_dense_ptr_3_we0),
    .dense_ptr_3_d0(load_dense_accoding_A_U0_dense_ptr_3_d0),
    .dense_ptr_4_address0(load_dense_accoding_A_U0_dense_ptr_4_address0),
    .dense_ptr_4_ce0(load_dense_accoding_A_U0_dense_ptr_4_ce0),
    .dense_ptr_4_we0(load_dense_accoding_A_U0_dense_ptr_4_we0),
    .dense_ptr_4_d0(load_dense_accoding_A_U0_dense_ptr_4_d0),
    .dense_ptr_5_address0(load_dense_accoding_A_U0_dense_ptr_5_address0),
    .dense_ptr_5_ce0(load_dense_accoding_A_U0_dense_ptr_5_ce0),
    .dense_ptr_5_we0(load_dense_accoding_A_U0_dense_ptr_5_we0),
    .dense_ptr_5_d0(load_dense_accoding_A_U0_dense_ptr_5_d0),
    .dense_ptr_6_address0(load_dense_accoding_A_U0_dense_ptr_6_address0),
    .dense_ptr_6_ce0(load_dense_accoding_A_U0_dense_ptr_6_ce0),
    .dense_ptr_6_we0(load_dense_accoding_A_U0_dense_ptr_6_we0),
    .dense_ptr_6_d0(load_dense_accoding_A_U0_dense_ptr_6_d0),
    .dense_ptr_7_address0(load_dense_accoding_A_U0_dense_ptr_7_address0),
    .dense_ptr_7_ce0(load_dense_accoding_A_U0_dense_ptr_7_ce0),
    .dense_ptr_7_we0(load_dense_accoding_A_U0_dense_ptr_7_we0),
    .dense_ptr_7_d0(load_dense_accoding_A_U0_dense_ptr_7_d0),
    .m_axi_gmem1_AWVALID(load_dense_accoding_A_U0_m_axi_gmem1_AWVALID),
    .m_axi_gmem1_AWREADY(1'b0),
    .m_axi_gmem1_AWADDR(load_dense_accoding_A_U0_m_axi_gmem1_AWADDR),
    .m_axi_gmem1_AWID(load_dense_accoding_A_U0_m_axi_gmem1_AWID),
    .m_axi_gmem1_AWLEN(load_dense_accoding_A_U0_m_axi_gmem1_AWLEN),
    .m_axi_gmem1_AWSIZE(load_dense_accoding_A_U0_m_axi_gmem1_AWSIZE),
    .m_axi_gmem1_AWBURST(load_dense_accoding_A_U0_m_axi_gmem1_AWBURST),
    .m_axi_gmem1_AWLOCK(load_dense_accoding_A_U0_m_axi_gmem1_AWLOCK),
    .m_axi_gmem1_AWCACHE(load_dense_accoding_A_U0_m_axi_gmem1_AWCACHE),
    .m_axi_gmem1_AWPROT(load_dense_accoding_A_U0_m_axi_gmem1_AWPROT),
    .m_axi_gmem1_AWQOS(load_dense_accoding_A_U0_m_axi_gmem1_AWQOS),
    .m_axi_gmem1_AWREGION(load_dense_accoding_A_U0_m_axi_gmem1_AWREGION),
    .m_axi_gmem1_AWUSER(load_dense_accoding_A_U0_m_axi_gmem1_AWUSER),
    .m_axi_gmem1_WVALID(load_dense_accoding_A_U0_m_axi_gmem1_WVALID),
    .m_axi_gmem1_WREADY(1'b0),
    .m_axi_gmem1_WDATA(load_dense_accoding_A_U0_m_axi_gmem1_WDATA),
    .m_axi_gmem1_WSTRB(load_dense_accoding_A_U0_m_axi_gmem1_WSTRB),
    .m_axi_gmem1_WLAST(load_dense_accoding_A_U0_m_axi_gmem1_WLAST),
    .m_axi_gmem1_WID(load_dense_accoding_A_U0_m_axi_gmem1_WID),
    .m_axi_gmem1_WUSER(load_dense_accoding_A_U0_m_axi_gmem1_WUSER),
    .m_axi_gmem1_ARVALID(load_dense_accoding_A_U0_m_axi_gmem1_ARVALID),
    .m_axi_gmem1_ARREADY(m_axi_gmem1_ARREADY),
    .m_axi_gmem1_ARADDR(load_dense_accoding_A_U0_m_axi_gmem1_ARADDR),
    .m_axi_gmem1_ARID(load_dense_accoding_A_U0_m_axi_gmem1_ARID),
    .m_axi_gmem1_ARLEN(load_dense_accoding_A_U0_m_axi_gmem1_ARLEN),
    .m_axi_gmem1_ARSIZE(load_dense_accoding_A_U0_m_axi_gmem1_ARSIZE),
    .m_axi_gmem1_ARBURST(load_dense_accoding_A_U0_m_axi_gmem1_ARBURST),
    .m_axi_gmem1_ARLOCK(load_dense_accoding_A_U0_m_axi_gmem1_ARLOCK),
    .m_axi_gmem1_ARCACHE(load_dense_accoding_A_U0_m_axi_gmem1_ARCACHE),
    .m_axi_gmem1_ARPROT(load_dense_accoding_A_U0_m_axi_gmem1_ARPROT),
    .m_axi_gmem1_ARQOS(load_dense_accoding_A_U0_m_axi_gmem1_ARQOS),
    .m_axi_gmem1_ARREGION(load_dense_accoding_A_U0_m_axi_gmem1_ARREGION),
    .m_axi_gmem1_ARUSER(load_dense_accoding_A_U0_m_axi_gmem1_ARUSER),
    .m_axi_gmem1_RVALID(m_axi_gmem1_RVALID),
    .m_axi_gmem1_RREADY(load_dense_accoding_A_U0_m_axi_gmem1_RREADY),
    .m_axi_gmem1_RDATA(m_axi_gmem1_RDATA),
    .m_axi_gmem1_RLAST(m_axi_gmem1_RLAST),
    .m_axi_gmem1_RID(m_axi_gmem1_RID),
    .m_axi_gmem1_RFIFONUM(m_axi_gmem1_RFIFONUM),
    .m_axi_gmem1_RUSER(m_axi_gmem1_RUSER),
    .m_axi_gmem1_RRESP(m_axi_gmem1_RRESP),
    .m_axi_gmem1_BVALID(1'b0),
    .m_axi_gmem1_BREADY(load_dense_accoding_A_U0_m_axi_gmem1_BREADY),
    .m_axi_gmem1_BRESP(2'd0),
    .m_axi_gmem1_BID(1'd0),
    .m_axi_gmem1_BUSER(1'd0),
    .B(B),
    .K(K)
);

spmm_hls_fifo_w64_d16_S A_stream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_A_U0_A_stream1_din),
    .if_full_n(A_stream_full_n),
    .if_write(load_A_U0_A_stream1_write),
    .if_dout(A_stream_dout),
    .if_num_data_valid(A_stream_num_data_valid),
    .if_fifo_cap(A_stream_fifo_cap),
    .if_empty_n(A_stream_empty_n),
    .if_read(load_stream_to_buffer_U0_A_stream2_read)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_0),
    .if_full_n(buf0_col_V_full_n),
    .if_write(ap_channel_done_buf0_col_V),
    .if_dout(buf0_col_V_dout),
    .if_num_data_valid(buf0_col_V_num_data_valid),
    .if_fifo_cap(buf0_col_V_fifo_cap),
    .if_empty_n(buf0_col_V_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_1),
    .if_full_n(buf0_col_V_1_full_n),
    .if_write(ap_channel_done_buf0_col_V_1),
    .if_dout(buf0_col_V_1_dout),
    .if_num_data_valid(buf0_col_V_1_num_data_valid),
    .if_fifo_cap(buf0_col_V_1_fifo_cap),
    .if_empty_n(buf0_col_V_1_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_2),
    .if_full_n(buf0_col_V_2_full_n),
    .if_write(ap_channel_done_buf0_col_V_2),
    .if_dout(buf0_col_V_2_dout),
    .if_num_data_valid(buf0_col_V_2_num_data_valid),
    .if_fifo_cap(buf0_col_V_2_fifo_cap),
    .if_empty_n(buf0_col_V_2_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_3),
    .if_full_n(buf0_col_V_3_full_n),
    .if_write(ap_channel_done_buf0_col_V_3),
    .if_dout(buf0_col_V_3_dout),
    .if_num_data_valid(buf0_col_V_3_num_data_valid),
    .if_fifo_cap(buf0_col_V_3_fifo_cap),
    .if_empty_n(buf0_col_V_3_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_4),
    .if_full_n(buf0_col_V_4_full_n),
    .if_write(ap_channel_done_buf0_col_V_4),
    .if_dout(buf0_col_V_4_dout),
    .if_num_data_valid(buf0_col_V_4_num_data_valid),
    .if_fifo_cap(buf0_col_V_4_fifo_cap),
    .if_empty_n(buf0_col_V_4_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_5),
    .if_full_n(buf0_col_V_5_full_n),
    .if_write(ap_channel_done_buf0_col_V_5),
    .if_dout(buf0_col_V_5_dout),
    .if_num_data_valid(buf0_col_V_5_num_data_valid),
    .if_fifo_cap(buf0_col_V_5_fifo_cap),
    .if_empty_n(buf0_col_V_5_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_6),
    .if_full_n(buf0_col_V_6_full_n),
    .if_write(ap_channel_done_buf0_col_V_6),
    .if_dout(buf0_col_V_6_dout),
    .if_num_data_valid(buf0_col_V_6_num_data_valid),
    .if_fifo_cap(buf0_col_V_6_fifo_cap),
    .if_empty_n(buf0_col_V_6_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_7),
    .if_full_n(buf0_col_V_7_full_n),
    .if_write(ap_channel_done_buf0_col_V_7),
    .if_dout(buf0_col_V_7_dout),
    .if_num_data_valid(buf0_col_V_7_num_data_valid),
    .if_fifo_cap(buf0_col_V_7_fifo_cap),
    .if_empty_n(buf0_col_V_7_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_8),
    .if_full_n(buf0_col_V_8_full_n),
    .if_write(ap_channel_done_buf0_col_V_8),
    .if_dout(buf0_col_V_8_dout),
    .if_num_data_valid(buf0_col_V_8_num_data_valid),
    .if_fifo_cap(buf0_col_V_8_fifo_cap),
    .if_empty_n(buf0_col_V_8_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_9),
    .if_full_n(buf0_col_V_9_full_n),
    .if_write(ap_channel_done_buf0_col_V_9),
    .if_dout(buf0_col_V_9_dout),
    .if_num_data_valid(buf0_col_V_9_num_data_valid),
    .if_fifo_cap(buf0_col_V_9_fifo_cap),
    .if_empty_n(buf0_col_V_9_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_10),
    .if_full_n(buf0_col_V_10_full_n),
    .if_write(ap_channel_done_buf0_col_V_10),
    .if_dout(buf0_col_V_10_dout),
    .if_num_data_valid(buf0_col_V_10_num_data_valid),
    .if_fifo_cap(buf0_col_V_10_fifo_cap),
    .if_empty_n(buf0_col_V_10_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_11),
    .if_full_n(buf0_col_V_11_full_n),
    .if_write(ap_channel_done_buf0_col_V_11),
    .if_dout(buf0_col_V_11_dout),
    .if_num_data_valid(buf0_col_V_11_num_data_valid),
    .if_fifo_cap(buf0_col_V_11_fifo_cap),
    .if_empty_n(buf0_col_V_11_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_12),
    .if_full_n(buf0_col_V_12_full_n),
    .if_write(ap_channel_done_buf0_col_V_12),
    .if_dout(buf0_col_V_12_dout),
    .if_num_data_valid(buf0_col_V_12_num_data_valid),
    .if_fifo_cap(buf0_col_V_12_fifo_cap),
    .if_empty_n(buf0_col_V_12_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_13),
    .if_full_n(buf0_col_V_13_full_n),
    .if_write(ap_channel_done_buf0_col_V_13),
    .if_dout(buf0_col_V_13_dout),
    .if_num_data_valid(buf0_col_V_13_num_data_valid),
    .if_fifo_cap(buf0_col_V_13_fifo_cap),
    .if_empty_n(buf0_col_V_13_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_14),
    .if_full_n(buf0_col_V_14_full_n),
    .if_write(ap_channel_done_buf0_col_V_14),
    .if_dout(buf0_col_V_14_dout),
    .if_num_data_valid(buf0_col_V_14_num_data_valid),
    .if_fifo_cap(buf0_col_V_14_fifo_cap),
    .if_empty_n(buf0_col_V_14_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_fifo_w31_d2_S buf0_col_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_stream_to_buffer_U0_ap_return_15),
    .if_full_n(buf0_col_V_15_full_n),
    .if_write(ap_channel_done_buf0_col_V_15),
    .if_dout(buf0_col_V_15_dout),
    .if_num_data_valid(buf0_col_V_15_num_data_valid),
    .if_fifo_cap(buf0_col_V_15_fifo_cap),
    .if_empty_n(buf0_col_V_15_empty_n),
    .if_read(load_dense_accoding_A_U0_ap_ready)
);

spmm_hls_start_for_load_stream_to_buffer_U0 start_for_load_stream_to_buffer_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_load_stream_to_buffer_U0_din),
    .if_full_n(start_for_load_stream_to_buffer_U0_full_n),
    .if_write(load_A_U0_start_write),
    .if_dout(start_for_load_stream_to_buffer_U0_dout),
    .if_empty_n(start_for_load_stream_to_buffer_U0_empty_n),
    .if_read(load_stream_to_buffer_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V <= ap_sync_channel_write_buf0_col_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_1 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_1 <= ap_sync_channel_write_buf0_col_V_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_10 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_10 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_10 <= ap_sync_channel_write_buf0_col_V_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_11 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_11 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_11 <= ap_sync_channel_write_buf0_col_V_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_12 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_12 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_12 <= ap_sync_channel_write_buf0_col_V_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_13 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_13 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_13 <= ap_sync_channel_write_buf0_col_V_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_14 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_14 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_14 <= ap_sync_channel_write_buf0_col_V_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_15 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_15 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_15 <= ap_sync_channel_write_buf0_col_V_15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_2 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_2 <= ap_sync_channel_write_buf0_col_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_3 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_3 <= ap_sync_channel_write_buf0_col_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_4 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_4 <= ap_sync_channel_write_buf0_col_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_5 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_5 <= ap_sync_channel_write_buf0_col_V_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_6 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_6 <= ap_sync_channel_write_buf0_col_V_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_7 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_7 <= ap_sync_channel_write_buf0_col_V_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_8 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_8 <= ap_sync_channel_write_buf0_col_V_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_buf0_col_V_9 <= 1'b0;
    end else begin
        if (((load_stream_to_buffer_U0_ap_done & load_stream_to_buffer_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_buf0_col_V_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_buf0_col_V_9 <= ap_sync_channel_write_buf0_col_V_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_load_A_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_A_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_A_U0_ap_ready <= ap_sync_load_A_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_load_dense_accoding_A_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_dense_accoding_A_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_dense_accoding_A_U0_ap_ready <= ap_sync_load_dense_accoding_A_U0_ap_ready;
        end
    end
end

assign ap_channel_done_buf0_col_V = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V ^ 1'b1));

assign ap_channel_done_buf0_col_V_1 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_1 ^ 1'b1));

assign ap_channel_done_buf0_col_V_10 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_10 ^ 1'b1));

assign ap_channel_done_buf0_col_V_11 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_11 ^ 1'b1));

assign ap_channel_done_buf0_col_V_12 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_12 ^ 1'b1));

assign ap_channel_done_buf0_col_V_13 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_13 ^ 1'b1));

assign ap_channel_done_buf0_col_V_14 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_14 ^ 1'b1));

assign ap_channel_done_buf0_col_V_15 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_15 ^ 1'b1));

assign ap_channel_done_buf0_col_V_2 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_2 ^ 1'b1));

assign ap_channel_done_buf0_col_V_3 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_3 ^ 1'b1));

assign ap_channel_done_buf0_col_V_4 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_4 ^ 1'b1));

assign ap_channel_done_buf0_col_V_5 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_5 ^ 1'b1));

assign ap_channel_done_buf0_col_V_6 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_6 ^ 1'b1));

assign ap_channel_done_buf0_col_V_7 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_7 ^ 1'b1));

assign ap_channel_done_buf0_col_V_8 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_8 ^ 1'b1));

assign ap_channel_done_buf0_col_V_9 = (load_stream_to_buffer_U0_ap_done & (ap_sync_reg_channel_write_buf0_col_V_9 ^ 1'b1));

assign ap_done = load_dense_accoding_A_U0_ap_done;

assign ap_idle = (load_stream_to_buffer_U0_ap_idle & load_dense_accoding_A_U0_ap_idle & load_A_U0_ap_idle & (buf0_col_V_15_empty_n ^ 1'b1) & (buf0_col_V_14_empty_n ^ 1'b1) & (buf0_col_V_13_empty_n ^ 1'b1) & (buf0_col_V_12_empty_n ^ 1'b1) & (buf0_col_V_11_empty_n ^ 1'b1) & (buf0_col_V_10_empty_n ^ 1'b1) & (buf0_col_V_9_empty_n ^ 1'b1) & (buf0_col_V_8_empty_n ^ 1'b1) & (buf0_col_V_7_empty_n ^ 1'b1) & (buf0_col_V_6_empty_n ^ 1'b1) & (buf0_col_V_5_empty_n ^ 1'b1) & (buf0_col_V_4_empty_n ^ 1'b1) & (buf0_col_V_3_empty_n ^ 1'b1) & (buf0_col_V_2_empty_n ^ 1'b1) & (buf0_col_V_1_empty_n ^ 1'b1) & (buf0_col_V_empty_n ^ 1'b1) & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_buf0_col_V = ((buf0_col_V_full_n & ap_channel_done_buf0_col_V) | ap_sync_reg_channel_write_buf0_col_V);

assign ap_sync_channel_write_buf0_col_V_1 = ((buf0_col_V_1_full_n & ap_channel_done_buf0_col_V_1) | ap_sync_reg_channel_write_buf0_col_V_1);

assign ap_sync_channel_write_buf0_col_V_10 = ((buf0_col_V_10_full_n & ap_channel_done_buf0_col_V_10) | ap_sync_reg_channel_write_buf0_col_V_10);

assign ap_sync_channel_write_buf0_col_V_11 = ((buf0_col_V_11_full_n & ap_channel_done_buf0_col_V_11) | ap_sync_reg_channel_write_buf0_col_V_11);

assign ap_sync_channel_write_buf0_col_V_12 = ((buf0_col_V_12_full_n & ap_channel_done_buf0_col_V_12) | ap_sync_reg_channel_write_buf0_col_V_12);

assign ap_sync_channel_write_buf0_col_V_13 = ((buf0_col_V_13_full_n & ap_channel_done_buf0_col_V_13) | ap_sync_reg_channel_write_buf0_col_V_13);

assign ap_sync_channel_write_buf0_col_V_14 = ((buf0_col_V_14_full_n & ap_channel_done_buf0_col_V_14) | ap_sync_reg_channel_write_buf0_col_V_14);

assign ap_sync_channel_write_buf0_col_V_15 = ((buf0_col_V_15_full_n & ap_channel_done_buf0_col_V_15) | ap_sync_reg_channel_write_buf0_col_V_15);

assign ap_sync_channel_write_buf0_col_V_2 = ((buf0_col_V_2_full_n & ap_channel_done_buf0_col_V_2) | ap_sync_reg_channel_write_buf0_col_V_2);

assign ap_sync_channel_write_buf0_col_V_3 = ((buf0_col_V_3_full_n & ap_channel_done_buf0_col_V_3) | ap_sync_reg_channel_write_buf0_col_V_3);

assign ap_sync_channel_write_buf0_col_V_4 = ((buf0_col_V_4_full_n & ap_channel_done_buf0_col_V_4) | ap_sync_reg_channel_write_buf0_col_V_4);

assign ap_sync_channel_write_buf0_col_V_5 = ((buf0_col_V_5_full_n & ap_channel_done_buf0_col_V_5) | ap_sync_reg_channel_write_buf0_col_V_5);

assign ap_sync_channel_write_buf0_col_V_6 = ((buf0_col_V_6_full_n & ap_channel_done_buf0_col_V_6) | ap_sync_reg_channel_write_buf0_col_V_6);

assign ap_sync_channel_write_buf0_col_V_7 = ((buf0_col_V_7_full_n & ap_channel_done_buf0_col_V_7) | ap_sync_reg_channel_write_buf0_col_V_7);

assign ap_sync_channel_write_buf0_col_V_8 = ((buf0_col_V_8_full_n & ap_channel_done_buf0_col_V_8) | ap_sync_reg_channel_write_buf0_col_V_8);

assign ap_sync_channel_write_buf0_col_V_9 = ((buf0_col_V_9_full_n & ap_channel_done_buf0_col_V_9) | ap_sync_reg_channel_write_buf0_col_V_9);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_load_A_U0_ap_ready = (load_A_U0_ap_ready | ap_sync_reg_load_A_U0_ap_ready);

assign ap_sync_load_dense_accoding_A_U0_ap_ready = (load_dense_accoding_A_U0_ap_ready | ap_sync_reg_load_dense_accoding_A_U0_ap_ready);

assign ap_sync_ready = (ap_sync_load_dense_accoding_A_U0_ap_ready & ap_sync_load_A_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign load_A_U0_ap_continue = 1'b1;

assign load_A_U0_ap_start = ((ap_sync_reg_load_A_U0_ap_ready ^ 1'b1) & ap_start);

assign load_dense_accoding_A_U0_ap_continue = ap_continue;

assign load_dense_accoding_A_U0_ap_start = ((ap_sync_reg_load_dense_accoding_A_U0_ap_ready ^ 1'b1) & buf0_col_V_empty_n & buf0_col_V_9_empty_n & buf0_col_V_8_empty_n & buf0_col_V_7_empty_n & buf0_col_V_6_empty_n & buf0_col_V_5_empty_n & buf0_col_V_4_empty_n & buf0_col_V_3_empty_n & buf0_col_V_2_empty_n & buf0_col_V_1_empty_n & buf0_col_V_15_empty_n & buf0_col_V_14_empty_n & buf0_col_V_13_empty_n & buf0_col_V_12_empty_n & buf0_col_V_11_empty_n & buf0_col_V_10_empty_n & ap_start);

assign load_stream_to_buffer_U0_ap_continue = (ap_sync_channel_write_buf0_col_V_9 & ap_sync_channel_write_buf0_col_V_8 & ap_sync_channel_write_buf0_col_V_7 & ap_sync_channel_write_buf0_col_V_6 & ap_sync_channel_write_buf0_col_V_5 & ap_sync_channel_write_buf0_col_V_4 & ap_sync_channel_write_buf0_col_V_3 & ap_sync_channel_write_buf0_col_V_2 & ap_sync_channel_write_buf0_col_V_15 & ap_sync_channel_write_buf0_col_V_14 & ap_sync_channel_write_buf0_col_V_13 & ap_sync_channel_write_buf0_col_V_12 & ap_sync_channel_write_buf0_col_V_11 & ap_sync_channel_write_buf0_col_V_10 & ap_sync_channel_write_buf0_col_V_1 & ap_sync_channel_write_buf0_col_V);

assign load_stream_to_buffer_U0_ap_start = start_for_load_stream_to_buffer_U0_empty_n;

assign m_axi_gmem0_ARADDR = load_A_U0_m_axi_gmem0_ARADDR;

assign m_axi_gmem0_ARBURST = load_A_U0_m_axi_gmem0_ARBURST;

assign m_axi_gmem0_ARCACHE = load_A_U0_m_axi_gmem0_ARCACHE;

assign m_axi_gmem0_ARID = load_A_U0_m_axi_gmem0_ARID;

assign m_axi_gmem0_ARLEN = load_A_U0_m_axi_gmem0_ARLEN;

assign m_axi_gmem0_ARLOCK = load_A_U0_m_axi_gmem0_ARLOCK;

assign m_axi_gmem0_ARPROT = load_A_U0_m_axi_gmem0_ARPROT;

assign m_axi_gmem0_ARQOS = load_A_U0_m_axi_gmem0_ARQOS;

assign m_axi_gmem0_ARREGION = load_A_U0_m_axi_gmem0_ARREGION;

assign m_axi_gmem0_ARSIZE = load_A_U0_m_axi_gmem0_ARSIZE;

assign m_axi_gmem0_ARUSER = load_A_U0_m_axi_gmem0_ARUSER;

assign m_axi_gmem0_ARVALID = load_A_U0_m_axi_gmem0_ARVALID;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_RREADY = load_A_U0_m_axi_gmem0_RREADY;

assign m_axi_gmem0_WDATA = 64'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 8'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign m_axi_gmem1_ARADDR = load_dense_accoding_A_U0_m_axi_gmem1_ARADDR;

assign m_axi_gmem1_ARBURST = load_dense_accoding_A_U0_m_axi_gmem1_ARBURST;

assign m_axi_gmem1_ARCACHE = load_dense_accoding_A_U0_m_axi_gmem1_ARCACHE;

assign m_axi_gmem1_ARID = load_dense_accoding_A_U0_m_axi_gmem1_ARID;

assign m_axi_gmem1_ARLEN = load_dense_accoding_A_U0_m_axi_gmem1_ARLEN;

assign m_axi_gmem1_ARLOCK = load_dense_accoding_A_U0_m_axi_gmem1_ARLOCK;

assign m_axi_gmem1_ARPROT = load_dense_accoding_A_U0_m_axi_gmem1_ARPROT;

assign m_axi_gmem1_ARQOS = load_dense_accoding_A_U0_m_axi_gmem1_ARQOS;

assign m_axi_gmem1_ARREGION = load_dense_accoding_A_U0_m_axi_gmem1_ARREGION;

assign m_axi_gmem1_ARSIZE = load_dense_accoding_A_U0_m_axi_gmem1_ARSIZE;

assign m_axi_gmem1_ARUSER = load_dense_accoding_A_U0_m_axi_gmem1_ARUSER;

assign m_axi_gmem1_ARVALID = load_dense_accoding_A_U0_m_axi_gmem1_ARVALID;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_RREADY = load_dense_accoding_A_U0_m_axi_gmem1_RREADY;

assign m_axi_gmem1_WDATA = 32'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 4'd0;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem1_WVALID = 1'b0;

assign start_for_load_stream_to_buffer_U0_din = 1'b1;

endmodule //spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1
