// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module spmm_hls_pu_kernel_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_34_dout,
        s_34_num_data_valid,
        s_34_fifo_cap,
        s_34_empty_n,
        s_34_read,
        m_axi_gmem6_AWVALID,
        m_axi_gmem6_AWREADY,
        m_axi_gmem6_AWADDR,
        m_axi_gmem6_AWID,
        m_axi_gmem6_AWLEN,
        m_axi_gmem6_AWSIZE,
        m_axi_gmem6_AWBURST,
        m_axi_gmem6_AWLOCK,
        m_axi_gmem6_AWCACHE,
        m_axi_gmem6_AWPROT,
        m_axi_gmem6_AWQOS,
        m_axi_gmem6_AWREGION,
        m_axi_gmem6_AWUSER,
        m_axi_gmem6_WVALID,
        m_axi_gmem6_WREADY,
        m_axi_gmem6_WDATA,
        m_axi_gmem6_WSTRB,
        m_axi_gmem6_WLAST,
        m_axi_gmem6_WID,
        m_axi_gmem6_WUSER,
        m_axi_gmem6_ARVALID,
        m_axi_gmem6_ARREADY,
        m_axi_gmem6_ARADDR,
        m_axi_gmem6_ARID,
        m_axi_gmem6_ARLEN,
        m_axi_gmem6_ARSIZE,
        m_axi_gmem6_ARBURST,
        m_axi_gmem6_ARLOCK,
        m_axi_gmem6_ARCACHE,
        m_axi_gmem6_ARPROT,
        m_axi_gmem6_ARQOS,
        m_axi_gmem6_ARREGION,
        m_axi_gmem6_ARUSER,
        m_axi_gmem6_RVALID,
        m_axi_gmem6_RREADY,
        m_axi_gmem6_RDATA,
        m_axi_gmem6_RLAST,
        m_axi_gmem6_RID,
        m_axi_gmem6_RFIFONUM,
        m_axi_gmem6_RUSER,
        m_axi_gmem6_RRESP,
        m_axi_gmem6_BVALID,
        m_axi_gmem6_BREADY,
        m_axi_gmem6_BRESP,
        m_axi_gmem6_BID,
        m_axi_gmem6_BUSER,
        B4,
        K
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [387:0] s_34_dout;
input  [4:0] s_34_num_data_valid;
input  [4:0] s_34_fifo_cap;
input   s_34_empty_n;
output   s_34_read;
output   m_axi_gmem6_AWVALID;
input   m_axi_gmem6_AWREADY;
output  [63:0] m_axi_gmem6_AWADDR;
output  [0:0] m_axi_gmem6_AWID;
output  [31:0] m_axi_gmem6_AWLEN;
output  [2:0] m_axi_gmem6_AWSIZE;
output  [1:0] m_axi_gmem6_AWBURST;
output  [1:0] m_axi_gmem6_AWLOCK;
output  [3:0] m_axi_gmem6_AWCACHE;
output  [2:0] m_axi_gmem6_AWPROT;
output  [3:0] m_axi_gmem6_AWQOS;
output  [3:0] m_axi_gmem6_AWREGION;
output  [0:0] m_axi_gmem6_AWUSER;
output   m_axi_gmem6_WVALID;
input   m_axi_gmem6_WREADY;
output  [31:0] m_axi_gmem6_WDATA;
output  [3:0] m_axi_gmem6_WSTRB;
output   m_axi_gmem6_WLAST;
output  [0:0] m_axi_gmem6_WID;
output  [0:0] m_axi_gmem6_WUSER;
output   m_axi_gmem6_ARVALID;
input   m_axi_gmem6_ARREADY;
output  [63:0] m_axi_gmem6_ARADDR;
output  [0:0] m_axi_gmem6_ARID;
output  [31:0] m_axi_gmem6_ARLEN;
output  [2:0] m_axi_gmem6_ARSIZE;
output  [1:0] m_axi_gmem6_ARBURST;
output  [1:0] m_axi_gmem6_ARLOCK;
output  [3:0] m_axi_gmem6_ARCACHE;
output  [2:0] m_axi_gmem6_ARPROT;
output  [3:0] m_axi_gmem6_ARQOS;
output  [3:0] m_axi_gmem6_ARREGION;
output  [0:0] m_axi_gmem6_ARUSER;
input   m_axi_gmem6_RVALID;
output   m_axi_gmem6_RREADY;
input  [31:0] m_axi_gmem6_RDATA;
input   m_axi_gmem6_RLAST;
input  [0:0] m_axi_gmem6_RID;
input  [8:0] m_axi_gmem6_RFIFONUM;
input  [0:0] m_axi_gmem6_RUSER;
input  [1:0] m_axi_gmem6_RRESP;
input   m_axi_gmem6_BVALID;
output   m_axi_gmem6_BREADY;
input  [1:0] m_axi_gmem6_BRESP;
input  [0:0] m_axi_gmem6_BID;
input  [0:0] m_axi_gmem6_BUSER;
input  [63:0] B4;
input  [31:0] K;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg s_34_read;
reg m_axi_gmem6_ARVALID;
reg m_axi_gmem6_RREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    s_34_blk_n;
reg    gmem6_blk_n_AR;
wire    ap_CS_fsm_state11;
reg    gmem6_blk_n_R;
wire    ap_CS_fsm_state19;
reg   [31:0] trunc_ln151_3_reg_467;
reg   [31:0] trunc_ln151_4_reg_472;
reg   [0:0] tmp_8_reg_477;
reg   [0:0] tmp_9_reg_482;
wire    ap_CS_fsm_state4;
wire   [29:0] trunc_ln_fu_371_p4;
reg   [29:0] trunc_ln_reg_492;
wire   [31:0] K_cast10_i_fu_381_p1;
reg   [31:0] K_cast10_i_reg_497;
wire   [2:0] add_ln111_fu_394_p2;
reg   [2:0] add_ln111_reg_506;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln111_fu_400_p1;
reg   [63:0] zext_ln111_reg_511;
wire   [0:0] icmp_ln111_fu_388_p2;
wire   [0:0] tile_ref_q0;
reg   [0:0] tile_ref_load_reg_521;
wire    ap_CS_fsm_state6;
wire   [31:0] tile_y_q0;
reg  signed [31:0] tile_y_load_reg_530;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_405_p2;
reg   [31:0] mul_i_i_reg_535;
wire    ap_CS_fsm_state9;
reg   [63:0] gmem6_addr_reg_540;
wire    ap_CS_fsm_state10;
wire   [29:0] add_ln114_3_fu_450_p2;
reg   [29:0] add_ln114_3_reg_549;
wire    ap_CS_fsm_state18;
reg   [1:0] tile_y_address0;
reg    tile_y_ce0;
reg    tile_y_we0;
reg   [1:0] tile_ref_address0;
reg    tile_ref_ce0;
reg    tile_ref_we0;
reg   [1:0] p_v_y_address0;
reg    p_v_y_ce0;
reg    p_v_y_we0;
reg   [31:0] p_v_y_d0;
wire   [31:0] p_v_y_q0;
reg   [1:0] p_v_y_address1;
reg    p_v_y_ce1;
reg    p_v_y_we1;
reg   [31:0] p_v_y_d1;
reg   [1:0] p_ref_address0;
reg    p_ref_ce0;
reg    p_ref_we0;
reg   [0:0] p_ref_d0;
wire   [0:0] p_ref_q0;
reg   [1:0] p_ref_address1;
reg    p_ref_ce1;
reg    p_ref_we1;
reg   [0:0] p_ref_d1;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_done;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_idle;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_ready;
wire   [1:0] grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_v_y_address0;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_v_y_ce0;
wire   [1:0] grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_address0;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_ce0;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_we0;
wire   [31:0] grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_d0;
wire   [1:0] grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_ref_address0;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_ref_ce0;
wire   [1:0] grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_address0;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_ce0;
wire    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_we0;
wire   [0:0] grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_d0;
reg   [29:0] j_reg_271;
wire    ap_CS_fsm_state17;
reg    grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state2;
wire  signed [63:0] sext_ln114_fu_435_p1;
reg   [2:0] i_fu_112;
wire   [0:0] icmp_ln114_fu_445_p2;
reg    ap_block_state1;
wire   [29:0] grp_fu_405_p1;
wire    ap_CS_fsm_state8;
wire   [33:0] shl_ln_fu_409_p3;
wire   [63:0] zext_ln114_fu_416_p1;
wire   [63:0] add_ln114_fu_420_p2;
wire   [61:0] trunc_ln7_fu_425_p4;
reg   [18:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 19'd1;
#0 grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start_reg = 1'b0;
end

spmm_hls_pu_kernel_tile_y_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
tile_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tile_y_address0),
    .ce0(tile_y_ce0),
    .we0(tile_y_we0),
    .d0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_d0),
    .q0(tile_y_q0)
);

spmm_hls_pu_kernel_tile_ref_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
tile_ref_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tile_ref_address0),
    .ce0(tile_ref_ce0),
    .we0(tile_ref_we0),
    .d0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_d0),
    .q0(tile_ref_q0)
);

spmm_hls_pu_kernel_p_v_y_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
p_v_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_v_y_address0),
    .ce0(p_v_y_ce0),
    .we0(p_v_y_we0),
    .d0(p_v_y_d0),
    .q0(p_v_y_q0),
    .address1(p_v_y_address1),
    .ce1(p_v_y_ce1),
    .we1(p_v_y_we1),
    .d1(p_v_y_d1)
);

spmm_hls_pu_kernel_p_ref_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
p_ref_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ref_address0),
    .ce0(p_ref_ce0),
    .we0(p_ref_we0),
    .d0(p_ref_d0),
    .q0(p_ref_q0),
    .address1(p_ref_address1),
    .ce1(p_ref_ce1),
    .we1(p_ref_we1),
    .d1(p_ref_d1)
);

spmm_hls_pu_kernel_10_Pipeline_pu_save_stream_into_pu grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start),
    .ap_done(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_done),
    .ap_idle(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_idle),
    .ap_ready(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_ready),
    .p_v_y_address0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_v_y_address0),
    .p_v_y_ce0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_v_y_ce0),
    .p_v_y_q0(p_v_y_q0),
    .tile_y_address0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_address0),
    .tile_y_ce0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_ce0),
    .tile_y_we0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_we0),
    .tile_y_d0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_d0),
    .p_ref_address0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_ref_address0),
    .p_ref_ce0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_ref_ce0),
    .p_ref_q0(p_ref_q0),
    .tile_ref_address0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_address0),
    .tile_ref_ce0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_ce0),
    .tile_ref_we0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_we0),
    .tile_ref_d0(grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_d0)
);

spmm_hls_mul_32s_30ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 32 ))
mul_32s_30ns_32_2_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tile_y_load_reg_530),
    .din1(grp_fu_405_p1),
    .ce(1'b1),
    .dout(grp_fu_405_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln111_fu_388_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start_reg <= 1'b1;
        end else if ((grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_ready == 1'b1)) begin
            grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_112 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & ((icmp_ln114_fu_445_p2 == 1'd1) | (tile_ref_load_reg_521 == 1'd1)))) begin
        i_fu_112 <= add_ln111_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_reg_271 <= 30'd0;
    end else if (((m_axi_gmem6_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        j_reg_271 <= add_ln114_3_reg_549;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        K_cast10_i_reg_497[29 : 0] <= K_cast10_i_fu_381_p1[29 : 0];
        trunc_ln_reg_492 <= {{K[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln111_reg_506 <= add_ln111_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (tile_ref_load_reg_521 == 1'd0))) begin
        add_ln114_3_reg_549 <= add_ln114_3_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        gmem6_addr_reg_540 <= sext_ln114_fu_435_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mul_i_i_reg_535 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tile_ref_load_reg_521 <= tile_ref_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tile_y_load_reg_530 <= tile_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_8_reg_477 <= s_34_dout[32'd386];
        tmp_9_reg_482 <= s_34_dout[32'd387];
        trunc_ln151_3_reg_467 <= {{s_34_dout[287:256]}};
        trunc_ln151_4_reg_472 <= {{s_34_dout[383:352]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln111_fu_388_p2 == 1'd0))) begin
        zext_ln111_reg_511[2 : 0] <= zext_ln111_fu_400_p1[2 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem6_ARREADY == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem6_RVALID == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if (((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln111_fu_388_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln111_fu_388_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        gmem6_blk_n_AR = m_axi_gmem6_ARREADY;
    end else begin
        gmem6_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        gmem6_blk_n_R = m_axi_gmem6_RVALID;
    end else begin
        gmem6_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((m_axi_gmem6_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_gmem6_ARVALID = 1'b1;
    end else begin
        m_axi_gmem6_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem6_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem6_RREADY = 1'b1;
    end else begin
        m_axi_gmem6_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_ref_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_ref_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_ref_address0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_ref_address0;
    end else begin
        p_ref_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_ref_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_ref_address1 = 64'd0;
    end else begin
        p_ref_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_ref_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_ref_ce0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_ref_ce0;
    end else begin
        p_ref_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_ref_ce1 = 1'b1;
    end else begin
        p_ref_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_ref_d0 = tmp_9_reg_482;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_ref_d0 = s_34_dout[32'd385];
    end else begin
        p_ref_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_ref_d1 = tmp_8_reg_477;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_ref_d1 = s_34_dout[32'd384];
    end else begin
        p_ref_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_ref_we0 = 1'b1;
    end else begin
        p_ref_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_ref_we1 = 1'b1;
    end else begin
        p_ref_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_v_y_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_v_y_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_v_y_address0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_v_y_address0;
    end else begin
        p_v_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_v_y_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_v_y_address1 = 64'd0;
    end else begin
        p_v_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_v_y_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_v_y_ce0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_p_v_y_ce0;
    end else begin
        p_v_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_v_y_ce1 = 1'b1;
    end else begin
        p_v_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_v_y_d0 = trunc_ln151_4_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_v_y_d0 = {{s_34_dout[191:160]}};
    end else begin
        p_v_y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_v_y_d1 = trunc_ln151_3_reg_467;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_v_y_d1 = {{s_34_dout[95:64]}};
    end else begin
        p_v_y_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_v_y_we0 = 1'b1;
    end else begin
        p_v_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_v_y_we1 = 1'b1;
    end else begin
        p_v_y_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_34_blk_n = s_34_empty_n;
    end else begin
        s_34_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_34_read = 1'b1;
    end else begin
        s_34_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tile_ref_address0 = zext_ln111_fu_400_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_ref_address0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_address0;
    end else begin
        tile_ref_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tile_ref_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_ref_ce0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_ce0;
    end else begin
        tile_ref_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_ref_we0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_ref_we0;
    end else begin
        tile_ref_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tile_y_address0 = zext_ln111_reg_511;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_y_address0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_address0;
    end else begin
        tile_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tile_y_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_y_ce0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_ce0;
    end else begin
        tile_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tile_y_we0 = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_tile_y_we0;
    end else begin
        tile_y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln111_fu_388_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tile_ref_q0 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((m_axi_gmem6_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & ((icmp_ln114_fu_445_p2 == 1'd1) | (tile_ref_load_reg_521 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((m_axi_gmem6_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign K_cast10_i_fu_381_p1 = trunc_ln_fu_371_p4;

assign add_ln111_fu_394_p2 = (i_fu_112 + 3'd1);

assign add_ln114_3_fu_450_p2 = (j_reg_271 + 30'd1);

assign add_ln114_fu_420_p2 = (zext_ln114_fu_416_p1 + B4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((s_34_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_fu_405_p1 = K_cast10_i_reg_497;

assign grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start = grp_pu_kernel_10_Pipeline_pu_save_stream_into_pu_fu_282_ap_start_reg;

assign icmp_ln111_fu_388_p2 = ((i_fu_112 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_445_p2 = ((j_reg_271 == trunc_ln_reg_492) ? 1'b1 : 1'b0);

assign m_axi_gmem6_ARADDR = gmem6_addr_reg_540;

assign m_axi_gmem6_ARBURST = 2'd0;

assign m_axi_gmem6_ARCACHE = 4'd0;

assign m_axi_gmem6_ARID = 1'd0;

assign m_axi_gmem6_ARLEN = K_cast10_i_reg_497;

assign m_axi_gmem6_ARLOCK = 2'd0;

assign m_axi_gmem6_ARPROT = 3'd0;

assign m_axi_gmem6_ARQOS = 4'd0;

assign m_axi_gmem6_ARREGION = 4'd0;

assign m_axi_gmem6_ARSIZE = 3'd0;

assign m_axi_gmem6_ARUSER = 1'd0;

assign m_axi_gmem6_AWADDR = 64'd0;

assign m_axi_gmem6_AWBURST = 2'd0;

assign m_axi_gmem6_AWCACHE = 4'd0;

assign m_axi_gmem6_AWID = 1'd0;

assign m_axi_gmem6_AWLEN = 32'd0;

assign m_axi_gmem6_AWLOCK = 2'd0;

assign m_axi_gmem6_AWPROT = 3'd0;

assign m_axi_gmem6_AWQOS = 4'd0;

assign m_axi_gmem6_AWREGION = 4'd0;

assign m_axi_gmem6_AWSIZE = 3'd0;

assign m_axi_gmem6_AWUSER = 1'd0;

assign m_axi_gmem6_AWVALID = 1'b0;

assign m_axi_gmem6_BREADY = 1'b0;

assign m_axi_gmem6_WDATA = 32'd0;

assign m_axi_gmem6_WID = 1'd0;

assign m_axi_gmem6_WLAST = 1'b0;

assign m_axi_gmem6_WSTRB = 4'd0;

assign m_axi_gmem6_WUSER = 1'd0;

assign m_axi_gmem6_WVALID = 1'b0;

assign sext_ln114_fu_435_p1 = $signed(trunc_ln7_fu_425_p4);

assign shl_ln_fu_409_p3 = {{mul_i_i_reg_535}, {2'd0}};

assign trunc_ln7_fu_425_p4 = {{add_ln114_fu_420_p2[63:2]}};

assign trunc_ln_fu_371_p4 = {{K[31:2]}};

assign zext_ln111_fu_400_p1 = i_fu_112;

assign zext_ln114_fu_416_p1 = shl_ln_fu_409_p3;

always @ (posedge ap_clk) begin
    K_cast10_i_reg_497[31:30] <= 2'b00;
    zext_ln111_reg_511[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //spmm_hls_pu_kernel_10
