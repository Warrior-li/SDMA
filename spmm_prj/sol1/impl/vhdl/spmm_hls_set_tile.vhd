-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spmm_hls_set_tile is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    col_idx : IN STD_LOGIC_VECTOR (63 downto 0);
    a_val : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read : IN STD_LOGIC_VECTOR (95 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (95 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (95 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (95 downto 0);
    tile_ref_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    tile_ref_0_ap_vld : OUT STD_LOGIC;
    tile_ref_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    tile_ref_1_ap_vld : OUT STD_LOGIC;
    tile_ref_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
    tile_ref_2_ap_vld : OUT STD_LOGIC;
    tile_ref_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
    tile_ref_3_ap_vld : OUT STD_LOGIC;
    pointer : IN STD_LOGIC_VECTOR (31 downto 0);
    nnz : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (95 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (95 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (95 downto 0) );
end;


architecture behav of spmm_hls_set_tile is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln43_reg_924 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op74_readreq_state2 : BOOLEAN;
    signal ap_predicate_op75_readreq_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal icmp_ln43_reg_924_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op88_read_state9 : BOOLEAN;
    signal ap_predicate_op89_read_state9 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln43_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem1_blk_n_R : STD_LOGIC;
    signal gmem2_blk_n_AR : STD_LOGIC;
    signal gmem2_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln43_reg_924_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_924_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_924_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_924_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_924_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_924_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_924_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln45_fu_333_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_928_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln46_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_932_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_addr_reg_936 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_942 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem2_addr_read_reg_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_reg_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln48_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln49_fu_407_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_108 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln43_fu_327_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tile_3_0_fu_112 : STD_LOGIC_VECTOR (95 downto 0);
    signal or_ln_fu_606_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal tile_2_0_fu_116 : STD_LOGIC_VECTOR (95 downto 0);
    signal or_ln62_3_fu_528_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal tile_1_0_fu_120 : STD_LOGIC_VECTOR (95 downto 0);
    signal or_ln62_2_fu_554_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal tile_0_0_fu_124 : STD_LOGIC_VECTOR (95 downto 0);
    signal or_ln62_1_fu_580_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal used_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal used_3_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln67_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_y_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_y_9_fu_657_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_y_1_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_y_10_fu_670_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_y_2_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_y_11_fu_683_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_y_3_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_y_12_fu_702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal seen_v_fu_148 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_v_12_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_v_1_fu_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_v_13_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_v_2_fu_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_v_14_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_v_3_fu_160 : STD_LOGIC_VECTOR (0 downto 0);
    signal seen_v_15_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal dup_1_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln45_fu_337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_fu_341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_353_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln48_fu_361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln48_fu_365_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_371_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln49_fu_391_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_fu_397_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln57_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_1_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_2_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_3_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_1_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dup_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_2_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln57_1_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln57_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_518_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_544_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_570_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_596_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_625_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln67_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln67_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln68_fu_647_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln68_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_1_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_2_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln68_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln68_1_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln68_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_928 : BOOLEAN;
    signal ap_condition_932 : BOOLEAN;
    signal ap_condition_936 : BOOLEAN;
    signal ap_condition_940 : BOOLEAN;
    signal ap_condition_944 : BOOLEAN;
    signal ap_condition_949 : BOOLEAN;
    signal ap_condition_953 : BOOLEAN;
    signal ap_condition_957 : BOOLEAN;
    signal ap_condition_961 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component spmm_hls_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component spmm_hls_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    i_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_108 <= add_ln43_fu_327_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_108 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    seen_v_1_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    seen_v_1_fu_152 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_928)) then 
                    seen_v_1_fu_152 <= seen_v_13_fu_727_p2;
                end if;
            end if; 
        end if;
    end process;

    seen_v_2_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    seen_v_2_fu_156 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_928)) then 
                    seen_v_2_fu_156 <= seen_v_14_fu_721_p2;
                end if;
            end if; 
        end if;
    end process;

    seen_v_3_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    seen_v_3_fu_160 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_928)) then 
                    seen_v_3_fu_160 <= seen_v_15_fu_715_p2;
                end if;
            end if; 
        end if;
    end process;

    seen_v_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    seen_v_fu_148 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_928)) then 
                    seen_v_fu_148 <= seen_v_12_fu_733_p2;
                end if;
            end if; 
        end if;
    end process;

    tile_0_0_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    tile_0_0_fu_124 <= p_read;
                elsif ((ap_const_boolean_1 = ap_condition_932)) then 
                    tile_0_0_fu_124 <= or_ln62_1_fu_580_p4;
                end if;
            end if; 
        end if;
    end process;

    tile_1_0_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    tile_1_0_fu_120 <= p_read1;
                elsif ((ap_const_boolean_1 = ap_condition_936)) then 
                    tile_1_0_fu_120 <= or_ln62_2_fu_554_p4;
                end if;
            end if; 
        end if;
    end process;

    tile_2_0_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    tile_2_0_fu_116 <= p_read2;
                elsif ((ap_const_boolean_1 = ap_condition_940)) then 
                    tile_2_0_fu_116 <= or_ln62_3_fu_528_p4;
                end if;
            end if; 
        end if;
    end process;

    tile_3_0_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    tile_3_0_fu_112 <= p_read3;
                elsif ((ap_const_boolean_1 = ap_condition_944)) then 
                    tile_3_0_fu_112 <= or_ln_fu_606_p4;
                end if;
            end if; 
        end if;
    end process;

    used_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    used_fu_128 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_928)) then 
                    used_fu_128 <= used_3_fu_739_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln43_reg_924 <= icmp_ln43_fu_321_p2;
                icmp_ln43_reg_924_pp0_iter1_reg <= icmp_ln43_reg_924;
                icmp_ln46_reg_932_pp0_iter1_reg <= icmp_ln46_reg_932;
                trunc_ln45_reg_928_pp0_iter1_reg <= trunc_ln45_reg_928;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                icmp_ln43_reg_924_pp0_iter2_reg <= icmp_ln43_reg_924_pp0_iter1_reg;
                icmp_ln43_reg_924_pp0_iter3_reg <= icmp_ln43_reg_924_pp0_iter2_reg;
                icmp_ln43_reg_924_pp0_iter4_reg <= icmp_ln43_reg_924_pp0_iter3_reg;
                icmp_ln43_reg_924_pp0_iter5_reg <= icmp_ln43_reg_924_pp0_iter4_reg;
                icmp_ln43_reg_924_pp0_iter6_reg <= icmp_ln43_reg_924_pp0_iter5_reg;
                icmp_ln43_reg_924_pp0_iter7_reg <= icmp_ln43_reg_924_pp0_iter6_reg;
                icmp_ln43_reg_924_pp0_iter8_reg <= icmp_ln43_reg_924_pp0_iter7_reg;
                icmp_ln46_reg_932_pp0_iter2_reg <= icmp_ln46_reg_932_pp0_iter1_reg;
                icmp_ln46_reg_932_pp0_iter3_reg <= icmp_ln46_reg_932_pp0_iter2_reg;
                icmp_ln46_reg_932_pp0_iter4_reg <= icmp_ln46_reg_932_pp0_iter3_reg;
                icmp_ln46_reg_932_pp0_iter5_reg <= icmp_ln46_reg_932_pp0_iter4_reg;
                icmp_ln46_reg_932_pp0_iter6_reg <= icmp_ln46_reg_932_pp0_iter5_reg;
                icmp_ln46_reg_932_pp0_iter7_reg <= icmp_ln46_reg_932_pp0_iter6_reg;
                icmp_ln46_reg_932_pp0_iter8_reg <= icmp_ln46_reg_932_pp0_iter7_reg;
                trunc_ln45_reg_928_pp0_iter2_reg <= trunc_ln45_reg_928_pp0_iter1_reg;
                trunc_ln45_reg_928_pp0_iter3_reg <= trunc_ln45_reg_928_pp0_iter2_reg;
                trunc_ln45_reg_928_pp0_iter4_reg <= trunc_ln45_reg_928_pp0_iter3_reg;
                trunc_ln45_reg_928_pp0_iter5_reg <= trunc_ln45_reg_928_pp0_iter4_reg;
                trunc_ln45_reg_928_pp0_iter6_reg <= trunc_ln45_reg_928_pp0_iter5_reg;
                trunc_ln45_reg_928_pp0_iter7_reg <= trunc_ln45_reg_928_pp0_iter6_reg;
                trunc_ln45_reg_928_pp0_iter8_reg <= trunc_ln45_reg_928_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_347_p2 = ap_const_lv1_1) and (icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                gmem1_addr_reg_942 <= sext_ln49_fu_407_p1;
                gmem2_addr_reg_936 <= sext_ln48_fu_381_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op88_read_state9 = ap_const_boolean_1))) then
                gmem2_addr_read_reg_948 <= m_axi_gmem2_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln46_reg_932 <= icmp_ln46_fu_347_p2;
                trunc_ln45_reg_928 <= trunc_ln45_fu_333_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln67_fu_641_p2))) then
                seen_y_1_fu_136 <= seen_y_10_fu_670_p3;
                seen_y_2_fu_140 <= seen_y_11_fu_683_p3;
                seen_y_3_fu_144 <= seen_y_12_fu_702_p3;
                seen_y_fu_132 <= seen_y_9_fu_657_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op89_read_state9 = ap_const_boolean_1))) then
                y_reg_956 <= m_axi_gmem1_RDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln43_fu_327_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_4) + unsigned(ap_const_lv3_1));
    add_ln48_fu_365_p2 <= std_logic_vector(unsigned(zext_ln48_fu_361_p1) + unsigned(a_val));
    add_ln49_fu_391_p2 <= std_logic_vector(unsigned(zext_ln48_fu_361_p1) + unsigned(col_idx));
    and_ln57_1_fu_476_p2 <= (seen_v_2_fu_156 and icmp_ln57_2_fu_471_p2);
    and_ln57_2_fu_487_p2 <= (seen_v_3_fu_160 and icmp_ln57_3_fu_482_p2);
    and_ln57_fu_465_p2 <= (seen_v_1_fu_152 and icmp_ln57_1_fu_460_p2);
    and_ln67_fu_641_p2 <= (xor_ln67_fu_619_p2 and icmp_ln67_fu_635_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter8, m_axi_gmem2_RVALID, m_axi_gmem1_RVALID, ap_predicate_op88_read_state9, ap_predicate_op89_read_state9)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (((ap_predicate_op89_read_state9 = ap_const_boolean_1) and (m_axi_gmem1_RVALID = ap_const_logic_0)) or ((m_axi_gmem2_RVALID = ap_const_logic_0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, m_axi_gmem2_RVALID, m_axi_gmem1_RVALID, ap_block_state2_io, ap_predicate_op88_read_state9, ap_predicate_op89_read_state9)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (((ap_predicate_op89_read_state9 = ap_const_boolean_1) and (m_axi_gmem1_RVALID = ap_const_logic_0)) or ((m_axi_gmem2_RVALID = ap_const_logic_0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, m_axi_gmem2_RVALID, m_axi_gmem1_RVALID, ap_block_state2_io, ap_predicate_op88_read_state9, ap_predicate_op89_read_state9)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (((ap_predicate_op89_read_state9 = ap_const_boolean_1) and (m_axi_gmem1_RVALID = ap_const_logic_0)) or ((m_axi_gmem2_RVALID = ap_const_logic_0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(m_axi_gmem2_ARREADY, m_axi_gmem1_ARREADY, ap_predicate_op74_readreq_state2, ap_predicate_op75_readreq_state2)
    begin
                ap_block_state2_io <= (((ap_predicate_op75_readreq_state2 = ap_const_boolean_1) and (m_axi_gmem1_ARREADY = ap_const_logic_0)) or ((m_axi_gmem2_ARREADY = ap_const_logic_0) and (ap_predicate_op74_readreq_state2 = ap_const_boolean_1)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter8_assign_proc : process(m_axi_gmem2_RVALID, m_axi_gmem1_RVALID, ap_predicate_op88_read_state9, ap_predicate_op89_read_state9)
    begin
                ap_block_state9_pp0_stage0_iter8 <= (((ap_predicate_op89_read_state9 = ap_const_boolean_1) and (m_axi_gmem1_RVALID = ap_const_logic_0)) or ((m_axi_gmem2_RVALID = ap_const_logic_0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1)));
    end process;


    ap_condition_928_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg, and_ln67_fu_641_p2)
    begin
                ap_condition_928 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln67_fu_641_p2));
    end process;


    ap_condition_932_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
                ap_condition_932 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_0) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_condition_936_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
                ap_condition_936 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_1) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_condition_940_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
                ap_condition_940 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_2) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_condition_944_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
                ap_condition_944 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_3) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_condition_949_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, ap_block_pp0_stage0_01001)
    begin
                ap_condition_949 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_0) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_953_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, ap_block_pp0_stage0_01001)
    begin
                ap_condition_953 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_1) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_957_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, ap_block_pp0_stage0_01001)
    begin
                ap_condition_957 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_2) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_961_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, ap_block_pp0_stage0_01001)
    begin
                ap_condition_961 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_3) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln43_fu_321_p2)
    begin
        if (((icmp_ln43_fu_321_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op74_readreq_state2_assign_proc : process(icmp_ln43_reg_924, icmp_ln46_reg_932)
    begin
                ap_predicate_op74_readreq_state2 <= ((icmp_ln46_reg_932 = ap_const_lv1_1) and (icmp_ln43_reg_924 = ap_const_lv1_0));
    end process;


    ap_predicate_op75_readreq_state2_assign_proc : process(icmp_ln43_reg_924, icmp_ln46_reg_932)
    begin
                ap_predicate_op75_readreq_state2 <= ((icmp_ln46_reg_932 = ap_const_lv1_1) and (icmp_ln43_reg_924 = ap_const_lv1_0));
    end process;


    ap_predicate_op88_read_state9_assign_proc : process(icmp_ln43_reg_924_pp0_iter7_reg, icmp_ln46_reg_932_pp0_iter7_reg)
    begin
                ap_predicate_op88_read_state9 <= ((icmp_ln46_reg_932_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln43_reg_924_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op89_read_state9_assign_proc : process(icmp_ln43_reg_924_pp0_iter7_reg, icmp_ln46_reg_932_pp0_iter7_reg)
    begin
                ap_predicate_op89_read_state9 <= ((icmp_ln46_reg_932_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln43_reg_924_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= tile_0_0_fu_124;
    ap_return_1 <= tile_1_0_fu_120;
    ap_return_2 <= tile_2_0_fu_116;
    ap_return_3 <= tile_3_0_fu_112;

    ap_sig_allocacmp_i_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_108, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_4 <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_4 <= i_fu_108;
        end if; 
    end process;

    dup_1_fu_505_p2 <= (or_ln57_fu_493_p2 or or_ln57_1_fu_499_p2);
    dup_fu_454_p2 <= (seen_v_fu_148 and icmp_ln57_fu_449_p2);

    gmem1_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem1_ARREADY, ap_predicate_op75_readreq_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op75_readreq_state2 = ap_const_boolean_1))) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter8, m_axi_gmem1_RVALID, ap_predicate_op89_read_state9, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op89_read_state9 = ap_const_boolean_1))) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem2_ARREADY, ap_predicate_op74_readreq_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op74_readreq_state2 = ap_const_boolean_1))) then 
            gmem2_blk_n_AR <= m_axi_gmem2_ARREADY;
        else 
            gmem2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter8, m_axi_gmem2_RVALID, ap_predicate_op88_read_state9, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1))) then 
            gmem2_blk_n_R <= m_axi_gmem2_RVALID;
        else 
            gmem2_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln43_fu_321_p2 <= "1" when (ap_sig_allocacmp_i_4 = ap_const_lv3_4) else "0";
    icmp_ln46_fu_347_p2 <= "1" when (unsigned(idx_fu_341_p2) < unsigned(nnz)) else "0";
    icmp_ln57_1_fu_460_p2 <= "1" when (seen_y_1_fu_136 = y_reg_956) else "0";
    icmp_ln57_2_fu_471_p2 <= "1" when (seen_y_2_fu_140 = y_reg_956) else "0";
    icmp_ln57_3_fu_482_p2 <= "1" when (seen_y_3_fu_144 = y_reg_956) else "0";
    icmp_ln57_fu_449_p2 <= "1" when (seen_y_fu_132 = y_reg_956) else "0";
    icmp_ln67_fu_635_p2 <= "1" when (signed(tmp_4_fu_625_p4) < signed(ap_const_lv30_1)) else "0";
    icmp_ln68_1_fu_664_p2 <= "1" when (trunc_ln68_fu_647_p1 = ap_const_lv2_1) else "0";
    icmp_ln68_2_fu_677_p2 <= "1" when (trunc_ln68_fu_647_p1 = ap_const_lv2_2) else "0";
    icmp_ln68_fu_651_p2 <= "1" when (trunc_ln68_fu_647_p1 = ap_const_lv2_0) else "0";
    idx_fu_341_p2 <= std_logic_vector(unsigned(zext_ln45_fu_337_p1) + unsigned(pointer));
    m_axi_gmem1_ARADDR <= gmem1_addr_reg_942;
    m_axi_gmem1_ARBURST <= ap_const_lv2_0;
    m_axi_gmem1_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem1_ARID <= ap_const_lv1_0;
    m_axi_gmem1_ARLEN <= ap_const_lv32_1;
    m_axi_gmem1_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem1_ARPROT <= ap_const_lv3_0;
    m_axi_gmem1_ARQOS <= ap_const_lv4_0;
    m_axi_gmem1_ARREGION <= ap_const_lv4_0;
    m_axi_gmem1_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem1_ARUSER <= ap_const_lv1_0;

    m_axi_gmem1_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op75_readreq_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op75_readreq_state2 = ap_const_boolean_1))) then 
            m_axi_gmem1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;

    m_axi_gmem1_RREADY_assign_proc : process(ap_enable_reg_pp0_iter8, ap_predicate_op89_read_state9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op89_read_state9 = ap_const_boolean_1))) then 
            m_axi_gmem1_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_WDATA <= ap_const_lv32_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    m_axi_gmem2_ARADDR <= gmem2_addr_reg_936;
    m_axi_gmem2_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_ARID <= ap_const_lv1_0;
    m_axi_gmem2_ARLEN <= ap_const_lv32_1;
    m_axi_gmem2_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_ARUSER <= ap_const_lv1_0;

    m_axi_gmem2_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op74_readreq_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op74_readreq_state2 = ap_const_boolean_1))) then 
            m_axi_gmem2_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_AWADDR <= ap_const_lv64_0;
    m_axi_gmem2_AWBURST <= ap_const_lv2_0;
    m_axi_gmem2_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem2_AWID <= ap_const_lv1_0;
    m_axi_gmem2_AWLEN <= ap_const_lv32_0;
    m_axi_gmem2_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem2_AWPROT <= ap_const_lv3_0;
    m_axi_gmem2_AWQOS <= ap_const_lv4_0;
    m_axi_gmem2_AWREGION <= ap_const_lv4_0;
    m_axi_gmem2_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem2_AWUSER <= ap_const_lv1_0;
    m_axi_gmem2_AWVALID <= ap_const_logic_0;
    m_axi_gmem2_BREADY <= ap_const_logic_0;

    m_axi_gmem2_RREADY_assign_proc : process(ap_enable_reg_pp0_iter8, ap_predicate_op88_read_state9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op88_read_state9 = ap_const_boolean_1))) then 
            m_axi_gmem2_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_WDATA <= ap_const_lv32_0;
    m_axi_gmem2_WID <= ap_const_lv1_0;
    m_axi_gmem2_WLAST <= ap_const_logic_0;
    m_axi_gmem2_WSTRB <= ap_const_lv4_0;
    m_axi_gmem2_WUSER <= ap_const_lv1_0;
    m_axi_gmem2_WVALID <= ap_const_logic_0;
    or_ln57_1_fu_499_p2 <= (dup_fu_454_p2 or and_ln57_2_fu_487_p2);
    or_ln57_fu_493_p2 <= (and_ln57_fu_465_p2 or and_ln57_1_fu_476_p2);
    or_ln62_1_fu_580_p4 <= ((y_reg_956 & tmp_1_fu_570_p4) & gmem2_addr_read_reg_948);
    or_ln62_2_fu_554_p4 <= ((y_reg_956 & tmp_2_fu_544_p4) & gmem2_addr_read_reg_948);
    or_ln62_3_fu_528_p4 <= ((y_reg_956 & tmp_3_fu_518_p4) & gmem2_addr_read_reg_948);
    or_ln68_1_fu_696_p2 <= (or_ln68_fu_690_p2 or icmp_ln68_fu_651_p2);
    or_ln68_fu_690_p2 <= (icmp_ln68_2_fu_677_p2 or icmp_ln68_1_fu_664_p2);
    or_ln_fu_606_p4 <= ((y_reg_956 & tmp_fu_596_p4) & gmem2_addr_read_reg_948);
    seen_v_12_fu_733_p2 <= (seen_v_fu_148 or icmp_ln68_fu_651_p2);
    seen_v_13_fu_727_p2 <= (seen_v_1_fu_152 or icmp_ln68_1_fu_664_p2);
    seen_v_14_fu_721_p2 <= (seen_v_2_fu_156 or icmp_ln68_2_fu_677_p2);
    seen_v_15_fu_715_p2 <= (xor_ln68_fu_709_p2 or seen_v_3_fu_160);
    seen_y_10_fu_670_p3 <= 
        y_reg_956 when (icmp_ln68_1_fu_664_p2(0) = '1') else 
        seen_y_1_fu_136;
    seen_y_11_fu_683_p3 <= 
        y_reg_956 when (icmp_ln68_2_fu_677_p2(0) = '1') else 
        seen_y_2_fu_140;
    seen_y_12_fu_702_p3 <= 
        seen_y_3_fu_144 when (or_ln68_1_fu_696_p2(0) = '1') else 
        y_reg_956;
    seen_y_9_fu_657_p3 <= 
        y_reg_956 when (icmp_ln68_fu_651_p2(0) = '1') else 
        seen_y_fu_132;
        sext_ln48_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_371_p4),64));

        sext_ln49_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_397_p4),64));

    shl_ln_fu_353_p3 <= (idx_fu_341_p2 & ap_const_lv2_0);

    tile_ref_0_assign_proc : process(icmp_ln46_reg_932_pp0_iter8_reg, dup_1_fu_505_p2, ap_condition_949)
    begin
        if ((ap_const_boolean_1 = ap_condition_949)) then
            if ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1)) then 
                tile_ref_0 <= dup_1_fu_505_p2;
            elsif ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0)) then 
                tile_ref_0 <= ap_const_lv1_1;
            else 
                tile_ref_0 <= "X";
            end if;
        else 
            tile_ref_0 <= "X";
        end if; 
    end process;


    tile_ref_0_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_0) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_0) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tile_ref_0_ap_vld <= ap_const_logic_1;
        else 
            tile_ref_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    tile_ref_1_assign_proc : process(icmp_ln46_reg_932_pp0_iter8_reg, dup_1_fu_505_p2, ap_condition_953)
    begin
        if ((ap_const_boolean_1 = ap_condition_953)) then
            if ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1)) then 
                tile_ref_1 <= dup_1_fu_505_p2;
            elsif ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0)) then 
                tile_ref_1 <= ap_const_lv1_1;
            else 
                tile_ref_1 <= "X";
            end if;
        else 
            tile_ref_1 <= "X";
        end if; 
    end process;


    tile_ref_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_1) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_1) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tile_ref_1_ap_vld <= ap_const_logic_1;
        else 
            tile_ref_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    tile_ref_2_assign_proc : process(icmp_ln46_reg_932_pp0_iter8_reg, dup_1_fu_505_p2, ap_condition_957)
    begin
        if ((ap_const_boolean_1 = ap_condition_957)) then
            if ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1)) then 
                tile_ref_2 <= dup_1_fu_505_p2;
            elsif ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0)) then 
                tile_ref_2 <= ap_const_lv1_1;
            else 
                tile_ref_2 <= "X";
            end if;
        else 
            tile_ref_2 <= "X";
        end if; 
    end process;


    tile_ref_2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_2) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_2) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tile_ref_2_ap_vld <= ap_const_logic_1;
        else 
            tile_ref_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    tile_ref_3_assign_proc : process(icmp_ln46_reg_932_pp0_iter8_reg, dup_1_fu_505_p2, ap_condition_961)
    begin
        if ((ap_const_boolean_1 = ap_condition_961)) then
            if ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1)) then 
                tile_ref_3 <= dup_1_fu_505_p2;
            elsif ((icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0)) then 
                tile_ref_3 <= ap_const_lv1_1;
            else 
                tile_ref_3 <= "X";
            end if;
        else 
            tile_ref_3 <= "X";
        end if; 
    end process;


    tile_ref_3_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, icmp_ln43_reg_924_pp0_iter8_reg, trunc_ln45_reg_928_pp0_iter8_reg, icmp_ln46_reg_932_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_3) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln46_reg_932_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln45_reg_928_pp0_iter8_reg = ap_const_lv2_3) and (icmp_ln43_reg_924_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tile_ref_3_ap_vld <= ap_const_logic_1;
        else 
            tile_ref_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_570_p4 <= tile_0_0_fu_124(63 downto 32);
    tmp_2_fu_544_p4 <= tile_1_0_fu_120(63 downto 32);
    tmp_3_fu_518_p4 <= tile_2_0_fu_116(63 downto 32);
    tmp_4_fu_625_p4 <= used_fu_128(31 downto 2);
    tmp_fu_596_p4 <= tile_3_0_fu_112(63 downto 32);
    trunc_ln1_fu_371_p4 <= add_ln48_fu_365_p2(63 downto 2);
    trunc_ln2_fu_397_p4 <= add_ln49_fu_391_p2(63 downto 2);
    trunc_ln45_fu_333_p1 <= ap_sig_allocacmp_i_4(2 - 1 downto 0);
    trunc_ln68_fu_647_p1 <= used_fu_128(2 - 1 downto 0);
    used_3_fu_739_p2 <= std_logic_vector(unsigned(used_fu_128) + unsigned(ap_const_lv32_1));
    xor_ln67_fu_619_p2 <= (dup_1_fu_505_p2 xor ap_const_lv1_1);
    xor_ln68_fu_709_p2 <= (or_ln68_1_fu_696_p2 xor ap_const_lv1_1);
    zext_ln45_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln45_fu_333_p1),32));
    zext_ln48_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_353_p3),64));
end behav;
