-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spmm_hls_dataflow_parent_loop_proc is
port (
    total_batches : IN STD_LOGIC_VECTOR (28 downto 0);
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    A : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    B : IN STD_LOGIC_VECTOR (63 downto 0);
    K : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    A_ap_vld : IN STD_LOGIC;
    B_ap_vld : IN STD_LOGIC;
    K_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of spmm_hls_dataflow_parent_loop_proc is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WLAST : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_RREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_BREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_batch : STD_LOGIC_VECTOR (27 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WLAST : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_RREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_BREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_continue : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        batch : IN STD_LOGIC_VECTOR (27 downto 0);
        A : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        B : IN STD_LOGIC_VECTOR (63 downto 0);
        K : IN STD_LOGIC_VECTOR (31 downto 0);
        K_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        batch_ap_vld : IN STD_LOGIC;
        A_ap_vld : IN STD_LOGIC;
        B_ap_vld : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_VITIS_LOOP_144_1_U0 : component spmm_hls_dataflow_in_loop_VITIS_LOOP_144_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        m_axi_gmem0_AWVALID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST => m_axi_gmem0_RLAST,
        m_axi_gmem0_RID => m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM => m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP => m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        batch => dataflow_in_loop_VITIS_LOOP_144_1_U0_batch,
        A => A,
        m_axi_gmem1_AWVALID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM => m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        B => B,
        K => K,
        K_ap_vld => K_ap_vld,
        ap_start => dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_start,
        batch_ap_vld => ap_const_logic_0,
        A_ap_vld => A_ap_vld,
        B_ap_vld => B_ap_vld,
        ap_done => dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_done,
        ap_ready => dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_ready,
        ap_idle => dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_idle,
        ap_continue => dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv29_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv29_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv29_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv29_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv29_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv29_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((loop_dataflow_output_count = ap_const_lv29_0) and (ap_start = ap_const_logic_0) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_minus_1 <= std_logic_vector(unsigned(total_batches) - unsigned(ap_const_lv29_1));

    dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_in_loop_VITIS_LOOP_144_1_U0_ap_start <= ap_start;
    dataflow_in_loop_VITIS_LOOP_144_1_U0_batch <= loop_dataflow_input_count(28 - 1 downto 0);
    m_axi_gmem0_ARADDR <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARADDR;
    m_axi_gmem0_ARBURST <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARBURST;
    m_axi_gmem0_ARCACHE <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARCACHE;
    m_axi_gmem0_ARID <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARID;
    m_axi_gmem0_ARLEN <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARLEN;
    m_axi_gmem0_ARLOCK <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARLOCK;
    m_axi_gmem0_ARPROT <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARPROT;
    m_axi_gmem0_ARQOS <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARQOS;
    m_axi_gmem0_ARREGION <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARREGION;
    m_axi_gmem0_ARSIZE <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARSIZE;
    m_axi_gmem0_ARUSER <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARUSER;
    m_axi_gmem0_ARVALID <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_ARVALID;
    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;
    m_axi_gmem0_RREADY <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem0_RREADY;
    m_axi_gmem0_WDATA <= ap_const_lv64_0;
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv8_0;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_WVALID <= ap_const_logic_0;
    m_axi_gmem1_ARADDR <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARADDR;
    m_axi_gmem1_ARBURST <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARBURST;
    m_axi_gmem1_ARCACHE <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARCACHE;
    m_axi_gmem1_ARID <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARID;
    m_axi_gmem1_ARLEN <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARLEN;
    m_axi_gmem1_ARLOCK <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARLOCK;
    m_axi_gmem1_ARPROT <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARPROT;
    m_axi_gmem1_ARQOS <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARQOS;
    m_axi_gmem1_ARREGION <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARREGION;
    m_axi_gmem1_ARSIZE <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARSIZE;
    m_axi_gmem1_ARUSER <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARUSER;
    m_axi_gmem1_ARVALID <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_ARVALID;
    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;
    m_axi_gmem1_RREADY <= dataflow_in_loop_VITIS_LOOP_144_1_U0_m_axi_gmem1_RREADY;
    m_axi_gmem1_WDATA <= ap_const_lv32_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
end behav;
