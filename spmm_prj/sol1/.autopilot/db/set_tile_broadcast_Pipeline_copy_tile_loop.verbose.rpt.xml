<profile>

<section name = "Vitis HLS Report for 'set_tile_broadcast_Pipeline_copy_tile_loop'" level="0">
<item name = "Date">Mon Sep  1 19:26:56 2025
</item>
<item name = "Version">2022.2 (Build 3670227 on Oct 13 2022)</item>
<item name = "Project">spmm_prj</item>
<item name = "Solution">sol1 (Vivado IP Flow Target)</item>
<item name = "Product family">virtexuplus</item>
<item name = "Target device">xcu280-fsvh2892-2L-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">4.00 ns, 2.920 ns, 1.08 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">15, 15, 60.000 ns, 60.000 ns, 15, 15, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- copy_tile_loop">13, 13, 10, 1, 1, 4, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 558, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, -, -, -, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 135, -</column>
<column name="Register">-, -, 617, 96, -</column>
<specialColumn name="Available SLR">1344, 3008, 869120, 434560, 320</specialColumn>
<specialColumn name="Utilization SLR (%)">0, 0, ~0, ~0, 0</specialColumn>
<specialColumn name="Available">4032, 9024, 2607360, 1303680, 960</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln57_fu_308_p2">+, 0, 0, 10, 3, 1</column>
<column name="add_ln62_fu_346_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln63_fu_372_p2">+, 0, 0, 71, 64, 64</column>
<column name="idx_fu_322_p2">+, 0, 0, 39, 32, 32</column>
<column name="used_3_fu_634_p2">+, 0, 0, 39, 32, 1</column>
<column name="and_ln71_1_fu_477_p2">and, 0, 0, 2, 1, 1</column>
<column name="and_ln71_2_fu_488_p2">and, 0, 0, 2, 1, 1</column>
<column name="and_ln71_fu_466_p2">and, 0, 0, 2, 1, 1</column>
<column name="and_ln81_fu_536_p2">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_454">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_805">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op62_readreq_state2">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op76_read_state9">and, 0, 0, 2, 1, 1</column>
<column name="dup_fu_455_p2">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln57_fu_302_p2">icmp, 0, 0, 9, 3, 4</column>
<column name="icmp_ln60_fu_328_p2">icmp, 0, 0, 20, 32, 32</column>
<column name="icmp_ln71_1_fu_461_p2">icmp, 0, 0, 20, 32, 32</column>
<column name="icmp_ln71_2_fu_472_p2">icmp, 0, 0, 20, 32, 32</column>
<column name="icmp_ln71_3_fu_483_p2">icmp, 0, 0, 20, 32, 32</column>
<column name="icmp_ln71_fu_450_p2">icmp, 0, 0, 20, 32, 32</column>
<column name="icmp_ln81_fu_530_p2">icmp, 0, 0, 19, 30, 1</column>
<column name="icmp_ln82_1_fu_559_p2">icmp, 0, 0, 8, 2, 1</column>
<column name="icmp_ln82_2_fu_572_p2">icmp, 0, 0, 8, 2, 3</column>
<column name="icmp_ln82_fu_546_p2">icmp, 0, 0, 8, 2, 1</column>
<column name="ap_block_pp0_stage0_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state2_io">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state9_pp0_stage0_iter8">or, 0, 0, 2, 1, 1</column>
<column name="dup_1_fu_506_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln71_1_fu_500_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln71_fu_494_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln82_1_fu_591_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln82_fu_585_p2">or, 0, 0, 2, 1, 1</column>
<column name="seen_v_11_fu_628_p2">or, 0, 0, 2, 1, 1</column>
<column name="seen_v_12_fu_622_p2">or, 0, 0, 2, 1, 1</column>
<column name="seen_v_13_fu_616_p2">or, 0, 0, 2, 1, 1</column>
<column name="seen_v_14_fu_610_p2">or, 0, 0, 2, 1, 1</column>
<column name="seen_y_10_fu_565_p3">select, 0, 0, 32, 1, 32</column>
<column name="seen_y_11_fu_578_p3">select, 0, 0, 32, 1, 32</column>
<column name="seen_y_12_fu_597_p3">select, 0, 0, 32, 1, 32</column>
<column name="seen_y_9_fu_552_p3">select, 0, 0, 32, 1, 32</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="xor_ln81_fu_514_p2">xor, 0, 0, 2, 1, 2</column>
<column name="xor_ln82_fu_604_p2">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_done_int">9, 2, 1, 2</column>
<column name="ap_loop_exit_ready_pp0_iter9_reg">9, 2, 1, 2</column>
<column name="ap_phi_mux_tile_ref_phi_fu_259_p6">9, 2, 1, 2</column>
<column name="ap_phi_reg_pp0_iter1_tile_ref_reg_255">9, 2, 1, 2</column>
<column name="ap_sig_allocacmp_i_4">9, 2, 3, 6</column>
<column name="gmem1_blk_n_AR">9, 2, 1, 2</column>
<column name="gmem1_blk_n_R">9, 2, 1, 2</column>
<column name="gmem2_blk_n_AR">9, 2, 1, 2</column>
<column name="gmem2_blk_n_R">9, 2, 1, 2</column>
<column name="i_fu_96">9, 2, 3, 6</column>
<column name="seen_v_4_fu_124">9, 2, 1, 2</column>
<column name="seen_v_5_fu_128">9, 2, 1, 2</column>
<column name="seen_v_6_fu_132">9, 2, 1, 2</column>
<column name="seen_v_fu_120">9, 2, 1, 2</column>
<column name="used_fu_100">9, 2, 32, 64</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">1, 0, 1, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter3">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter4">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter5">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter6">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter7">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter8">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter9">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter1_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter2_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter3_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter4_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter5_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter6_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter7_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter8_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter9_reg">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter1_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter2_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter3_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter4_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter5_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter6_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter7_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter8_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="ap_phi_reg_pp0_iter9_tile_ref_reg_255">1, 0, 1, 0</column>
<column name="gmem1_addr_reg_790">64, 0, 64, 0</column>
<column name="gmem2_addr_reg_784">64, 0, 64, 0</column>
<column name="i_4_reg_771">3, 0, 3, 0</column>
<column name="i_fu_96">3, 0, 3, 0</column>
<column name="icmp_ln57_reg_776">1, 0, 1, 0</column>
<column name="icmp_ln60_reg_780">1, 0, 1, 0</column>
<column name="seen_v_4_fu_124">1, 0, 1, 0</column>
<column name="seen_v_5_fu_128">1, 0, 1, 0</column>
<column name="seen_v_6_fu_132">1, 0, 1, 0</column>
<column name="seen_v_fu_120">1, 0, 1, 0</column>
<column name="seen_y_1_fu_108">32, 0, 32, 0</column>
<column name="seen_y_2_fu_112">32, 0, 32, 0</column>
<column name="seen_y_3_fu_116">32, 0, 32, 0</column>
<column name="seen_y_fu_104">32, 0, 32, 0</column>
<column name="tile_value_fu_140">32, 0, 32, 0</column>
<column name="tile_y_fu_136">32, 0, 32, 0</column>
<column name="used_fu_100">32, 0, 32, 0</column>
<column name="y_reg_796">32, 0, 32, 0</column>
<column name="i_4_reg_771">64, 32, 3, 0</column>
<column name="icmp_ln57_reg_776">64, 32, 1, 0</column>
<column name="icmp_ln60_reg_780">64, 32, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, set_tile_broadcast_Pipeline_copy_tile_loop, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, set_tile_broadcast_Pipeline_copy_tile_loop, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, set_tile_broadcast_Pipeline_copy_tile_loop, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, set_tile_broadcast_Pipeline_copy_tile_loop, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, set_tile_broadcast_Pipeline_copy_tile_loop, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, set_tile_broadcast_Pipeline_copy_tile_loop, return value</column>
<column name="m_axi_gmem2_AWVALID">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWREADY">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWADDR">out, 64, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWID">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWLEN">out, 32, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWSIZE">out, 3, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWBURST">out, 2, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWLOCK">out, 2, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWCACHE">out, 4, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWPROT">out, 3, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWQOS">out, 4, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWREGION">out, 4, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_AWUSER">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_WVALID">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_WREADY">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_WDATA">out, 32, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_WSTRB">out, 4, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_WLAST">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_WID">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_WUSER">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARVALID">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARREADY">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARADDR">out, 64, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARID">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARLEN">out, 32, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARSIZE">out, 3, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARBURST">out, 2, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARLOCK">out, 2, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARCACHE">out, 4, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARPROT">out, 3, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARQOS">out, 4, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARREGION">out, 4, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_ARUSER">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RVALID">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RREADY">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RDATA">in, 32, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RLAST">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RID">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RFIFONUM">in, 9, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RUSER">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_RRESP">in, 2, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_BVALID">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_BREADY">out, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_BRESP">in, 2, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_BID">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem2_BUSER">in, 1, m_axi, gmem2, pointer</column>
<column name="m_axi_gmem1_AWVALID">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWREADY">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWADDR">out, 64, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWID">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWLEN">out, 32, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWSIZE">out, 3, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWBURST">out, 2, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWLOCK">out, 2, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWCACHE">out, 4, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWPROT">out, 3, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWQOS">out, 4, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWREGION">out, 4, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_AWUSER">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_WVALID">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_WREADY">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_WDATA">out, 32, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_WSTRB">out, 4, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_WLAST">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_WID">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_WUSER">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARVALID">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARREADY">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARADDR">out, 64, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARID">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARLEN">out, 32, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARSIZE">out, 3, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARBURST">out, 2, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARLOCK">out, 2, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARCACHE">out, 4, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARPROT">out, 3, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARQOS">out, 4, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARREGION">out, 4, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_ARUSER">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RVALID">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RREADY">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RDATA">in, 32, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RLAST">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RID">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RFIFONUM">in, 9, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RUSER">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_RRESP">in, 2, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_BVALID">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_BREADY">out, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_BRESP">in, 2, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_BID">in, 1, m_axi, gmem1, pointer</column>
<column name="m_axi_gmem1_BUSER">in, 1, m_axi, gmem1, pointer</column>
<column name="seen_v_3_reload">in, 1, ap_none, seen_v_3_reload, scalar</column>
<column name="seen_v_2_reload">in, 1, ap_none, seen_v_2_reload, scalar</column>
<column name="seen_v_1_reload">in, 1, ap_none, seen_v_1_reload, scalar</column>
<column name="seen_v_reload">in, 1, ap_none, seen_v_reload, scalar</column>
<column name="pkt_v_value_address0">out, 2, ap_memory, pkt_v_value, array</column>
<column name="pkt_v_value_ce0">out, 1, ap_memory, pkt_v_value, array</column>
<column name="pkt_v_value_we0">out, 1, ap_memory, pkt_v_value, array</column>
<column name="pkt_v_value_d0">out, 32, ap_memory, pkt_v_value, array</column>
<column name="pkt_v_y_address0">out, 2, ap_memory, pkt_v_y, array</column>
<column name="pkt_v_y_ce0">out, 1, ap_memory, pkt_v_y, array</column>
<column name="pkt_v_y_we0">out, 1, ap_memory, pkt_v_y, array</column>
<column name="pkt_v_y_d0">out, 32, ap_memory, pkt_v_y, array</column>
<column name="pkt_ref_address0">out, 2, ap_memory, pkt_ref, array</column>
<column name="pkt_ref_ce0">out, 1, ap_memory, pkt_ref, array</column>
<column name="pkt_ref_we0">out, 1, ap_memory, pkt_ref, array</column>
<column name="pkt_ref_d0">out, 1, ap_memory, pkt_ref, array</column>
<column name="pointer">in, 32, ap_none, pointer, scalar</column>
<column name="nnz">in, 32, ap_none, nnz, scalar</column>
<column name="a_val">in, 64, ap_none, a_val, scalar</column>
<column name="col_idx">in, 64, ap_none, col_idx, scalar</column>
</table>
</item>
</section>
</profile>
