

================================================================
== Vitis HLS Report for 'set_tile_broadcast_Pipeline_init_seen'
================================================================
* Date:           Mon Sep  1 16:04:12 2025

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        spmm_prj
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  0.959 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  24.000 ns|  24.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- init_seen  |        4|        4|         1|          1|          1|     4|       yes|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.95>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 4 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%seen_v = alloca i32 1"   --->   Operation 5 'alloca' 'seen_v' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%seen_v_1 = alloca i32 1"   --->   Operation 6 'alloca' 'seen_v_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%seen_v_2 = alloca i32 1"   --->   Operation 7 'alloca' 'seen_v_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%seen_v_3 = alloca i32 1"   --->   Operation 8 'alloca' 'seen_v_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.38ns)   --->   "%store_ln0 = store i3 0, i3 %k"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 10 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%k_1 = load i3 %k" [src/spmm_device_fpga.cpp:51]   --->   Operation 11 'load' 'k_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.49ns)   --->   "%icmp_ln49 = icmp_eq  i3 %k_1, i3 4" [src/spmm_device_fpga.cpp:49]   --->   Operation 12 'icmp' 'icmp_ln49' <Predicate = true> <Delay = 0.49> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 13 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.57ns)   --->   "%add_ln49 = add i3 %k_1, i3 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 14 'add' 'add_ln49' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln49 = br i1 %icmp_ln49, void %for.inc.split, void %for.body4.preheader.exitStub" [src/spmm_device_fpga.cpp:49]   --->   Operation 15 'br' 'br_ln49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specpipeline_ln50 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_23" [src/spmm_device_fpga.cpp:50]   --->   Operation 16 'specpipeline' 'specpipeline_ln50' <Predicate = (!icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specloopname_ln39 = specloopname void @_ssdm_op_SpecLoopName, void @empty_27" [src/spmm_device_fpga.cpp:39]   --->   Operation 17 'specloopname' 'specloopname_ln39' <Predicate = (!icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln51 = trunc i3 %k_1" [src/spmm_device_fpga.cpp:51]   --->   Operation 18 'trunc' 'trunc_ln51' <Predicate = (!icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.34ns)   --->   "%switch_ln51 = switch i2 %trunc_ln51, void %arrayidx.case.3, i2 0, void %for.inc.split.arrayidx.exit_crit_edge1, i2 1, void %arrayidx.case.1, i2 2, void %for.inc.split.arrayidx.exit_crit_edge" [src/spmm_device_fpga.cpp:51]   --->   Operation 19 'switch' 'switch_ln51' <Predicate = (!icmp_ln49)> <Delay = 0.34>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%store_ln51 = store i1 0, i1 %seen_v_2" [src/spmm_device_fpga.cpp:51]   --->   Operation 20 'store' 'store_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 2)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln51 = br void %arrayidx.exit" [src/spmm_device_fpga.cpp:51]   --->   Operation 21 'br' 'br_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 2)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%store_ln51 = store i1 0, i1 %seen_v_1" [src/spmm_device_fpga.cpp:51]   --->   Operation 22 'store' 'store_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 1)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln51 = br void %arrayidx.exit" [src/spmm_device_fpga.cpp:51]   --->   Operation 23 'br' 'br_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 1)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%store_ln51 = store i1 0, i1 %seen_v" [src/spmm_device_fpga.cpp:51]   --->   Operation 24 'store' 'store_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 0)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln51 = br void %arrayidx.exit" [src/spmm_device_fpga.cpp:51]   --->   Operation 25 'br' 'br_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 0)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%store_ln51 = store i1 0, i1 %seen_v_3" [src/spmm_device_fpga.cpp:51]   --->   Operation 26 'store' 'store_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 3)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln51 = br void %arrayidx.exit" [src/spmm_device_fpga.cpp:51]   --->   Operation 27 'br' 'br_ln51' <Predicate = (!icmp_ln49 & trunc_ln51 == 3)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.38ns)   --->   "%store_ln49 = store i3 %add_ln49, i3 %k" [src/spmm_device_fpga.cpp:49]   --->   Operation 28 'store' 'store_ln49' <Predicate = (!icmp_ln49)> <Delay = 0.38>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln49 = br void %for.inc" [src/spmm_device_fpga.cpp:49]   --->   Operation 29 'br' 'br_ln49' <Predicate = (!icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%seen_v_load = load i1 %seen_v"   --->   Operation 30 'load' 'seen_v_load' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%seen_v_1_load = load i1 %seen_v_1"   --->   Operation 31 'load' 'seen_v_1_load' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%seen_v_2_load = load i1 %seen_v_2"   --->   Operation 32 'load' 'seen_v_2_load' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%seen_v_3_load = load i1 %seen_v_3"   --->   Operation 33 'load' 'seen_v_3_load' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %seen_v_3_out, i1 %seen_v_3_load"   --->   Operation 34 'write' 'write_ln0' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %seen_v_2_out, i1 %seen_v_2_load"   --->   Operation 35 'write' 'write_ln0' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %seen_v_1_out, i1 %seen_v_1_load"   --->   Operation 36 'write' 'write_ln0' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %seen_v_out, i1 %seen_v_load"   --->   Operation 37 'write' 'write_ln0' <Predicate = (icmp_ln49)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 38 'ret' 'ret_ln0' <Predicate = (icmp_ln49)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 0.959ns
The critical path consists of the following:
	'alloca' operation ('k') [5]  (0 ns)
	'load' operation ('k', src/spmm_device_fpga.cpp:51) on local variable 'k' [13]  (0 ns)
	'add' operation ('add_ln49', src/spmm_device_fpga.cpp:49) [16]  (0.572 ns)
	'store' operation ('store_ln49', src/spmm_device_fpga.cpp:49) of variable 'add_ln49', src/spmm_device_fpga.cpp:49 on local variable 'k' [36]  (0.387 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
