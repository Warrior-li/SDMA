--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 83, Column: 13 }
Function:        spmm_hls
Args:            
  - String:          'Inlining function '''
  - Callee:          'load_stream_to_buffer(hls::stream<ap_uint<64>, 0>&, PCOO*)'
    DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 27, Column: 0 }
  - String:          ''' into '''
  - Caller:          spmm_hls
    DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 44, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            AutoInline
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 44, Column: 0 }
Function:        spmm_hls
Args:            
  - String:          'Inlining function '''
  - Callee:          'unpack_pcoo(ap_uint<64>)'
    DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 4, Column: 0 }
  - String:          ''' into '''
  - Caller:          spmm_hls
    DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 44, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-array-partition
Name:            ArrayXform
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 57, Column: 7 }
Function:        spmm_hls
Args:            
  - String:          'Applying '
  - String:          array_partition
  - String:          ' to '''
  - UOName:          buf0
  - String:          ''':'
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '1'
  - String:          .
...
--- !Passed
Pass:            reflow-array-partition
Name:            ArrayXform
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 58, Column: 10 }
Function:        spmm_hls
Args:            
  - String:          'Applying '
  - String:          array_partition
  - String:          ' to '''
  - UOName:          buf1
  - String:          ''':'
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '1'
  - String:          .
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 18, Column: 19 }
Function:        _Z6load_APK7ap_uintILi64EEiRN3hls6streamIS0_Li0EEE
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ OldID='
  - String:          for.inc.load.6
  - String:          ', '
  - String:          ' _XLX_SEP_ '
  - AccessID:        Aseq
  - String:          ' '
  - ArrayName:       A
  - String:          ' '
  - BundleName:      gmem0
  - String:          ' '
  - LoopName:        VITIS_LOOP_18_1
  - String:          ' '
  - LoopLoc:         'src/spmm_device_fpga.cpp:18:19'
  - String:          ' '
  - Function:        'load_A(ap_uint<64> const*, int, hls::stream<ap_uint<64>, 0>&)'
    DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 16, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 18, Column: 19 }
Function:        _Z6load_APK7ap_uintILi64EEiRN3hls6streamIS0_Li0EEE
Args:            
  - String:          'Could not widen since type '
  - Type:            i64
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - AccessID:        Aseq
  - String:          ' '
  - ArrayName:       A
  - String:          ' '
  - BundleName:      gmem0
  - String:          ' '
  - LoopName:        VITIS_LOOP_18_1
  - String:          ' '
  - LoopLoc:         'src/spmm_device_fpga.cpp:18:19'
  - String:          ' '
  - Function:        'load_A(ap_uint<64> const*, int, hls::stream<ap_uint<64>, 0>&)'
    DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 16, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 18, Column: 19 }
Function:        _Z6load_APK7ap_uintILi64EEiRN3hls6streamIS0_Li0EEE.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '64'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - String:          ' '
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem0
  - String:          ' '
  - LoopName:        VITIS_LOOP_18_1
  - String:          ' '
  - LoopLoc:         'src/spmm_device_fpga.cpp:18:19'
  - String:          ' '
  - Function:        'load_A(ap_uint<64> const*, int, hls::stream<ap_uint<64>, 0>&) (.1)'
    DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 16, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: src/spmm_device_fpga.cpp, Line: 18, Column: 19 }
Function:        _Z6load_APK7ap_uintILi64EEiRN3hls6streamIS0_Li0EEE.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '64'
  - String:          ' in loop '''
  - LoopName:        VITIS_LOOP_18_1
  - String:          '''('
  - LoopLoc:         'src/spmm_device_fpga.cpp:18:19'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem0
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
