

================================================================
== Vitis HLS Report for 'set_tile_Pipeline_copy_tile_loop'
================================================================
* Date:           Mon Sep  1 14:40:10 2025

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        spmm_prj
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.920 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       15|       15|  60.000 ns|  60.000 ns|   15|   15|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- copy_tile_loop  |       13|       13|        10|          1|          1|     4|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.02>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 13 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tile_3_0 = alloca i32 1"   --->   Operation 14 'alloca' 'tile_3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tile_2_0 = alloca i32 1"   --->   Operation 15 'alloca' 'tile_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tile_1_0 = alloca i32 1"   --->   Operation 16 'alloca' 'tile_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tile_0_0 = alloca i32 1"   --->   Operation 17 'alloca' 'tile_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%used = alloca i32 1"   --->   Operation 18 'alloca' 'used' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%seen_y = alloca i32 1"   --->   Operation 19 'alloca' 'seen_y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%seen_y_1 = alloca i32 1"   --->   Operation 20 'alloca' 'seen_y_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%seen_y_2 = alloca i32 1"   --->   Operation 21 'alloca' 'seen_y_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%seen_y_3 = alloca i32 1"   --->   Operation 22 'alloca' 'seen_y_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%seen_v = alloca i32 1"   --->   Operation 23 'alloca' 'seen_v' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%seen_v_4 = alloca i32 1"   --->   Operation 24 'alloca' 'seen_v_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%seen_v_5 = alloca i32 1"   --->   Operation 25 'alloca' 'seen_v_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%seen_v_6 = alloca i32 1"   --->   Operation 26 'alloca' 'seen_v_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem1, void @empty_13, i32 0, i32 0, void @empty_12, i32 0, i32 0, void @empty_9, void @empty_10, void @empty_12, i32 16, i32 16, i32 16, i32 16, void @empty_12, void @empty_12, i32 4294967295, i32 0"   --->   Operation 27 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem2, void @empty_13, i32 0, i32 0, void @empty_12, i32 0, i32 0, void @empty_14, void @empty_10, void @empty_12, i32 16, i32 16, i32 16, i32 16, void @empty_12, void @empty_12, i32 4294967295, i32 0"   --->   Operation 28 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%nnz_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %nnz"   --->   Operation 29 'read' 'nnz_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%pointer_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %pointer"   --->   Operation 30 'read' 'pointer_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%col_idx_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %col_idx"   --->   Operation 31 'read' 'col_idx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%a_val_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %a_val"   --->   Operation 32 'read' 'a_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%seen_v_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %seen_v_reload"   --->   Operation 33 'read' 'seen_v_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%seen_v_1_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %seen_v_1_reload"   --->   Operation 34 'read' 'seen_v_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%seen_v_2_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %seen_v_2_reload"   --->   Operation 35 'read' 'seen_v_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%seen_v_3_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %seen_v_3_reload"   --->   Operation 36 'read' 'seen_v_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%p_read_1 = read i96 @_ssdm_op_Read.ap_auto.i96, i96 %p_read3"   --->   Operation 37 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%p_read_2 = read i96 @_ssdm_op_Read.ap_auto.i96, i96 %p_read2"   --->   Operation 38 'read' 'p_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%p_read_3 = read i96 @_ssdm_op_Read.ap_auto.i96, i96 %p_read1"   --->   Operation 39 'read' 'p_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%p_read_4 = read i96 @_ssdm_op_Read.ap_auto.i96, i96 %p_read"   --->   Operation 40 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 %seen_v_3_reload_read, i1 %seen_v_6"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 42 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 %seen_v_2_reload_read, i1 %seen_v_5"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 43 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 %seen_v_1_reload_read, i1 %seen_v_4"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 44 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 %seen_v_reload_read, i1 %seen_v"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 45 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %used"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 46 [1/1] (0.38ns)   --->   "%store_ln0 = store i96 %p_read_4, i96 %tile_0_0"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 47 [1/1] (0.38ns)   --->   "%store_ln0 = store i96 %p_read_3, i96 %tile_1_0"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 48 [1/1] (0.38ns)   --->   "%store_ln0 = store i96 %p_read_2, i96 %tile_2_0"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 49 [1/1] (0.38ns)   --->   "%store_ln0 = store i96 %p_read_1, i96 %tile_3_0"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 50 [1/1] (0.38ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body4"   --->   Operation 51 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%i_4 = load i3 %i" [src/spmm_device_fpga.cpp:45]   --->   Operation 52 'load' 'i_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.49ns)   --->   "%icmp_ln43 = icmp_eq  i3 %i_4, i3 4" [src/spmm_device_fpga.cpp:43]   --->   Operation 53 'icmp' 'icmp_ln43' <Predicate = true> <Delay = 0.49> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.57ns)   --->   "%add_ln43 = add i3 %i_4, i3 1" [src/spmm_device_fpga.cpp:43]   --->   Operation 54 'add' 'add_ln43' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln43 = br i1 %icmp_ln43, void %for.body4.split, void %for.end43.exitStub" [src/spmm_device_fpga.cpp:43]   --->   Operation 55 'br' 'br_ln43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_12" [src/spmm_device_fpga.cpp:44]   --->   Operation 56 'specpipeline' 'specpipeline_ln44' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [src/spmm_device_fpga.cpp:28]   --->   Operation 57 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln45 = trunc i3 %i_4" [src/spmm_device_fpga.cpp:45]   --->   Operation 58 'trunc' 'trunc_ln45' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i2 %trunc_ln45" [src/spmm_device_fpga.cpp:45]   --->   Operation 59 'zext' 'zext_ln45' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.88ns)   --->   "%idx = add i32 %zext_ln45, i32 %pointer_read" [src/spmm_device_fpga.cpp:45]   --->   Operation 60 'add' 'idx' <Predicate = (!icmp_ln43)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.85ns)   --->   "%icmp_ln46 = icmp_ult  i32 %idx, i32 %nnz_read" [src/spmm_device_fpga.cpp:46]   --->   Operation 61 'icmp' 'icmp_ln46' <Predicate = (!icmp_ln43)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln46 = br i1 %icmp_ln46, void %if.else, void %for.body14" [src/spmm_device_fpga.cpp:46]   --->   Operation 62 'br' 'br_ln46' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.34ns)   --->   "%switch_ln74 = switch i2 %trunc_ln45, void %arrayidx391.case.3, i2 0, void %arrayidx391.case.0, i2 1, void %arrayidx391.case.1, i2 2, void %arrayidx391.case.2" [src/spmm_device_fpga.cpp:74]   --->   Operation 63 'switch' 'switch_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46)> <Delay = 0.34>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc41"   --->   Operation 64 'br' 'br_ln0' <Predicate = (!icmp_ln43 & !icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i32.i2, i32 %idx, i2 0" [src/spmm_device_fpga.cpp:48]   --->   Operation 65 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i34 %shl_ln" [src/spmm_device_fpga.cpp:48]   --->   Operation 66 'zext' 'zext_ln48' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (1.14ns)   --->   "%add_ln48 = add i64 %zext_ln48, i64 %a_val_read" [src/spmm_device_fpga.cpp:48]   --->   Operation 67 'add' 'add_ln48' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln48, i32 2, i32 63" [src/spmm_device_fpga.cpp:48]   --->   Operation 68 'partselect' 'trunc_ln2' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%sext_ln48 = sext i62 %trunc_ln2" [src/spmm_device_fpga.cpp:48]   --->   Operation 69 'sext' 'sext_ln48' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%gmem2_addr = getelementptr i32 %gmem2, i64 %sext_ln48" [src/spmm_device_fpga.cpp:48]   --->   Operation 70 'getelementptr' 'gmem2_addr' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (1.14ns)   --->   "%add_ln49 = add i64 %zext_ln48, i64 %col_idx_read" [src/spmm_device_fpga.cpp:49]   --->   Operation 71 'add' 'add_ln49' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln49, i32 2, i32 63" [src/spmm_device_fpga.cpp:49]   --->   Operation 72 'partselect' 'trunc_ln3' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%sext_ln49 = sext i62 %trunc_ln3" [src/spmm_device_fpga.cpp:49]   --->   Operation 73 'sext' 'sext_ln49' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%gmem1_addr = getelementptr i32 %gmem1, i64 %sext_ln49" [src/spmm_device_fpga.cpp:49]   --->   Operation 74 'getelementptr' 'gmem1_addr' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.34ns)   --->   "%switch_ln61 = switch i2 %trunc_ln45, void %arrayidx391.case.35, i2 0, void %arrayidx391.case.02, i2 1, void %arrayidx391.case.13, i2 2, void %arrayidx391.case.24" [src/spmm_device_fpga.cpp:61]   --->   Operation 75 'switch' 'switch_ln61' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.34>
ST_1 : Operation 76 [1/1] (0.38ns)   --->   "%store_ln43 = store i3 %add_ln43, i3 %i" [src/spmm_device_fpga.cpp:43]   --->   Operation 76 'store' 'store_ln43' <Predicate = (!icmp_ln43)> <Delay = 0.38>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln43 = br void %for.body4" [src/spmm_device_fpga.cpp:43]   --->   Operation 77 'br' 'br_ln43' <Predicate = (!icmp_ln43)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.92>
ST_2 : Operation 78 [7/7] (2.92ns)   --->   "%gmem2_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [src/spmm_device_fpga.cpp:48]   --->   Operation 78 'readreq' 'gmem2_load_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 79 [7/7] (2.92ns)   --->   "%y_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem1_addr, i32 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 79 'readreq' 'y_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 2.92>
ST_3 : Operation 80 [6/7] (2.92ns)   --->   "%gmem2_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [src/spmm_device_fpga.cpp:48]   --->   Operation 80 'readreq' 'gmem2_load_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 81 [6/7] (2.92ns)   --->   "%y_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem1_addr, i32 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 81 'readreq' 'y_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 2.92>
ST_4 : Operation 82 [5/7] (2.92ns)   --->   "%gmem2_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [src/spmm_device_fpga.cpp:48]   --->   Operation 82 'readreq' 'gmem2_load_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 83 [5/7] (2.92ns)   --->   "%y_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem1_addr, i32 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 83 'readreq' 'y_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 2.92>
ST_5 : Operation 84 [4/7] (2.92ns)   --->   "%gmem2_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [src/spmm_device_fpga.cpp:48]   --->   Operation 84 'readreq' 'gmem2_load_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 85 [4/7] (2.92ns)   --->   "%y_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem1_addr, i32 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 85 'readreq' 'y_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 2.92>
ST_6 : Operation 86 [3/7] (2.92ns)   --->   "%gmem2_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [src/spmm_device_fpga.cpp:48]   --->   Operation 86 'readreq' 'gmem2_load_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 87 [3/7] (2.92ns)   --->   "%y_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem1_addr, i32 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 87 'readreq' 'y_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 2.92>
ST_7 : Operation 88 [2/7] (2.92ns)   --->   "%gmem2_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [src/spmm_device_fpga.cpp:48]   --->   Operation 88 'readreq' 'gmem2_load_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 89 [2/7] (2.92ns)   --->   "%y_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem1_addr, i32 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 89 'readreq' 'y_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 2.92>
ST_8 : Operation 90 [1/7] (2.92ns)   --->   "%gmem2_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [src/spmm_device_fpga.cpp:48]   --->   Operation 90 'readreq' 'gmem2_load_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 91 [1/7] (2.92ns)   --->   "%y_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem1_addr, i32 1" [src/spmm_device_fpga.cpp:49]   --->   Operation 91 'readreq' 'y_req' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 2.92>
ST_9 : Operation 92 [1/1] (2.92ns)   --->   "%gmem2_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem2_addr" [src/spmm_device_fpga.cpp:48]   --->   Operation 92 'read' 'gmem2_addr_read' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 93 [1/1] (2.92ns)   --->   "%y = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem1_addr" [src/spmm_device_fpga.cpp:49]   --->   Operation 93 'read' 'y' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 1.61>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%used_2 = load i32 %used" [src/spmm_device_fpga.cpp:68]   --->   Operation 94 'load' 'used_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%seen_y_4 = load i32 %seen_y"   --->   Operation 95 'load' 'seen_y_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%seen_y_5 = load i32 %seen_y_1"   --->   Operation 96 'load' 'seen_y_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%seen_y_6 = load i32 %seen_y_2"   --->   Operation 97 'load' 'seen_y_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%seen_y_7 = load i32 %seen_y_3"   --->   Operation 98 'load' 'seen_y_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%seen_v_7 = load i1 %seen_v"   --->   Operation 99 'load' 'seen_v_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%seen_v_8 = load i1 %seen_v_4"   --->   Operation 100 'load' 'seen_v_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (0.00ns)   --->   "%seen_v_9 = load i1 %seen_v_5"   --->   Operation 101 'load' 'seen_v_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "%seen_v_10 = load i1 %seen_v_6"   --->   Operation 102 'load' 'seen_v_10' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 103 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 104 [1/1] (0.00ns)   --->   "%write_ln74 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_2, i1 1" [src/spmm_device_fpga.cpp:74]   --->   Operation 104 'write' 'write_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.00>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln74 = br void %arrayidx391.exit" [src/spmm_device_fpga.cpp:74]   --->   Operation 105 'br' 'br_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%write_ln74 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_1, i1 1" [src/spmm_device_fpga.cpp:74]   --->   Operation 106 'write' 'write_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.00>
ST_10 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln74 = br void %arrayidx391.exit" [src/spmm_device_fpga.cpp:74]   --->   Operation 107 'br' 'br_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.00>
ST_10 : Operation 108 [1/1] (0.00ns)   --->   "%write_ln74 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_0, i1 1" [src/spmm_device_fpga.cpp:74]   --->   Operation 108 'write' 'write_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.00>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%br_ln74 = br void %arrayidx391.exit" [src/spmm_device_fpga.cpp:74]   --->   Operation 109 'br' 'br_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (0.00ns)   --->   "%write_ln74 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_3, i1 1" [src/spmm_device_fpga.cpp:74]   --->   Operation 110 'write' 'write_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.00>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%br_ln74 = br void %arrayidx391.exit" [src/spmm_device_fpga.cpp:74]   --->   Operation 111 'br' 'br_ln74' <Predicate = (!icmp_ln43 & !icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.00>
ST_10 : Operation 112 [1/1] (0.85ns)   --->   "%icmp_ln57 = icmp_eq  i32 %seen_y_4, i32 %y" [src/spmm_device_fpga.cpp:57]   --->   Operation 112 'icmp' 'icmp_ln57' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node dup_1)   --->   "%dup = and i1 %seen_v_7, i1 %icmp_ln57" [src/spmm_device_fpga.cpp:57]   --->   Operation 113 'and' 'dup' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 114 [1/1] (0.85ns)   --->   "%icmp_ln57_1 = icmp_eq  i32 %seen_y_5, i32 %y" [src/spmm_device_fpga.cpp:57]   --->   Operation 114 'icmp' 'icmp_ln57_1' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node or_ln57)   --->   "%and_ln57 = and i1 %seen_v_8, i1 %icmp_ln57_1" [src/spmm_device_fpga.cpp:57]   --->   Operation 115 'and' 'and_ln57' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 116 [1/1] (0.85ns)   --->   "%icmp_ln57_2 = icmp_eq  i32 %seen_y_6, i32 %y" [src/spmm_device_fpga.cpp:57]   --->   Operation 116 'icmp' 'icmp_ln57_2' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node or_ln57)   --->   "%and_ln57_1 = and i1 %seen_v_9, i1 %icmp_ln57_2" [src/spmm_device_fpga.cpp:57]   --->   Operation 117 'and' 'and_ln57_1' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 118 [1/1] (0.85ns)   --->   "%icmp_ln57_3 = icmp_eq  i32 %seen_y_7, i32 %y" [src/spmm_device_fpga.cpp:57]   --->   Operation 118 'icmp' 'icmp_ln57_3' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node dup_1)   --->   "%and_ln57_2 = and i1 %seen_v_10, i1 %icmp_ln57_3" [src/spmm_device_fpga.cpp:57]   --->   Operation 119 'and' 'and_ln57_2' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 120 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln57 = or i1 %and_ln57, i1 %and_ln57_1" [src/spmm_device_fpga.cpp:57]   --->   Operation 120 'or' 'or_ln57' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node dup_1)   --->   "%or_ln57_1 = or i1 %dup, i1 %and_ln57_2" [src/spmm_device_fpga.cpp:57]   --->   Operation 121 'or' 'or_ln57_1' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 122 [1/1] (0.12ns) (out node of the LUT)   --->   "%dup_1 = or i1 %or_ln57_1, i1 %or_ln57" [src/spmm_device_fpga.cpp:57]   --->   Operation 122 'or' 'dup_1' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 123 [1/1] (0.00ns)   --->   "%tile_2_0_load_1 = load i96 %tile_2_0" [src/spmm_device_fpga.cpp:61]   --->   Operation 123 'load' 'tile_2_0_load_1' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.00>
ST_10 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i32 @_ssdm_op_PartSelect.i32.i96.i32.i32, i96 %tile_2_0_load_1, i32 32, i32 63" [src/spmm_device_fpga.cpp:61]   --->   Operation 124 'partselect' 'tmp_3' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.00>
ST_10 : Operation 125 [1/1] (0.00ns)   --->   "%or_ln62_3 = bitconcatenate i96 @_ssdm_op_BitConcatenate.i96.i32.i32.i32, i32 %y, i32 %tmp_3, i32 %gmem2_addr_read" [src/spmm_device_fpga.cpp:62]   --->   Operation 125 'bitconcatenate' 'or_ln62_3' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (0.00ns)   --->   "%write_ln63 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_2, i1 %dup_1" [src/spmm_device_fpga.cpp:63]   --->   Operation 126 'write' 'write_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.00>
ST_10 : Operation 127 [1/1] (0.38ns)   --->   "%store_ln63 = store i96 %or_ln62_3, i96 %tile_2_0" [src/spmm_device_fpga.cpp:63]   --->   Operation 127 'store' 'store_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.38>
ST_10 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx391.exit1" [src/spmm_device_fpga.cpp:63]   --->   Operation 128 'br' 'br_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 2)> <Delay = 0.00>
ST_10 : Operation 129 [1/1] (0.00ns)   --->   "%tile_1_0_load_1 = load i96 %tile_1_0" [src/spmm_device_fpga.cpp:61]   --->   Operation 129 'load' 'tile_1_0_load_1' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.00>
ST_10 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i32 @_ssdm_op_PartSelect.i32.i96.i32.i32, i96 %tile_1_0_load_1, i32 32, i32 63" [src/spmm_device_fpga.cpp:61]   --->   Operation 130 'partselect' 'tmp_2' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "%or_ln62_2 = bitconcatenate i96 @_ssdm_op_BitConcatenate.i96.i32.i32.i32, i32 %y, i32 %tmp_2, i32 %gmem2_addr_read" [src/spmm_device_fpga.cpp:62]   --->   Operation 131 'bitconcatenate' 'or_ln62_2' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.00>
ST_10 : Operation 132 [1/1] (0.00ns)   --->   "%write_ln63 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_1, i1 %dup_1" [src/spmm_device_fpga.cpp:63]   --->   Operation 132 'write' 'write_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.00>
ST_10 : Operation 133 [1/1] (0.38ns)   --->   "%store_ln63 = store i96 %or_ln62_2, i96 %tile_1_0" [src/spmm_device_fpga.cpp:63]   --->   Operation 133 'store' 'store_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.38>
ST_10 : Operation 134 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx391.exit1" [src/spmm_device_fpga.cpp:63]   --->   Operation 134 'br' 'br_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 1)> <Delay = 0.00>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%tile_0_0_load_1 = load i96 %tile_0_0" [src/spmm_device_fpga.cpp:61]   --->   Operation 135 'load' 'tile_0_0_load_1' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i32 @_ssdm_op_PartSelect.i32.i96.i32.i32, i96 %tile_0_0_load_1, i32 32, i32 63" [src/spmm_device_fpga.cpp:61]   --->   Operation 136 'partselect' 'tmp_1' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%or_ln62_1 = bitconcatenate i96 @_ssdm_op_BitConcatenate.i96.i32.i32.i32, i32 %y, i32 %tmp_1, i32 %gmem2_addr_read" [src/spmm_device_fpga.cpp:62]   --->   Operation 137 'bitconcatenate' 'or_ln62_1' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%write_ln63 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_0, i1 %dup_1" [src/spmm_device_fpga.cpp:63]   --->   Operation 138 'write' 'write_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.38ns)   --->   "%store_ln63 = store i96 %or_ln62_1, i96 %tile_0_0" [src/spmm_device_fpga.cpp:63]   --->   Operation 139 'store' 'store_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.38>
ST_10 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx391.exit1" [src/spmm_device_fpga.cpp:63]   --->   Operation 140 'br' 'br_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 0)> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%tile_3_0_load_1 = load i96 %tile_3_0" [src/spmm_device_fpga.cpp:61]   --->   Operation 141 'load' 'tile_3_0_load_1' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%tmp = partselect i32 @_ssdm_op_PartSelect.i32.i96.i32.i32, i96 %tile_3_0_load_1, i32 32, i32 63" [src/spmm_device_fpga.cpp:61]   --->   Operation 142 'partselect' 'tmp' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i96 @_ssdm_op_BitConcatenate.i96.i32.i32.i32, i32 %y, i32 %tmp, i32 %gmem2_addr_read" [src/spmm_device_fpga.cpp:62]   --->   Operation 143 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.00>
ST_10 : Operation 144 [1/1] (0.00ns)   --->   "%write_ln63 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tile_ref_3, i1 %dup_1" [src/spmm_device_fpga.cpp:63]   --->   Operation 144 'write' 'write_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.00>
ST_10 : Operation 145 [1/1] (0.38ns)   --->   "%store_ln63 = store i96 %or_ln, i96 %tile_3_0" [src/spmm_device_fpga.cpp:63]   --->   Operation 145 'store' 'store_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.38>
ST_10 : Operation 146 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx391.exit1" [src/spmm_device_fpga.cpp:63]   --->   Operation 146 'br' 'br_ln63' <Predicate = (!icmp_ln43 & icmp_ln46 & trunc_ln45 == 3)> <Delay = 0.00>
ST_10 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln67)   --->   "%xor_ln67 = xor i1 %dup_1, i1 1" [src/spmm_device_fpga.cpp:67]   --->   Operation 147 'xor' 'xor_ln67' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %used_2, i32 2, i32 31" [src/spmm_device_fpga.cpp:67]   --->   Operation 148 'partselect' 'tmp_4' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 149 [1/1] (0.83ns)   --->   "%icmp_ln67 = icmp_slt  i30 %tmp_4, i30 1" [src/spmm_device_fpga.cpp:67]   --->   Operation 149 'icmp' 'icmp_ln67' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.83> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 150 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln67 = and i1 %icmp_ln67, i1 %xor_ln67" [src/spmm_device_fpga.cpp:67]   --->   Operation 150 'and' 'and_ln67' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.00ns)   --->   "%br_ln67 = br i1 %and_ln67, void %for.inc41, void %if.then32_ifconv" [src/spmm_device_fpga.cpp:67]   --->   Operation 151 'br' 'br_ln67' <Predicate = (!icmp_ln43 & icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 152 [1/1] (0.00ns)   --->   "%trunc_ln68 = trunc i32 %used_2" [src/spmm_device_fpga.cpp:68]   --->   Operation 152 'trunc' 'trunc_ln68' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00>
ST_10 : Operation 153 [1/1] (0.34ns)   --->   "%icmp_ln68 = icmp_eq  i2 %trunc_ln68, i2 0" [src/spmm_device_fpga.cpp:68]   --->   Operation 153 'icmp' 'icmp_ln68' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 154 [1/1] (0.22ns)   --->   "%seen_y_9 = select i1 %icmp_ln68, i32 %y, i32 %seen_y_4" [src/spmm_device_fpga.cpp:68]   --->   Operation 154 'select' 'seen_y_9' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 155 [1/1] (0.34ns)   --->   "%icmp_ln68_1 = icmp_eq  i2 %trunc_ln68, i2 1" [src/spmm_device_fpga.cpp:68]   --->   Operation 155 'icmp' 'icmp_ln68_1' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 156 [1/1] (0.22ns)   --->   "%seen_y_10 = select i1 %icmp_ln68_1, i32 %y, i32 %seen_y_5" [src/spmm_device_fpga.cpp:68]   --->   Operation 156 'select' 'seen_y_10' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 157 [1/1] (0.34ns)   --->   "%icmp_ln68_2 = icmp_eq  i2 %trunc_ln68, i2 2" [src/spmm_device_fpga.cpp:68]   --->   Operation 157 'icmp' 'icmp_ln68_2' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 158 [1/1] (0.22ns)   --->   "%seen_y_11 = select i1 %icmp_ln68_2, i32 %y, i32 %seen_y_6" [src/spmm_device_fpga.cpp:68]   --->   Operation 158 'select' 'seen_y_11' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%or_ln68 = or i1 %icmp_ln68_2, i1 %icmp_ln68_1" [src/spmm_device_fpga.cpp:68]   --->   Operation 159 'or' 'or_ln68' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 160 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln68_1 = or i1 %or_ln68, i1 %icmp_ln68" [src/spmm_device_fpga.cpp:68]   --->   Operation 160 'or' 'or_ln68_1' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 161 [1/1] (0.22ns)   --->   "%seen_y_12 = select i1 %or_ln68_1, i32 %seen_y_7, i32 %y" [src/spmm_device_fpga.cpp:68]   --->   Operation 161 'select' 'seen_y_12' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node seen_v_14)   --->   "%xor_ln68 = xor i1 %or_ln68_1, i1 1" [src/spmm_device_fpga.cpp:68]   --->   Operation 162 'xor' 'xor_ln68' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 163 [1/1] (0.12ns) (out node of the LUT)   --->   "%seen_v_14 = or i1 %seen_v_10, i1 %xor_ln68" [src/spmm_device_fpga.cpp:68]   --->   Operation 163 'or' 'seen_v_14' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 164 [1/1] (0.12ns)   --->   "%seen_v_13 = or i1 %icmp_ln68_2, i1 %seen_v_9" [src/spmm_device_fpga.cpp:68]   --->   Operation 164 'or' 'seen_v_13' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 165 [1/1] (0.12ns)   --->   "%seen_v_12 = or i1 %icmp_ln68_1, i1 %seen_v_8" [src/spmm_device_fpga.cpp:68]   --->   Operation 165 'or' 'seen_v_12' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 166 [1/1] (0.12ns)   --->   "%seen_v_11 = or i1 %icmp_ln68, i1 %seen_v_7" [src/spmm_device_fpga.cpp:68]   --->   Operation 166 'or' 'seen_v_11' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 167 [1/1] (0.88ns)   --->   "%used_3 = add i32 %used_2, i32 1" [src/spmm_device_fpga.cpp:70]   --->   Operation 167 'add' 'used_3' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 168 [1/1] (0.38ns)   --->   "%store_ln71 = store i1 %seen_v_14, i1 %seen_v_6" [src/spmm_device_fpga.cpp:71]   --->   Operation 168 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.38>
ST_10 : Operation 169 [1/1] (0.38ns)   --->   "%store_ln71 = store i1 %seen_v_13, i1 %seen_v_5" [src/spmm_device_fpga.cpp:71]   --->   Operation 169 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.38>
ST_10 : Operation 170 [1/1] (0.38ns)   --->   "%store_ln71 = store i1 %seen_v_12, i1 %seen_v_4" [src/spmm_device_fpga.cpp:71]   --->   Operation 170 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.38>
ST_10 : Operation 171 [1/1] (0.38ns)   --->   "%store_ln71 = store i1 %seen_v_11, i1 %seen_v" [src/spmm_device_fpga.cpp:71]   --->   Operation 171 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.38>
ST_10 : Operation 172 [1/1] (0.00ns)   --->   "%store_ln71 = store i32 %seen_y_12, i32 %seen_y_3" [src/spmm_device_fpga.cpp:71]   --->   Operation 172 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "%store_ln71 = store i32 %seen_y_11, i32 %seen_y_2" [src/spmm_device_fpga.cpp:71]   --->   Operation 173 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns)   --->   "%store_ln71 = store i32 %seen_y_10, i32 %seen_y_1" [src/spmm_device_fpga.cpp:71]   --->   Operation 174 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00>
ST_10 : Operation 175 [1/1] (0.00ns)   --->   "%store_ln71 = store i32 %seen_y_9, i32 %seen_y" [src/spmm_device_fpga.cpp:71]   --->   Operation 175 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00>
ST_10 : Operation 176 [1/1] (0.38ns)   --->   "%store_ln71 = store i32 %used_3, i32 %used" [src/spmm_device_fpga.cpp:71]   --->   Operation 176 'store' 'store_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.38>
ST_10 : Operation 177 [1/1] (0.00ns)   --->   "%br_ln71 = br void %for.inc41" [src/spmm_device_fpga.cpp:71]   --->   Operation 177 'br' 'br_ln71' <Predicate = (!icmp_ln43 & icmp_ln46 & and_ln67)> <Delay = 0.00>
ST_10 : Operation 178 [1/1] (0.00ns)   --->   "%tile_3_0_load = load i96 %tile_3_0"   --->   Operation 178 'load' 'tile_3_0_load' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "%tile_2_0_load = load i96 %tile_2_0"   --->   Operation 179 'load' 'tile_2_0_load' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 180 [1/1] (0.00ns)   --->   "%tile_1_0_load = load i96 %tile_1_0"   --->   Operation 180 'load' 'tile_1_0_load' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 181 [1/1] (0.00ns)   --->   "%tile_0_0_load = load i96 %tile_0_0"   --->   Operation 181 'load' 'tile_0_0_load' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i96P0A, i96 %tile_0_0_out, i96 %tile_0_0_load"   --->   Operation 182 'write' 'write_ln0' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i96P0A, i96 %tile_1_0_out, i96 %tile_1_0_load"   --->   Operation 183 'write' 'write_ln0' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 184 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i96P0A, i96 %tile_2_0_out, i96 %tile_2_0_load"   --->   Operation 184 'write' 'write_ln0' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i96P0A, i96 %tile_3_0_out, i96 %tile_3_0_load"   --->   Operation 185 'write' 'write_ln0' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 186 'ret' 'ret_ln0' <Predicate = (icmp_ln43)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 2.03ns
The critical path consists of the following:
	'alloca' operation ('i') [23]  (0 ns)
	'load' operation ('i', src/spmm_device_fpga.cpp:45) on local variable 'i' [63]  (0 ns)
	'add' operation ('idx', src/spmm_device_fpga.cpp:45) [82]  (0.88 ns)
	'add' operation ('add_ln48', src/spmm_device_fpga.cpp:48) [104]  (1.15 ns)

 <State 2>: 2.92ns
The critical path consists of the following:
	bus request operation ('gmem2_load_req', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [108]  (2.92 ns)

 <State 3>: 2.92ns
The critical path consists of the following:
	bus request operation ('gmem2_load_req', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [108]  (2.92 ns)

 <State 4>: 2.92ns
The critical path consists of the following:
	bus request operation ('gmem2_load_req', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [108]  (2.92 ns)

 <State 5>: 2.92ns
The critical path consists of the following:
	bus request operation ('gmem2_load_req', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [108]  (2.92 ns)

 <State 6>: 2.92ns
The critical path consists of the following:
	bus request operation ('gmem2_load_req', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [108]  (2.92 ns)

 <State 7>: 2.92ns
The critical path consists of the following:
	bus request operation ('gmem2_load_req', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [108]  (2.92 ns)

 <State 8>: 2.92ns
The critical path consists of the following:
	bus request operation ('gmem2_load_req', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [108]  (2.92 ns)

 <State 9>: 2.92ns
The critical path consists of the following:
	bus read operation ('gmem2_addr_read', src/spmm_device_fpga.cpp:48) on port 'gmem2' (src/spmm_device_fpga.cpp:48) [109]  (2.92 ns)

 <State 10>: 1.61ns
The critical path consists of the following:
	'load' operation ('used', src/spmm_device_fpga.cpp:68) on local variable 'used' [64]  (0 ns)
	'add' operation ('used', src/spmm_device_fpga.cpp:70) [178]  (0.88 ns)
	'store' operation ('store_ln71', src/spmm_device_fpga.cpp:71) of variable 'used', src/spmm_device_fpga.cpp:70 on local variable 'used' [187]  (0.387 ns)
	blocking operation 0.345 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
